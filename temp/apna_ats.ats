FiniteAutomaton nfa_0 = (
    alphabet = {"i = 0" "a = 0" "b = 0" "i >= 5" "a == 15 - b" "i < 5" "a = a + 1" "b = b + 2" "a = a + 2" "b = b + 1" "i = i + 1" "i != ( a + b ) / 3"},
    states = {"q0" "q1" "q2" "q4" "q5" "q6" "q7" "q8" "q9" "q10" "qerr"},
    initialStates = {"q0"},
    finalStates = {"qerr"},
    transitions = {
        ("q0" "i = 0" "q1")
        ("q1" "a = 0" "q2")
        ("q2" "b = 0" "q4")
        ("q4" "i >= 5" "q5")
        ("q4" "i < 5" "q10")
        ("q10" "i != ( a + b ) / 3" "q6")
        ("q6" "a = a + 1" "q7")
        ("q6" "a = a + 2" "q9")
        ("q7" "b = b + 2" "q8")
        ("q9" "b = b + 1" "q8")
        ("q8" "i = i + 1" "q4")
        ("q5" "a == 15 - b" "qerr")
    }
);
FiniteAutomaton fha_1 = (
     alphabet = {"a == 15 - b" "i != ( a + b ) / 3" "i >= 5" "i < 5" "a = 0" "b = b + 2" "b = b + 1" "b = 0" "i = i + 1" "i = 0" "a = a + 2" "a = a + 1" },
     states = {q0 q1 q2 },
     initialStates = {q0},
     finalStates = {q2},
     transitions = {
         (q0 "i = 0" q0)
         (q0 "a = 0" q0)
         (q0 "b = 0" q0)
         (q0 "i >= 5" q0)
         (q0 "a == 15 - b" q0)
         (q0 "i < 5" q0)
         (q0 "a = a + 1" q0)
         (q0 "b = b + 2" q0)
         (q0 "a = a + 2" q0)
         (q0 "b = b + 1" q0)
         (q0 "i = i + 1" q0)
         (q0 "i != ( a + b ) / 3" q0)
         (q1 "i = 0" q1)
         (q0 "i = 0" q1)
         (q1 "a = 0" q1)
         (q1 "b = 0" q1)
         (q1 "i >= 5" q1)
         (q1 "a == 15 - b" q1)
         (q1 "i < 5" q1)
         (q1 "a = a + 1" q1)
         (q1 "b = b + 2" q1)
         (q1 "a = a + 2" q1)
         (q1 "b = b + 1" q1)
         (q1 "i != ( a + b ) / 3" q1)
         (q2 "i = 0" q2)
         (q2 "a = 0" q2)
         (q2 "b = 0" q2)
         (q2 "i >= 5" q2)
         (q1 "i >= 5" q2)
         (q2 "a == 15 - b" q2)
         (q2 "i < 5" q2)
         (q2 "a = a + 1" q2)
         (q2 "b = b + 2" q2)
         (q2 "a = a + 2" q2)
         (q2 "b = b + 1" q2)
         (q2 "i = i + 1" q2)
         (q2 "i != ( a + b ) / 3" q2)
     }
);

FiniteAutomaton nfa_1 = intersect(nfa_0,complement(fha_1));

FiniteAutomaton fha_2 = (
     alphabet = {"a == 15 - b" "i != ( a + b ) / 3" "i >= 5" "i < 5" "a = 0" "b = b + 2" "b = b + 1" "b = 0" "i = i + 1" "i = 0" "a = a + 2" "a = a + 1" },
     states = {q0 q1 q2 q3 },
     initialStates = {q0},
     finalStates = {q3},
     transitions = {
         (q0 "i = 0" q0)
         (q0 "a = 0" q0)
         (q0 "b = 0" q0)
         (q0 "i >= 5" q0)
         (q0 "a == 15 - b" q0)
         (q0 "i < 5" q0)
         (q0 "a = a + 1" q0)
         (q0 "b = b + 2" q0)
         (q0 "a = a + 2" q0)
         (q0 "b = b + 1" q0)
         (q0 "i = i + 1" q0)
         (q0 "i != ( a + b ) / 3" q0)
         (q1 "i = 0" q1)
         (q0 "i = 0" q1)
         (q1 "a = 0" q1)
         (q1 "b = 0" q1)
         (q1 "i >= 5" q1)
         (q1 "a == 15 - b" q1)
         (q1 "i < 5" q1)
         (q1 "a = a + 1" q1)
         (q1 "b = b + 2" q1)
         (q1 "a = a + 2" q1)
         (q1 "b = b + 1" q1)
         (q1 "i != ( a + b ) / 3" q1)
         (q2 "i = 0" q2)
         (q1 "i = 0" q2)
         (q2 "a = 0" q2)
         (q1 "a = 0" q2)
         (q2 "b = 0" q2)
         (q1 "b = 0" q2)
         (q2 "i >= 5" q2)
         (q1 "i >= 5" q2)
         (q2 "a == 15 - b" q2)
         (q1 "a == 15 - b" q2)
         (q2 "i < 5" q2)
         (q1 "i < 5" q2)
         (q2 "a = a + 1" q2)
         (q1 "a = a + 1" q2)
         (q2 "b = b + 2" q2)
         (q1 "b = b + 2" q2)
         (q2 "a = a + 2" q2)
         (q1 "a = a + 2" q2)
         (q2 "b = b + 1" q2)
         (q1 "b = b + 1" q2)
         (q1 "i = i + 1" q2)
         (q2 "i != ( a + b ) / 3" q2)
         (q1 "i != ( a + b ) / 3" q2)
         (q3 "i = 0" q3)
         (q3 "a = 0" q3)
         (q3 "b = 0" q3)
         (q3 "i >= 5" q3)
         (q2 "i >= 5" q3)
         (q3 "a == 15 - b" q3)
         (q3 "i < 5" q3)
         (q3 "a = a + 1" q3)
         (q3 "b = b + 2" q3)
         (q3 "a = a + 2" q3)
         (q3 "b = b + 1" q3)
         (q3 "i = i + 1" q3)
         (q3 "i != ( a + b ) / 3" q3)
     }
);

FiniteAutomaton nfa_2 = intersect(nfa_1,complement(fha_2));

FiniteAutomaton fha_3 = (
     alphabet = {"a == 15 - b" "i != ( a + b ) / 3" "i >= 5" "i < 5" "a = 0" "b = b + 2" "b = b + 1" "b = 0" "i = i + 1" "i = 0" "a = a + 2" "a = a + 1" },
     states = {q0 q1 q2 q3 q4 },
     initialStates = {q0},
     finalStates = {q4},
     transitions = {
         (q0 "i = 0" q0)
         (q0 "a = 0" q0)
         (q0 "b = 0" q0)
         (q0 "i >= 5" q0)
         (q0 "a == 15 - b" q0)
         (q0 "i < 5" q0)
         (q0 "a = a + 1" q0)
         (q0 "b = b + 2" q0)
         (q0 "a = a + 2" q0)
         (q0 "b = b + 1" q0)
         (q0 "i = i + 1" q0)
         (q0 "i != ( a + b ) / 3" q0)
         (q1 "i = 0" q1)
         (q0 "i = 0" q1)
         (q1 "a = 0" q1)
         (q1 "b = 0" q1)
         (q1 "i >= 5" q1)
         (q1 "a == 15 - b" q1)
         (q1 "i < 5" q1)
         (q1 "a = a + 1" q1)
         (q1 "b = b + 2" q1)
         (q1 "a = a + 2" q1)
         (q1 "b = b + 1" q1)
         (q1 "i != ( a + b ) / 3" q1)
         (q2 "i = 0" q2)
         (q1 "i = 0" q2)
         (q2 "a = 0" q2)
         (q1 "a = 0" q2)
         (q2 "b = 0" q2)
         (q1 "b = 0" q2)
         (q2 "i >= 5" q2)
         (q1 "i >= 5" q2)
         (q2 "a == 15 - b" q2)
         (q1 "a == 15 - b" q2)
         (q2 "i < 5" q2)
         (q1 "i < 5" q2)
         (q2 "a = a + 1" q2)
         (q1 "a = a + 1" q2)
         (q2 "b = b + 2" q2)
         (q1 "b = b + 2" q2)
         (q2 "a = a + 2" q2)
         (q1 "a = a + 2" q2)
         (q2 "b = b + 1" q2)
         (q1 "b = b + 1" q2)
         (q1 "i = i + 1" q2)
         (q2 "i != ( a + b ) / 3" q2)
         (q1 "i != ( a + b ) / 3" q2)
         (q3 "i = 0" q3)
         (q2 "i = 0" q3)
         (q3 "a = 0" q3)
         (q2 "a = 0" q3)
         (q3 "b = 0" q3)
         (q2 "b = 0" q3)
         (q3 "i >= 5" q3)
         (q2 "i >= 5" q3)
         (q3 "a == 15 - b" q3)
         (q2 "a == 15 - b" q3)
         (q3 "i < 5" q3)
         (q2 "i < 5" q3)
         (q3 "a = a + 1" q3)
         (q2 "a = a + 1" q3)
         (q3 "b = b + 2" q3)
         (q2 "b = b + 2" q3)
         (q3 "a = a + 2" q3)
         (q2 "a = a + 2" q3)
         (q3 "b = b + 1" q3)
         (q2 "b = b + 1" q3)
         (q2 "i = i + 1" q3)
         (q3 "i != ( a + b ) / 3" q3)
         (q2 "i != ( a + b ) / 3" q3)
         (q4 "i = 0" q4)
         (q4 "a = 0" q4)
         (q4 "b = 0" q4)
         (q4 "i >= 5" q4)
         (q3 "i >= 5" q4)
         (q4 "a == 15 - b" q4)
         (q4 "i < 5" q4)
         (q4 "a = a + 1" q4)
         (q4 "b = b + 2" q4)
         (q4 "a = a + 2" q4)
         (q4 "b = b + 1" q4)
         (q4 "i = i + 1" q4)
         (q4 "i != ( a + b ) / 3" q4)
     }
);

FiniteAutomaton nfa_3 = intersect(nfa_2,complement(fha_3));

FiniteAutomaton fha_4 = (
     alphabet = {"a == 15 - b" "i != ( a + b ) / 3" "i >= 5" "i < 5" "a = 0" "b = b + 2" "b = b + 1" "b = 0" "i = i + 1" "i = 0" "a = a + 2" "a = a + 1" },
     states = {q0 q1 q2 q3 q4 q5 },
     initialStates = {q0},
     finalStates = {q5},
     transitions = {
         (q0 "i = 0" q0)
         (q0 "a = 0" q0)
         (q0 "b = 0" q0)
         (q0 "i >= 5" q0)
         (q0 "a == 15 - b" q0)
         (q0 "i < 5" q0)
         (q0 "a = a + 1" q0)
         (q0 "b = b + 2" q0)
         (q0 "a = a + 2" q0)
         (q0 "b = b + 1" q0)
         (q0 "i = i + 1" q0)
         (q0 "i != ( a + b ) / 3" q0)
         (q1 "i = 0" q1)
         (q0 "i = 0" q1)
         (q1 "a = 0" q1)
         (q1 "b = 0" q1)
         (q1 "i >= 5" q1)
         (q1 "a == 15 - b" q1)
         (q1 "i < 5" q1)
         (q1 "a = a + 1" q1)
         (q1 "b = b + 2" q1)
         (q1 "a = a + 2" q1)
         (q1 "b = b + 1" q1)
         (q1 "i != ( a + b ) / 3" q1)
         (q2 "i = 0" q2)
         (q1 "i = 0" q2)
         (q2 "a = 0" q2)
         (q1 "a = 0" q2)
         (q2 "b = 0" q2)
         (q1 "b = 0" q2)
         (q2 "i >= 5" q2)
         (q1 "i >= 5" q2)
         (q2 "a == 15 - b" q2)
         (q1 "a == 15 - b" q2)
         (q2 "i < 5" q2)
         (q1 "i < 5" q2)
         (q2 "a = a + 1" q2)
         (q1 "a = a + 1" q2)
         (q2 "b = b + 2" q2)
         (q1 "b = b + 2" q2)
         (q2 "a = a + 2" q2)
         (q1 "a = a + 2" q2)
         (q2 "b = b + 1" q2)
         (q1 "b = b + 1" q2)
         (q1 "i = i + 1" q2)
         (q2 "i != ( a + b ) / 3" q2)
         (q1 "i != ( a + b ) / 3" q2)
         (q3 "i = 0" q3)
         (q2 "i = 0" q3)
         (q3 "a = 0" q3)
         (q2 "a = 0" q3)
         (q3 "b = 0" q3)
         (q2 "b = 0" q3)
         (q3 "i >= 5" q3)
         (q2 "i >= 5" q3)
         (q3 "a == 15 - b" q3)
         (q2 "a == 15 - b" q3)
         (q3 "i < 5" q3)
         (q2 "i < 5" q3)
         (q3 "a = a + 1" q3)
         (q2 "a = a + 1" q3)
         (q3 "b = b + 2" q3)
         (q2 "b = b + 2" q3)
         (q3 "a = a + 2" q3)
         (q2 "a = a + 2" q3)
         (q3 "b = b + 1" q3)
         (q2 "b = b + 1" q3)
         (q2 "i = i + 1" q3)
         (q3 "i != ( a + b ) / 3" q3)
         (q2 "i != ( a + b ) / 3" q3)
         (q4 "i = 0" q4)
         (q3 "i = 0" q4)
         (q4 "a = 0" q4)
         (q3 "a = 0" q4)
         (q4 "b = 0" q4)
         (q3 "b = 0" q4)
         (q4 "i >= 5" q4)
         (q3 "i >= 5" q4)
         (q4 "a == 15 - b" q4)
         (q3 "a == 15 - b" q4)
         (q4 "i < 5" q4)
         (q3 "i < 5" q4)
         (q4 "a = a + 1" q4)
         (q3 "a = a + 1" q4)
         (q4 "b = b + 2" q4)
         (q3 "b = b + 2" q4)
         (q4 "a = a + 2" q4)
         (q3 "a = a + 2" q4)
         (q4 "b = b + 1" q4)
         (q3 "b = b + 1" q4)
         (q3 "i = i + 1" q4)
         (q4 "i != ( a + b ) / 3" q4)
         (q3 "i != ( a + b ) / 3" q4)
         (q5 "i = 0" q5)
         (q5 "a = 0" q5)
         (q5 "b = 0" q5)
         (q5 "i >= 5" q5)
         (q4 "i >= 5" q5)
         (q5 "a == 15 - b" q5)
         (q5 "i < 5" q5)
         (q5 "a = a + 1" q5)
         (q5 "b = b + 2" q5)
         (q5 "a = a + 2" q5)
         (q5 "b = b + 1" q5)
         (q5 "i = i + 1" q5)
         (q5 "i != ( a + b ) / 3" q5)
     }
);

FiniteAutomaton nfa_4 = intersect(nfa_3,complement(fha_4));

FiniteAutomaton fha_5 = (
     alphabet = {"a == 15 - b" "i != ( a + b ) / 3" "i >= 5" "i < 5" "a = 0" "b = b + 2" "b = b + 1" "b = 0" "i = i + 1" "i = 0" "a = a + 2" "a = a + 1" },
     states = {q0 q1 q2 q3 q4 q5 q6 },
     initialStates = {q0},
     finalStates = {q6},
     transitions = {
         (q0 "i = 0" q0)
         (q0 "a = 0" q0)
         (q0 "b = 0" q0)
         (q0 "i >= 5" q0)
         (q0 "a == 15 - b" q0)
         (q0 "i < 5" q0)
         (q0 "a = a + 1" q0)
         (q0 "b = b + 2" q0)
         (q0 "a = a + 2" q0)
         (q0 "b = b + 1" q0)
         (q0 "i = i + 1" q0)
         (q0 "i != ( a + b ) / 3" q0)
         (q1 "i = 0" q1)
         (q0 "i = 0" q1)
         (q1 "a = 0" q1)
         (q1 "b = 0" q1)
         (q1 "i >= 5" q1)
         (q1 "a == 15 - b" q1)
         (q1 "i < 5" q1)
         (q1 "a = a + 1" q1)
         (q1 "b = b + 2" q1)
         (q1 "a = a + 2" q1)
         (q1 "b = b + 1" q1)
         (q1 "i != ( a + b ) / 3" q1)
         (q2 "i = 0" q2)
         (q1 "i = 0" q2)
         (q2 "a = 0" q2)
         (q1 "a = 0" q2)
         (q2 "b = 0" q2)
         (q1 "b = 0" q2)
         (q2 "i >= 5" q2)
         (q1 "i >= 5" q2)
         (q2 "a == 15 - b" q2)
         (q1 "a == 15 - b" q2)
         (q2 "i < 5" q2)
         (q1 "i < 5" q2)
         (q2 "a = a + 1" q2)
         (q1 "a = a + 1" q2)
         (q2 "b = b + 2" q2)
         (q1 "b = b + 2" q2)
         (q2 "a = a + 2" q2)
         (q1 "a = a + 2" q2)
         (q2 "b = b + 1" q2)
         (q1 "b = b + 1" q2)
         (q1 "i = i + 1" q2)
         (q2 "i != ( a + b ) / 3" q2)
         (q1 "i != ( a + b ) / 3" q2)
         (q3 "i = 0" q3)
         (q2 "i = 0" q3)
         (q3 "a = 0" q3)
         (q2 "a = 0" q3)
         (q3 "b = 0" q3)
         (q2 "b = 0" q3)
         (q3 "i >= 5" q3)
         (q2 "i >= 5" q3)
         (q3 "a == 15 - b" q3)
         (q2 "a == 15 - b" q3)
         (q3 "i < 5" q3)
         (q2 "i < 5" q3)
         (q3 "a = a + 1" q3)
         (q2 "a = a + 1" q3)
         (q3 "b = b + 2" q3)
         (q2 "b = b + 2" q3)
         (q3 "a = a + 2" q3)
         (q2 "a = a + 2" q3)
         (q3 "b = b + 1" q3)
         (q2 "b = b + 1" q3)
         (q2 "i = i + 1" q3)
         (q3 "i != ( a + b ) / 3" q3)
         (q2 "i != ( a + b ) / 3" q3)
         (q4 "i = 0" q4)
         (q3 "i = 0" q4)
         (q4 "a = 0" q4)
         (q3 "a = 0" q4)
         (q4 "b = 0" q4)
         (q3 "b = 0" q4)
         (q4 "i >= 5" q4)
         (q3 "i >= 5" q4)
         (q4 "a == 15 - b" q4)
         (q3 "a == 15 - b" q4)
         (q4 "i < 5" q4)
         (q3 "i < 5" q4)
         (q4 "a = a + 1" q4)
         (q3 "a = a + 1" q4)
         (q4 "b = b + 2" q4)
         (q3 "b = b + 2" q4)
         (q4 "a = a + 2" q4)
         (q3 "a = a + 2" q4)
         (q4 "b = b + 1" q4)
         (q3 "b = b + 1" q4)
         (q3 "i = i + 1" q4)
         (q4 "i != ( a + b ) / 3" q4)
         (q3 "i != ( a + b ) / 3" q4)
         (q5 "i = 0" q5)
         (q4 "i = 0" q5)
         (q5 "a = 0" q5)
         (q4 "a = 0" q5)
         (q5 "b = 0" q5)
         (q4 "b = 0" q5)
         (q5 "i >= 5" q5)
         (q4 "i >= 5" q5)
         (q5 "a == 15 - b" q5)
         (q4 "a == 15 - b" q5)
         (q5 "i < 5" q5)
         (q4 "i < 5" q5)
         (q5 "a = a + 1" q5)
         (q4 "a = a + 1" q5)
         (q5 "b = b + 2" q5)
         (q4 "b = b + 2" q5)
         (q5 "a = a + 2" q5)
         (q4 "a = a + 2" q5)
         (q5 "b = b + 1" q5)
         (q4 "b = b + 1" q5)
         (q4 "i = i + 1" q5)
         (q5 "i != ( a + b ) / 3" q5)
         (q4 "i != ( a + b ) / 3" q5)
         (q6 "i = 0" q6)
         (q6 "a = 0" q6)
         (q6 "b = 0" q6)
         (q6 "i >= 5" q6)
         (q5 "i >= 5" q6)
         (q6 "a == 15 - b" q6)
         (q6 "i < 5" q6)
         (q6 "a = a + 1" q6)
         (q6 "b = b + 2" q6)
         (q6 "a = a + 2" q6)
         (q6 "b = b + 1" q6)
         (q6 "i = i + 1" q6)
         (q6 "i != ( a + b ) / 3" q6)
     }
);

FiniteAutomaton nfa_5 = intersect(nfa_4,complement(fha_5));

FiniteAutomaton fha_6 = (
     alphabet = {"a == 15 - b" "i != ( a + b ) / 3" "i >= 5" "i < 5" "a = 0" "b = b + 2" "b = b + 1" "b = 0" "i = i + 1" "i = 0" "a = a + 2" "a = a + 1" },
     states = {q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 q12 q13 q14 },
     initialStates = {q0},
     finalStates = {q14},
     transitions = {
         (q0 "i = 0" q0)
         (q0 "a = 0" q0)
         (q0 "b = 0" q0)
         (q0 "i >= 5" q0)
         (q0 "a == 15 - b" q0)
         (q0 "i < 5" q0)
         (q0 "a = a + 1" q0)
         (q0 "b = b + 2" q0)
         (q0 "a = a + 2" q0)
         (q0 "b = b + 1" q0)
         (q0 "i = i + 1" q0)
         (q0 "i != ( a + b ) / 3" q0)
         (q1 "i = 0" q1)
         (q1 "a = 0" q1)
         (q0 "a = 0" q1)
         (q1 "b = 0" q1)
         (q1 "i >= 5" q1)
         (q1 "a == 15 - b" q1)
         (q1 "i < 5" q1)
         (q1 "b = b + 2" q1)
         (q1 "b = b + 1" q1)
         (q1 "i = i + 1" q1)
         (q1 "i != ( a + b ) / 3" q1)
         (q2 "i = 0" q2)
         (q1 "b = 0" q2)
         (q2 "i >= 5" q2)
         (q2 "a == 15 - b" q2)
         (q2 "i < 5" q2)
         (q2 "i = i + 1" q2)
         (q2 "i != ( a + b ) / 3" q2)
         (q3 "i = 0" q3)
         (q3 "i >= 5" q3)
         (q3 "a == 15 - b" q3)
         (q2 "a == 15 - b" q3)
         (q3 "i < 5" q3)
         (q2 "a = a + 1" q3)
         (q3 "i = i + 1" q3)
         (q3 "i != ( a + b ) / 3" q3)
         (q4 "i = 0" q4)
         (q4 "i >= 5" q4)
         (q4 "a == 15 - b" q4)
         (q3 "a == 15 - b" q4)
         (q4 "i < 5" q4)
         (q3 "b = b + 2" q4)
         (q4 "i = i + 1" q4)
         (q4 "i != ( a + b ) / 3" q4)
         (q5 "i = 0" q5)
         (q5 "i >= 5" q5)
         (q5 "a == 15 - b" q5)
         (q4 "a == 15 - b" q5)
         (q5 "i < 5" q5)
         (q4 "a = a + 1" q5)
         (q5 "i = i + 1" q5)
         (q5 "i != ( a + b ) / 3" q5)
         (q6 "i = 0" q6)
         (q6 "i >= 5" q6)
         (q6 "a == 15 - b" q6)
         (q5 "a == 15 - b" q6)
         (q6 "i < 5" q6)
         (q5 "b = b + 2" q6)
         (q6 "i = i + 1" q6)
         (q6 "i != ( a + b ) / 3" q6)
         (q7 "i = 0" q7)
         (q7 "i >= 5" q7)
         (q7 "a == 15 - b" q7)
         (q6 "a == 15 - b" q7)
         (q7 "i < 5" q7)
         (q6 "a = a + 1" q7)
         (q7 "i = i + 1" q7)
         (q7 "i != ( a + b ) / 3" q7)
         (q8 "i = 0" q8)
         (q8 "i >= 5" q8)
         (q8 "a == 15 - b" q8)
         (q7 "a == 15 - b" q8)
         (q8 "i < 5" q8)
         (q7 "b = b + 2" q8)
         (q8 "i = i + 1" q8)
         (q8 "i != ( a + b ) / 3" q8)
         (q9 "i = 0" q9)
         (q9 "i >= 5" q9)
         (q9 "a == 15 - b" q9)
         (q8 "a == 15 - b" q9)
         (q9 "i < 5" q9)
         (q8 "a = a + 1" q9)
         (q9 "i = i + 1" q9)
         (q9 "i != ( a + b ) / 3" q9)
         (q10 "i = 0" q10)
         (q10 "i >= 5" q10)
         (q10 "a == 15 - b" q10)
         (q9 "a == 15 - b" q10)
         (q10 "i < 5" q10)
         (q9 "b = b + 2" q10)
         (q10 "i = i + 1" q10)
         (q10 "i != ( a + b ) / 3" q10)
         (q10 "i = 0" q11)
         (q11 "i >= 5" q11)
         (q11 "a == 15 - b" q11)
         (q10 "a == 15 - b" q11)
         (q11 "i < 5" q11)
         (q10 "i < 5" q11)
         (q11 "i != ( a + b ) / 3" q11)
         (q12 "i = 0" q12)
         (q12 "a = 0" q12)
         (q12 "b = 0" q12)
         (q12 "i >= 5" q12)
         (q11 "i >= 5" q12)
         (q12 "a == 15 - b" q12)
         (q11 "a == 15 - b" q12)
         (q12 "i < 5" q12)
         (q12 "a = a + 1" q12)
         (q12 "b = b + 2" q12)
         (q12 "a = a + 2" q12)
         (q12 "b = b + 1" q12)
         (q12 "i != ( a + b ) / 3" q12)
         (q11 "i != ( a + b ) / 3" q12)
         (q13 "i = 0" q13)
         (q12 "i = 0" q13)
         (q13 "a = 0" q13)
         (q12 "a = 0" q13)
         (q13 "b = 0" q13)
         (q12 "b = 0" q13)
         (q13 "i >= 5" q13)
         (q12 "i >= 5" q13)
         (q13 "a == 15 - b" q13)
         (q12 "a == 15 - b" q13)
         (q13 "i < 5" q13)
         (q12 "i < 5" q13)
         (q13 "a = a + 1" q13)
         (q12 "a = a + 1" q13)
         (q13 "b = b + 2" q13)
         (q12 "b = b + 2" q13)
         (q13 "a = a + 2" q13)
         (q12 "a = a + 2" q13)
         (q13 "b = b + 1" q13)
         (q12 "b = b + 1" q13)
         (q12 "i = i + 1" q13)
         (q13 "i != ( a + b ) / 3" q13)
         (q12 "i != ( a + b ) / 3" q13)
         (q14 "i = 0" q14)
         (q14 "a = 0" q14)
         (q14 "b = 0" q14)
         (q14 "i >= 5" q14)
         (q13 "i >= 5" q14)
         (q14 "a == 15 - b" q14)
         (q14 "i < 5" q14)
         (q14 "a = a + 1" q14)
         (q14 "b = b + 2" q14)
         (q14 "a = a + 2" q14)
         (q14 "b = b + 1" q14)
         (q14 "i = i + 1" q14)
         (q14 "i != ( a + b ) / 3" q14)
     }
);

FiniteAutomaton nfa_6 = intersect(nfa_5,complement(fha_6));

FiniteAutomaton fha_7 = (
     alphabet = {"a == 15 - b" "i != ( a + b ) / 3" "i >= 5" "i < 5" "a = 0" "b = b + 2" "b = b + 1" "b = 0" "i = i + 1" "i = 0" "a = a + 2" "a = a + 1" },
     states = {q0 q1 q2 q3 q4 q5 q6 q7 },
     initialStates = {q0},
     finalStates = {q7},
     transitions = {
         (q0 "i = 0" q0)
         (q0 "a = 0" q0)
         (q0 "b = 0" q0)
         (q0 "i >= 5" q0)
         (q0 "a == 15 - b" q0)
         (q0 "i < 5" q0)
         (q0 "a = a + 1" q0)
         (q0 "b = b + 2" q0)
         (q0 "a = a + 2" q0)
         (q0 "b = b + 1" q0)
         (q0 "i = i + 1" q0)
         (q0 "i != ( a + b ) / 3" q0)
         (q1 "i = 0" q1)
         (q0 "i = 0" q1)
         (q1 "a = 0" q1)
         (q1 "b = 0" q1)
         (q1 "i >= 5" q1)
         (q1 "a == 15 - b" q1)
         (q1 "i < 5" q1)
         (q0 "i < 5" q1)
         (q1 "a = a + 1" q1)
         (q1 "b = b + 2" q1)
         (q1 "a = a + 2" q1)
         (q1 "b = b + 1" q1)
         (q1 "i != ( a + b ) / 3" q1)
         (q2 "i = 0" q2)
         (q2 "i >= 5" q2)
         (q1 "i >= 5" q2)
         (q2 "a == 15 - b" q2)
         (q1 "a == 15 - b" q2)
         (q2 "i < 5" q2)
         (q2 "i != ( a + b ) / 3" q2)
         (q1 "i != ( a + b ) / 3" q2)
         (q3 "i = 0" q3)
         (q3 "i >= 5" q3)
         (q3 "a == 15 - b" q3)
         (q2 "a == 15 - b" q3)
         (q3 "i < 5" q3)
         (q2 "a = a + 1" q3)
         (q3 "i != ( a + b ) / 3" q3)
         (q4 "i = 0" q4)
         (q4 "i >= 5" q4)
         (q4 "a == 15 - b" q4)
         (q4 "i < 5" q4)
         (q3 "b = b + 2" q4)
         (q4 "i != ( a + b ) / 3" q4)
         (q5 "i = 0" q5)
         (q4 "i = 0" q5)
         (q5 "i >= 5" q5)
         (q4 "i >= 5" q5)
         (q5 "a == 15 - b" q5)
         (q4 "a == 15 - b" q5)
         (q5 "i < 5" q5)
         (q4 "i < 5" q5)
         (q4 "i = i + 1" q5)
         (q5 "i != ( a + b ) / 3" q5)
         (q4 "i != ( a + b ) / 3" q5)
         (q6 "i = 0" q6)
         (q6 "i >= 5" q6)
         (q5 "i >= 5" q6)
         (q6 "a == 15 - b" q6)
         (q6 "i < 5" q6)
         (q6 "i = i + 1" q6)
         (q6 "i != ( a + b ) / 3" q6)
         (q7 "i = 0" q7)
         (q7 "a = 0" q7)
         (q7 "b = 0" q7)
         (q7 "i >= 5" q7)
         (q7 "a == 15 - b" q7)
         (q6 "a == 15 - b" q7)
         (q7 "i < 5" q7)
         (q7 "a = a + 1" q7)
         (q7 "b = b + 2" q7)
         (q7 "a = a + 2" q7)
         (q7 "b = b + 1" q7)
         (q7 "i = i + 1" q7)
         (q7 "i != ( a + b ) / 3" q7)
     }
);

FiniteAutomaton nfa_7 = intersect(nfa_6,complement(fha_7));

FiniteAutomaton fha_8 = (
     alphabet = {"a == 15 - b" "i != ( a + b ) / 3" "i >= 5" "i < 5" "a = 0" "b = b + 2" "b = b + 1" "b = 0" "i = i + 1" "i = 0" "a = a + 2" "a = a + 1" },
     states = {q0 q1 q2 q3 q4 q5 q6 q7 },
     initialStates = {q0},
     finalStates = {q7},
     transitions = {
         (q0 "i = 0" q0)
         (q0 "a = 0" q0)
         (q0 "b = 0" q0)
         (q0 "i >= 5" q0)
         (q0 "a == 15 - b" q0)
         (q0 "i < 5" q0)
         (q0 "a = a + 1" q0)
         (q0 "b = b + 2" q0)
         (q0 "a = a + 2" q0)
         (q0 "b = b + 1" q0)
         (q0 "i = i + 1" q0)
         (q0 "i != ( a + b ) / 3" q0)
         (q1 "i = 0" q1)
         (q0 "i = 0" q1)
         (q1 "a = 0" q1)
         (q1 "b = 0" q1)
         (q1 "i >= 5" q1)
         (q1 "a == 15 - b" q1)
         (q1 "i < 5" q1)
         (q0 "i < 5" q1)
         (q1 "a = a + 1" q1)
         (q1 "b = b + 2" q1)
         (q1 "a = a + 2" q1)
         (q1 "b = b + 1" q1)
         (q1 "i != ( a + b ) / 3" q1)
         (q2 "i = 0" q2)
         (q2 "i >= 5" q2)
         (q1 "i >= 5" q2)
         (q2 "a == 15 - b" q2)
         (q1 "a == 15 - b" q2)
         (q2 "i < 5" q2)
         (q2 "i != ( a + b ) / 3" q2)
         (q1 "i != ( a + b ) / 3" q2)
         (q3 "i = 0" q3)
         (q3 "i >= 5" q3)
         (q3 "a == 15 - b" q3)
         (q2 "a == 15 - b" q3)
         (q3 "i < 5" q3)
         (q2 "a = a + 2" q3)
         (q3 "i != ( a + b ) / 3" q3)
         (q4 "i = 0" q4)
         (q4 "i >= 5" q4)
         (q4 "a == 15 - b" q4)
         (q4 "i < 5" q4)
         (q3 "b = b + 1" q4)
         (q4 "i != ( a + b ) / 3" q4)
         (q5 "i = 0" q5)
         (q4 "i = 0" q5)
         (q5 "i >= 5" q5)
         (q4 "i >= 5" q5)
         (q5 "a == 15 - b" q5)
         (q4 "a == 15 - b" q5)
         (q5 "i < 5" q5)
         (q4 "i < 5" q5)
         (q4 "i = i + 1" q5)
         (q5 "i != ( a + b ) / 3" q5)
         (q4 "i != ( a + b ) / 3" q5)
         (q6 "i = 0" q6)
         (q6 "i >= 5" q6)
         (q5 "i >= 5" q6)
         (q6 "a == 15 - b" q6)
         (q6 "i < 5" q6)
         (q6 "i = i + 1" q6)
         (q6 "i != ( a + b ) / 3" q6)
         (q7 "i = 0" q7)
         (q7 "a = 0" q7)
         (q7 "b = 0" q7)
         (q7 "i >= 5" q7)
         (q7 "a == 15 - b" q7)
         (q6 "a == 15 - b" q7)
         (q7 "i < 5" q7)
         (q7 "a = a + 1" q7)
         (q7 "b = b + 2" q7)
         (q7 "a = a + 2" q7)
         (q7 "b = b + 1" q7)
         (q7 "i = i + 1" q7)
         (q7 "i != ( a + b ) / 3" q7)
     }
);

FiniteAutomaton nfa_8 = intersect(nfa_7,complement(fha_8));

print(isEmpty(nfa_8));