FiniteAutomaton nfa_0 = (
    alphabet = {"i = 0" "a = 0" "b = 0" "i >= 3" "a == 9 - b" "i < 3" "a = a + 1" "b = b + 2" "a = a + 2" "b = b + 1" "i = i + 1"},
    states = {"q0" "q1" "q2" "q4" "q5" "q6" "q7" "q8" "q9" "q10" "q11" "qerr"},
    initialStates = {"q0"},
    finalStates = {"qerr"},
    transitions = {
        ("q0" "i = 0" "q1")
        ("q1" "a = 0" "q2")
        ("q2" "b = 0" "q4")
        ("q4" "i >= 3" "q5")
        ("q4" "i < 3" "q6")
        ("q6" "a = a + 1" "q7")
        ("q6" "a = a + 2" "q9")
        ("q7" "b = b + 2" "q8")
        ("q9" "b = b + 1" "q8")
        ("q8" "i = i + 1" "q4")
        ("q5" "a == 9 - b" "qerr")
    }
);
FiniteAutomaton fha_1 = (
     alphabet = {"a = 0" "i < 3" "i >= 3" "a == 9 - b" "b = b + 1" "b = b + 2" "b = 0" "i = i + 1" "i = 0" "a = a + 2" "a = a + 1" },
     states = {q0 q1 q2 },
     initialStates = {q0},
     finalStates = {q2},
     transitions = {
         (q0 "i = 0" q0)
         (q0 "a = 0" q0)
         (q0 "b = 0" q0)
         (q0 "i >= 3" q0)
         (q0 "a == 9 - b" q0)
         (q0 "i < 3" q0)
         (q0 "a = a + 1" q0)
         (q0 "b = b + 2" q0)
         (q0 "a = a + 2" q0)
         (q0 "b = b + 1" q0)
         (q0 "i = i + 1" q0)
         (q1 "i = 0" q1)
         (q0 "i = 0" q1)
         (q1 "a = 0" q1)
         (q1 "b = 0" q1)
         (q1 "i >= 3" q1)
         (q1 "a == 9 - b" q1)
         (q1 "i < 3" q1)
         (q1 "a = a + 1" q1)
         (q1 "b = b + 2" q1)
         (q1 "a = a + 2" q1)
         (q1 "b = b + 1" q1)
         (q2 "i = 0" q2)
         (q2 "a = 0" q2)
         (q2 "b = 0" q2)
         (q2 "i >= 3" q2)
         (q1 "i >= 3" q2)
         (q2 "a == 9 - b" q2)
         (q2 "i < 3" q2)
         (q2 "a = a + 1" q2)
         (q2 "b = b + 2" q2)
         (q2 "a = a + 2" q2)
         (q2 "b = b + 1" q2)
         (q2 "i = i + 1" q2)
     }
);

FiniteAutomaton nfa_1 = intersect(nfa_0,complement(fha_1));

FiniteAutomaton fha_2 = (
     alphabet = {"a = 0" "i < 3" "i >= 3" "a == 9 - b" "b = b + 1" "b = b + 2" "b = 0" "i = i + 1" "i = 0" "a = a + 2" "a = a + 1" },
     states = {q0 q1 q2 q3 },
     initialStates = {q0},
     finalStates = {q3},
     transitions = {
         (q0 "i = 0" q0)
         (q0 "a = 0" q0)
         (q0 "b = 0" q0)
         (q0 "i >= 3" q0)
         (q0 "a == 9 - b" q0)
         (q0 "i < 3" q0)
         (q0 "a = a + 1" q0)
         (q0 "b = b + 2" q0)
         (q0 "a = a + 2" q0)
         (q0 "b = b + 1" q0)
         (q0 "i = i + 1" q0)
         (q1 "i = 0" q1)
         (q0 "i = 0" q1)
         (q1 "a = 0" q1)
         (q1 "b = 0" q1)
         (q1 "i >= 3" q1)
         (q1 "a == 9 - b" q1)
         (q1 "i < 3" q1)
         (q1 "a = a + 1" q1)
         (q1 "b = b + 2" q1)
         (q1 "a = a + 2" q1)
         (q1 "b = b + 1" q1)
         (q2 "i = 0" q2)
         (q1 "i = 0" q2)
         (q2 "a = 0" q2)
         (q1 "a = 0" q2)
         (q2 "b = 0" q2)
         (q1 "b = 0" q2)
         (q2 "i >= 3" q2)
         (q1 "i >= 3" q2)
         (q2 "a == 9 - b" q2)
         (q1 "a == 9 - b" q2)
         (q2 "i < 3" q2)
         (q1 "i < 3" q2)
         (q2 "a = a + 1" q2)
         (q1 "a = a + 1" q2)
         (q2 "b = b + 2" q2)
         (q1 "b = b + 2" q2)
         (q2 "a = a + 2" q2)
         (q1 "a = a + 2" q2)
         (q2 "b = b + 1" q2)
         (q1 "b = b + 1" q2)
         (q1 "i = i + 1" q2)
         (q3 "i = 0" q3)
         (q3 "a = 0" q3)
         (q3 "b = 0" q3)
         (q3 "i >= 3" q3)
         (q2 "i >= 3" q3)
         (q3 "a == 9 - b" q3)
         (q3 "i < 3" q3)
         (q3 "a = a + 1" q3)
         (q3 "b = b + 2" q3)
         (q3 "a = a + 2" q3)
         (q3 "b = b + 1" q3)
         (q3 "i = i + 1" q3)
     }
);

FiniteAutomaton nfa_2 = intersect(nfa_1,complement(fha_2));

FiniteAutomaton fha_3 = (
     alphabet = {"a = 0" "i < 3" "i >= 3" "a == 9 - b" "b = b + 1" "b = b + 2" "b = 0" "i = i + 1" "i = 0" "a = a + 2" "a = a + 1" },
     states = {q0 q1 q2 q3 q4 },
     initialStates = {q0},
     finalStates = {q4},
     transitions = {
         (q0 "i = 0" q0)
         (q0 "a = 0" q0)
         (q0 "b = 0" q0)
         (q0 "i >= 3" q0)
         (q0 "a == 9 - b" q0)
         (q0 "i < 3" q0)
         (q0 "a = a + 1" q0)
         (q0 "b = b + 2" q0)
         (q0 "a = a + 2" q0)
         (q0 "b = b + 1" q0)
         (q0 "i = i + 1" q0)
         (q1 "i = 0" q1)
         (q0 "i = 0" q1)
         (q1 "a = 0" q1)
         (q1 "b = 0" q1)
         (q1 "i >= 3" q1)
         (q1 "a == 9 - b" q1)
         (q1 "i < 3" q1)
         (q1 "a = a + 1" q1)
         (q1 "b = b + 2" q1)
         (q1 "a = a + 2" q1)
         (q1 "b = b + 1" q1)
         (q2 "i = 0" q2)
         (q1 "i = 0" q2)
         (q2 "a = 0" q2)
         (q1 "a = 0" q2)
         (q2 "b = 0" q2)
         (q1 "b = 0" q2)
         (q2 "i >= 3" q2)
         (q1 "i >= 3" q2)
         (q2 "a == 9 - b" q2)
         (q1 "a == 9 - b" q2)
         (q2 "i < 3" q2)
         (q1 "i < 3" q2)
         (q2 "a = a + 1" q2)
         (q1 "a = a + 1" q2)
         (q2 "b = b + 2" q2)
         (q1 "b = b + 2" q2)
         (q2 "a = a + 2" q2)
         (q1 "a = a + 2" q2)
         (q2 "b = b + 1" q2)
         (q1 "b = b + 1" q2)
         (q1 "i = i + 1" q2)
         (q3 "i = 0" q3)
         (q2 "i = 0" q3)
         (q3 "a = 0" q3)
         (q2 "a = 0" q3)
         (q3 "b = 0" q3)
         (q2 "b = 0" q3)
         (q3 "i >= 3" q3)
         (q2 "i >= 3" q3)
         (q3 "a == 9 - b" q3)
         (q2 "a == 9 - b" q3)
         (q3 "i < 3" q3)
         (q2 "i < 3" q3)
         (q3 "a = a + 1" q3)
         (q2 "a = a + 1" q3)
         (q3 "b = b + 2" q3)
         (q2 "b = b + 2" q3)
         (q3 "a = a + 2" q3)
         (q2 "a = a + 2" q3)
         (q3 "b = b + 1" q3)
         (q2 "b = b + 1" q3)
         (q2 "i = i + 1" q3)
         (q4 "i = 0" q4)
         (q4 "a = 0" q4)
         (q4 "b = 0" q4)
         (q4 "i >= 3" q4)
         (q3 "i >= 3" q4)
         (q4 "a == 9 - b" q4)
         (q4 "i < 3" q4)
         (q4 "a = a + 1" q4)
         (q4 "b = b + 2" q4)
         (q4 "a = a + 2" q4)
         (q4 "b = b + 1" q4)
         (q4 "i = i + 1" q4)
     }
);

FiniteAutomaton nfa_3 = intersect(nfa_2,complement(fha_3));
