// Testfile dumped by Ultimate at 2018/11/19 14:19:06
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"1563#ULTIMATE.startENTRY" "1564#ULTIMATE.initFINAL" "1565#ULTIMATE.initEXIT" "1566#L1" "1567#mainENTRY" "1568#L12''" "1569#L12" "1570#L13" "1571#randENTRY" "1572#randFINAL" "1573#randEXIT" "1574#L13'" "1575#L13''" "1576#L13''''" "1577#L13''''" "1578#L12''" "1579#L12''" "1580#L12" "1581#L12" "1582#L13" "1583#L13" "1584#L13'" "1585#L13'" "1586#L13''" "1587#L13''" "1588#L13''''" "1589#L13''''" "1590#L12''" "1591#L12''" "1592#L12" "1593#L12" "1594#L13" "1595#L13" "1596#L13'" "1597#L13'" "1598#L13''" "1599#L13''" "1600#L13''''" "1601#L13''''" "1602#L12''" "1603#L12''" "1604#L12" "1605#L12" "1606#L13" "1607#L13" "1608#L13'" "1609#L13'" "1610#L13''" "1611#L13''" "1612#L13''''" "1613#L13''''" "1614#L12''" "1615#L12''" "1616#L12" "1617#L12" "1618#L13" "1619#L13" "1620#L13'" "1621#L13'" "1622#L13''" "1623#L13''" "1624#L13''''" "1625#L13''''" "1626#L12''" "1627#L12''" "1628#L12" "1629#L12" "1630#L13" "1632#L12'''" "1633#mainErr0AssertViolation" "1634#L13'" "1635#L13''" },
	initialStates = {"1563#ULTIMATE.startENTRY" },
	finalStates = {"1633#mainErr0AssertViolation" },
	callTransitions = {
		("1563#ULTIMATE.startENTRY" "call ULTIMATE.init();" "1564#ULTIMATE.initFINAL")
		("1566#L1" "call #t~ret1 := main();" "1567#mainENTRY")
		("1570#L13" "call #t~ret0 := rand();" "1571#randENTRY")
		("1582#L13" "call #t~ret0 := rand();" "1571#randENTRY")
		("1583#L13" "call #t~ret0 := rand();" "1571#randENTRY")
		("1594#L13" "call #t~ret0 := rand();" "1571#randENTRY")
		("1595#L13" "call #t~ret0 := rand();" "1571#randENTRY")
		("1606#L13" "call #t~ret0 := rand();" "1571#randENTRY")
		("1607#L13" "call #t~ret0 := rand();" "1571#randENTRY")
		("1618#L13" "call #t~ret0 := rand();" "1571#randENTRY")
		("1619#L13" "call #t~ret0 := rand();" "1571#randENTRY")
		("1630#L13" "call #t~ret0 := rand();" "1571#randENTRY")
	},
	internalTransitions = {
		("1564#ULTIMATE.initFINAL" "assume true;" "1565#ULTIMATE.initEXIT")
		("1567#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "1568#L12''")
		("1568#L12''" "assume true;" "1569#L12")
		("1569#L12" "assume !!(~i~2 < ~n~2);" "1570#L13")
		("1571#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "1572#randFINAL")
		("1572#randFINAL" "assume true;" "1573#randEXIT")
		("1574#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1575#L13''")
		("1575#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1576#L13''''")
		("1575#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1577#L13''''")
		("1576#L13''''" "~i~2 := ~i~2 + 1;" "1578#L12''")
		("1577#L13''''" "~i~2 := ~i~2 + 1;" "1579#L12''")
		("1578#L12''" "assume true;" "1580#L12")
		("1579#L12''" "assume true;" "1581#L12")
		("1580#L12" "assume !!(~i~2 < ~n~2);" "1582#L13")
		("1581#L12" "assume !!(~i~2 < ~n~2);" "1583#L13")
		("1584#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1586#L13''")
		("1585#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1587#L13''")
		("1586#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1588#L13''''")
		("1586#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1589#L13''''")
		("1587#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1589#L13''''")
		("1587#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1589#L13''''")
		("1588#L13''''" "~i~2 := ~i~2 + 1;" "1590#L12''")
		("1589#L13''''" "~i~2 := ~i~2 + 1;" "1591#L12''")
		("1590#L12''" "assume true;" "1592#L12")
		("1591#L12''" "assume true;" "1593#L12")
		("1592#L12" "assume !!(~i~2 < ~n~2);" "1594#L13")
		("1593#L12" "assume !!(~i~2 < ~n~2);" "1595#L13")
		("1596#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1598#L13''")
		("1597#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1599#L13''")
		("1598#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1600#L13''''")
		("1598#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1601#L13''''")
		("1599#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1601#L13''''")
		("1599#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1601#L13''''")
		("1600#L13''''" "~i~2 := ~i~2 + 1;" "1602#L12''")
		("1601#L13''''" "~i~2 := ~i~2 + 1;" "1603#L12''")
		("1602#L12''" "assume true;" "1604#L12")
		("1603#L12''" "assume true;" "1605#L12")
		("1604#L12" "assume !!(~i~2 < ~n~2);" "1606#L13")
		("1605#L12" "assume !!(~i~2 < ~n~2);" "1607#L13")
		("1608#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1610#L13''")
		("1609#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1611#L13''")
		("1610#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1601#L13''''")
		("1610#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1612#L13''''")
		("1611#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1613#L13''''")
		("1611#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1613#L13''''")
		("1612#L13''''" "~i~2 := ~i~2 + 1;" "1614#L12''")
		("1613#L13''''" "~i~2 := ~i~2 + 1;" "1615#L12''")
		("1614#L12''" "assume true;" "1616#L12")
		("1615#L12''" "assume true;" "1617#L12")
		("1616#L12" "assume !!(~i~2 < ~n~2);" "1618#L13")
		("1617#L12" "assume !!(~i~2 < ~n~2);" "1619#L13")
		("1620#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1622#L13''")
		("1621#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1623#L13''")
		("1622#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1624#L13''''")
		("1622#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1625#L13''''")
		("1623#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1625#L13''''")
		("1623#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1625#L13''''")
		("1624#L13''''" "~i~2 := ~i~2 + 1;" "1626#L12''")
		("1625#L13''''" "~i~2 := ~i~2 + 1;" "1627#L12''")
		("1626#L12''" "assume true;" "1628#L12")
		("1627#L12''" "assume true;" "1629#L12")
		("1628#L12" "assume !!(~i~2 < ~n~2);" "1630#L13")
		("1629#L12" "assume !!(~i~2 < ~n~2);" "1619#L13")
		("1629#L12" "assume !(~i~2 < ~n~2);" "1632#L12'''")
		("1632#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "1633#mainErr0AssertViolation")
		("1634#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1635#L13''")
		("1635#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1625#L13''''")
		("1635#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1625#L13''''")
	},
	returnTransitions = {
		("1565#ULTIMATE.initEXIT" "1563#ULTIMATE.startENTRY" "return;" "1566#L1")
		("1573#randEXIT" "1570#L13" "return;" "1574#L13'")
		("1573#randEXIT" "1618#L13" "return;" "1620#L13'")
		("1573#randEXIT" "1619#L13" "return;" "1621#L13'")
		("1573#randEXIT" "1606#L13" "return;" "1608#L13'")
		("1573#randEXIT" "1607#L13" "return;" "1609#L13'")
		("1573#randEXIT" "1594#L13" "return;" "1596#L13'")
		("1573#randEXIT" "1595#L13" "return;" "1597#L13'")
		("1573#randEXIT" "1582#L13" "return;" "1584#L13'")
		("1573#randEXIT" "1630#L13" "return;" "1634#L13'")
		("1573#randEXIT" "1583#L13" "return;" "1585#L13'")
	}
);
