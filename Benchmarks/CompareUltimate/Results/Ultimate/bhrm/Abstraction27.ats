// Testfile dumped by Ultimate at 2018/11/19 14:19:21
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"7048#L13'" "7049#L1" "7050#L13''" "7051#L13''''" "7052#L12''" "7053#L13" "7054#randENTRY" "7055#L12" "7056#L13" "7057#L12'''" "7058#mainErr0AssertViolation" "7059#mainENTRY" "7060#ULTIMATE.initEXIT" "7061#ULTIMATE.startENTRY" "7062#L12''" "7063#randEXIT" "7064#L13" "7065#L13" "7066#L13" "7067#L13" "7068#L13" "7069#L13" "7070#L13" "7071#L13" "7072#L13'" "7073#L13'" "7074#L13'" "7075#L13'" "7076#L13'" "7077#L13'" "7078#L13'" "7079#L13'" "7080#L13'" "7081#randFINAL" "7082#L13''" "7083#L13''''" "7084#ULTIMATE.initFINAL" "7085#L12" "7086#L12''" "7087#L13''''" "7088#L13''" "7089#L13''" "7090#L13''''" "7091#L12" "7092#L12''" "7093#L13''''" "7094#L13''" "7095#L12" "7096#L12''" "7097#L13''''" "7098#L13''" "7099#L13''''" "7100#L12" "7101#L12''" "7102#L13''''" "7103#L13''" "7104#L12" "7105#L12''" "7106#L13''''" "7107#L13''" "7108#L12" "7109#L12" "7110#L12''" "7111#L13''" "7112#L12" "7113#L12''" "7114#L13''''" "7115#L13''" "7116#L12" "7117#L12''" "7118#L12" "7119#L12''" },
	initialStates = {"7061#ULTIMATE.startENTRY" },
	finalStates = {"7058#mainErr0AssertViolation" },
	callTransitions = {
		("7049#L1" "call #t~ret1 := main();" "7059#mainENTRY")
		("7053#L13" "call #t~ret0 := rand();" "7054#randENTRY")
		("7056#L13" "call #t~ret0 := rand();" "7054#randENTRY")
		("7061#ULTIMATE.startENTRY" "call ULTIMATE.init();" "7084#ULTIMATE.initFINAL")
		("7064#L13" "call #t~ret0 := rand();" "7054#randENTRY")
		("7065#L13" "call #t~ret0 := rand();" "7054#randENTRY")
		("7066#L13" "call #t~ret0 := rand();" "7054#randENTRY")
		("7067#L13" "call #t~ret0 := rand();" "7054#randENTRY")
		("7068#L13" "call #t~ret0 := rand();" "7054#randENTRY")
		("7069#L13" "call #t~ret0 := rand();" "7054#randENTRY")
		("7070#L13" "call #t~ret0 := rand();" "7054#randENTRY")
		("7071#L13" "call #t~ret0 := rand();" "7054#randENTRY")
	},
	internalTransitions = {
		("7048#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7050#L13''")
		("7050#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7099#L13''''")
		("7050#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7099#L13''''")
		("7051#L13''''" "~i~2 := ~i~2 + 1;" "7052#L12''")
		("7052#L12''" "assume true;" "7055#L12")
		("7054#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "7081#randFINAL")
		("7055#L12" "assume !!(~i~2 < ~n~2);" "7056#L13")
		("7057#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "7058#mainErr0AssertViolation")
		("7059#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "7062#L12''")
		("7062#L12''" "assume true;" "7108#L12")
		("7072#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7107#L13''")
		("7073#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7088#L13''")
		("7074#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7089#L13''")
		("7075#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7094#L13''")
		("7076#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7111#L13''")
		("7077#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7082#L13''")
		("7078#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7098#L13''")
		("7079#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7103#L13''")
		("7080#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7115#L13''")
		("7081#randFINAL" "assume true;" "7063#randEXIT")
		("7082#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7083#L13''''")
		("7082#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7083#L13''''")
		("7083#L13''''" "~i~2 := ~i~2 + 1;" "7119#L12''")
		("7084#ULTIMATE.initFINAL" "assume true;" "7060#ULTIMATE.initEXIT")
		("7085#L12" "assume !!(~i~2 < ~n~2);" "7065#L13")
		("7085#L12" "assume !(~i~2 < ~n~2);" "7057#L12'''")
		("7086#L12''" "assume true;" "7085#L12")
		("7087#L13''''" "~i~2 := ~i~2 + 1;" "7086#L12''")
		("7088#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7087#L13''''")
		("7088#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7087#L13''''")
		("7089#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7090#L13''''")
		("7089#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7087#L13''''")
		("7090#L13''''" "~i~2 := ~i~2 + 1;" "7110#L12''")
		("7091#L12" "assume !!(~i~2 < ~n~2);" "7066#L13")
		("7092#L12''" "assume true;" "7091#L12")
		("7093#L13''''" "~i~2 := ~i~2 + 1;" "7092#L12''")
		("7094#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7093#L13''''")
		("7094#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7090#L13''''")
		("7095#L12" "assume !!(~i~2 < ~n~2);" "7067#L13")
		("7096#L12''" "assume true;" "7095#L12")
		("7097#L13''''" "~i~2 := ~i~2 + 1;" "7096#L12''")
		("7098#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7099#L13''''")
		("7098#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7097#L13''''")
		("7099#L13''''" "~i~2 := ~i~2 + 1;" "7117#L12''")
		("7100#L12" "assume !!(~i~2 < ~n~2);" "7069#L13")
		("7101#L12''" "assume true;" "7100#L12")
		("7102#L13''''" "~i~2 := ~i~2 + 1;" "7101#L12''")
		("7103#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7102#L13''''")
		("7103#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7099#L13''''")
		("7104#L12" "assume !!(~i~2 < ~n~2);" "7070#L13")
		("7105#L12''" "assume true;" "7104#L12")
		("7106#L13''''" "~i~2 := ~i~2 + 1;" "7105#L12''")
		("7107#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7051#L13''''")
		("7107#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7106#L13''''")
		("7108#L12" "assume !!(~i~2 < ~n~2);" "7064#L13")
		("7109#L12" "assume !!(~i~2 < ~n~2);" "7065#L13")
		("7110#L12''" "assume true;" "7109#L12")
		("7111#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7090#L13''''")
		("7111#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7090#L13''''")
		("7112#L12" "assume !!(~i~2 < ~n~2);" "7068#L13")
		("7113#L12''" "assume true;" "7112#L12")
		("7114#L13''''" "~i~2 := ~i~2 + 1;" "7113#L12''")
		("7115#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7114#L13''''")
		("7115#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7114#L13''''")
		("7116#L12" "assume !!(~i~2 < ~n~2);" "7071#L13")
		("7117#L12''" "assume true;" "7116#L12")
		("7118#L12" "assume !!(~i~2 < ~n~2);" "7053#L13")
		("7119#L12''" "assume true;" "7118#L12")
	},
	returnTransitions = {
		("7060#ULTIMATE.initEXIT" "7061#ULTIMATE.startENTRY" "return;" "7049#L1")
		("7063#randEXIT" "7056#L13" "return;" "7077#L13'")
		("7063#randEXIT" "7064#L13" "return;" "7072#L13'")
		("7063#randEXIT" "7065#L13" "return;" "7073#L13'")
		("7063#randEXIT" "7066#L13" "return;" "7074#L13'")
		("7063#randEXIT" "7067#L13" "return;" "7075#L13'")
		("7063#randEXIT" "7068#L13" "return;" "7076#L13'")
		("7063#randEXIT" "7053#L13" "return;" "7048#L13'")
		("7063#randEXIT" "7069#L13" "return;" "7078#L13'")
		("7063#randEXIT" "7070#L13" "return;" "7079#L13'")
		("7063#randEXIT" "7071#L13" "return;" "7080#L13'")
	}
);
