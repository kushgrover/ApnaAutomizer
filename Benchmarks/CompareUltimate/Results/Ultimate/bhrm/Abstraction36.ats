// Testfile dumped by Ultimate at 2018/11/19 14:19:25
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"9856#randEXIT" "9857#L13" "9858#L13" "9859#L13" "9860#L13" "9861#L13" "9862#L13" "9863#L13" "9864#L13'" "9865#L13'" "9866#L13'" "9867#L13'" "9868#L13'" "9869#L13'" "9870#L13'" "9871#L13'" "9872#randFINAL" "9873#L13''" "9874#L13''''" "9875#ULTIMATE.initFINAL" "9876#L12" "9877#L12''" "9878#L13''''" "9879#L13''" "9880#L12" "9881#L12''" "9882#L13''''" "9883#L13''" "9884#L13''" "9885#L13''''" "9886#L12" "9887#L12''" "9888#L13''''" "9889#L13''" "9890#L13''''" "9891#L12" "9892#L12''" "9893#L13''''" "9894#L13''" "9895#L12" "9896#L12''" "9897#L13''''" "9898#L13''" "9899#L12" "9900#L12" "9901#L12''" "9902#L13''" "9903#L12" "9904#L12''" "9905#L12" "9906#L12''" "9841#L13'" "9842#L1" "9843#L13''" "9844#L13''''" "9845#L12''" "9846#L13" "9847#randENTRY" "9848#L12" "9849#L13" "9850#L12'''" "9851#mainErr0AssertViolation" "9852#mainENTRY" "9853#ULTIMATE.initEXIT" "9854#ULTIMATE.startENTRY" "9855#L12''" },
	initialStates = {"9854#ULTIMATE.startENTRY" },
	finalStates = {"9851#mainErr0AssertViolation" },
	callTransitions = {
		("9857#L13" "call #t~ret0 := rand();" "9847#randENTRY")
		("9858#L13" "call #t~ret0 := rand();" "9847#randENTRY")
		("9859#L13" "call #t~ret0 := rand();" "9847#randENTRY")
		("9860#L13" "call #t~ret0 := rand();" "9847#randENTRY")
		("9861#L13" "call #t~ret0 := rand();" "9847#randENTRY")
		("9862#L13" "call #t~ret0 := rand();" "9847#randENTRY")
		("9863#L13" "call #t~ret0 := rand();" "9847#randENTRY")
		("9842#L1" "call #t~ret1 := main();" "9852#mainENTRY")
		("9846#L13" "call #t~ret0 := rand();" "9847#randENTRY")
		("9849#L13" "call #t~ret0 := rand();" "9847#randENTRY")
		("9854#ULTIMATE.startENTRY" "call ULTIMATE.init();" "9875#ULTIMATE.initFINAL")
	},
	internalTransitions = {
		("9864#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "9889#L13''")
		("9865#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "9873#L13''")
		("9866#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "9894#L13''")
		("9867#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "9898#L13''")
		("9868#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "9879#L13''")
		("9869#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "9883#L13''")
		("9870#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "9902#L13''")
		("9871#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "9884#L13''")
		("9872#randFINAL" "assume true;" "9856#randEXIT")
		("9873#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "9874#L13''''")
		("9873#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "9874#L13''''")
		("9874#L13''''" "~i~2 := ~i~2 + 1;" "9906#L12''")
		("9875#ULTIMATE.initFINAL" "assume true;" "9853#ULTIMATE.initEXIT")
		("9876#L12" "assume !!(~i~2 < ~n~2);" "9860#L13")
		("9876#L12" "assume !(~i~2 < ~n~2);" "9850#L12'''")
		("9877#L12''" "assume true;" "9876#L12")
		("9878#L13''''" "~i~2 := ~i~2 + 1;" "9877#L12''")
		("9879#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "9878#L13''''")
		("9879#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "9878#L13''''")
		("9880#L12" "assume !!(~i~2 < ~n~2);" "9860#L13")
		("9881#L12''" "assume true;" "9880#L12")
		("9882#L13''''" "~i~2 := ~i~2 + 1;" "9881#L12''")
		("9883#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "9882#L13''''")
		("9883#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "9882#L13''''")
		("9884#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "9885#L13''''")
		("9884#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "9882#L13''''")
		("9885#L13''''" "~i~2 := ~i~2 + 1;" "9901#L12''")
		("9886#L12" "assume !!(~i~2 < ~n~2);" "9863#L13")
		("9887#L12''" "assume true;" "9886#L12")
		("9888#L13''''" "~i~2 := ~i~2 + 1;" "9887#L12''")
		("9889#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "9890#L13''''")
		("9889#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "9888#L13''''")
		("9890#L13''''" "~i~2 := ~i~2 + 1;" "9904#L12''")
		("9891#L12" "assume !!(~i~2 < ~n~2);" "9857#L13")
		("9892#L12''" "assume true;" "9891#L12")
		("9893#L13''''" "~i~2 := ~i~2 + 1;" "9892#L12''")
		("9894#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "9874#L13''''")
		("9894#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "9893#L13''''")
		("9895#L12" "assume !!(~i~2 < ~n~2);" "9858#L13")
		("9896#L12''" "assume true;" "9895#L12")
		("9897#L13''''" "~i~2 := ~i~2 + 1;" "9896#L12''")
		("9898#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "9844#L13''''")
		("9898#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "9897#L13''''")
		("9899#L12" "assume !!(~i~2 < ~n~2);" "9859#L13")
		("9900#L12" "assume !!(~i~2 < ~n~2);" "9861#L13")
		("9901#L12''" "assume true;" "9900#L12")
		("9902#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "9885#L13''''")
		("9902#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "9885#L13''''")
		("9903#L12" "assume !!(~i~2 < ~n~2);" "9862#L13")
		("9904#L12''" "assume true;" "9903#L12")
		("9905#L12" "assume !!(~i~2 < ~n~2);" "9846#L13")
		("9906#L12''" "assume true;" "9905#L12")
		("9841#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "9843#L13''")
		("9843#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "9890#L13''''")
		("9843#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "9890#L13''''")
		("9844#L13''''" "~i~2 := ~i~2 + 1;" "9845#L12''")
		("9845#L12''" "assume true;" "9848#L12")
		("9847#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "9872#randFINAL")
		("9848#L12" "assume !!(~i~2 < ~n~2);" "9849#L13")
		("9850#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "9851#mainErr0AssertViolation")
		("9852#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "9855#L12''")
		("9855#L12''" "assume true;" "9899#L12")
	},
	returnTransitions = {
		("9856#randEXIT" "9857#L13" "return;" "9864#L13'")
		("9856#randEXIT" "9858#L13" "return;" "9866#L13'")
		("9856#randEXIT" "9859#L13" "return;" "9867#L13'")
		("9856#randEXIT" "9860#L13" "return;" "9868#L13'")
		("9856#randEXIT" "9861#L13" "return;" "9869#L13'")
		("9856#randEXIT" "9846#L13" "return;" "9841#L13'")
		("9856#randEXIT" "9862#L13" "return;" "9870#L13'")
		("9856#randEXIT" "9863#L13" "return;" "9871#L13'")
		("9856#randEXIT" "9849#L13" "return;" "9865#L13'")
		("9853#ULTIMATE.initEXIT" "9854#ULTIMATE.startENTRY" "return;" "9842#L1")
	}
);
