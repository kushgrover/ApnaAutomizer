// Testfile dumped by Ultimate at 2018/11/19 14:19:13
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"4608#L12'''" "4609#mainErr0AssertViolation" "4610#L13'" "4611#L13''" "4539#ULTIMATE.startENTRY" "4540#ULTIMATE.initFINAL" "4541#ULTIMATE.initEXIT" "4542#L1" "4543#mainENTRY" "4544#L12''" "4545#L12" "4546#L13" "4547#randENTRY" "4548#randFINAL" "4549#randEXIT" "4550#L13'" "4551#L13''" "4552#L13''''" "4553#L13''''" "4554#L12''" "4555#L12''" "4556#L12" "4557#L12" "4558#L13" "4559#L13" "4560#L13'" "4561#L13'" "4562#L13''" "4563#L13''" "4564#L13''''" "4565#L13''''" "4566#L12''" "4567#L12''" "4568#L12" "4569#L12" "4570#L13" "4571#L13" "4572#L13'" "4573#L13'" "4574#L13''" "4575#L13''" "4576#L13''''" "4577#L13''''" "4578#L12''" "4579#L12''" "4580#L12" "4581#L12" "4582#L13" "4583#L13" "4584#L13'" "4585#L13'" "4586#L13''" "4587#L13''" "4588#L13''''" "4589#L13''''" "4590#L12''" "4591#L12''" "4592#L12" "4593#L12" "4594#L13" "4595#L13" "4596#L13'" "4597#L13'" "4598#L13''" "4599#L13''" "4600#L13''''" "4601#L13''''" "4602#L12''" "4603#L12''" "4604#L12" "4605#L12" "4606#L13" },
	initialStates = {"4539#ULTIMATE.startENTRY" },
	finalStates = {"4609#mainErr0AssertViolation" },
	callTransitions = {
		("4539#ULTIMATE.startENTRY" "call ULTIMATE.init();" "4540#ULTIMATE.initFINAL")
		("4542#L1" "call #t~ret1 := main();" "4543#mainENTRY")
		("4546#L13" "call #t~ret0 := rand();" "4547#randENTRY")
		("4558#L13" "call #t~ret0 := rand();" "4547#randENTRY")
		("4559#L13" "call #t~ret0 := rand();" "4547#randENTRY")
		("4570#L13" "call #t~ret0 := rand();" "4547#randENTRY")
		("4571#L13" "call #t~ret0 := rand();" "4547#randENTRY")
		("4582#L13" "call #t~ret0 := rand();" "4547#randENTRY")
		("4583#L13" "call #t~ret0 := rand();" "4547#randENTRY")
		("4594#L13" "call #t~ret0 := rand();" "4547#randENTRY")
		("4595#L13" "call #t~ret0 := rand();" "4547#randENTRY")
		("4606#L13" "call #t~ret0 := rand();" "4547#randENTRY")
	},
	internalTransitions = {
		("4608#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "4609#mainErr0AssertViolation")
		("4610#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4611#L13''")
		("4611#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4601#L13''''")
		("4611#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4601#L13''''")
		("4540#ULTIMATE.initFINAL" "assume true;" "4541#ULTIMATE.initEXIT")
		("4543#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "4544#L12''")
		("4544#L12''" "assume true;" "4545#L12")
		("4545#L12" "assume !!(~i~2 < ~n~2);" "4546#L13")
		("4547#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "4548#randFINAL")
		("4548#randFINAL" "assume true;" "4549#randEXIT")
		("4550#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4551#L13''")
		("4551#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4552#L13''''")
		("4551#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4553#L13''''")
		("4552#L13''''" "~i~2 := ~i~2 + 1;" "4554#L12''")
		("4553#L13''''" "~i~2 := ~i~2 + 1;" "4555#L12''")
		("4554#L12''" "assume true;" "4556#L12")
		("4555#L12''" "assume true;" "4557#L12")
		("4556#L12" "assume !!(~i~2 < ~n~2);" "4558#L13")
		("4557#L12" "assume !!(~i~2 < ~n~2);" "4559#L13")
		("4560#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4562#L13''")
		("4561#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4563#L13''")
		("4562#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4553#L13''''")
		("4562#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4564#L13''''")
		("4563#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4565#L13''''")
		("4563#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4565#L13''''")
		("4564#L13''''" "~i~2 := ~i~2 + 1;" "4566#L12''")
		("4565#L13''''" "~i~2 := ~i~2 + 1;" "4567#L12''")
		("4566#L12''" "assume true;" "4568#L12")
		("4567#L12''" "assume true;" "4569#L12")
		("4568#L12" "assume !!(~i~2 < ~n~2);" "4570#L13")
		("4569#L12" "assume !!(~i~2 < ~n~2);" "4571#L13")
		("4572#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4574#L13''")
		("4573#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4575#L13''")
		("4574#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4565#L13''''")
		("4574#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4576#L13''''")
		("4575#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4577#L13''''")
		("4575#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4577#L13''''")
		("4576#L13''''" "~i~2 := ~i~2 + 1;" "4578#L12''")
		("4577#L13''''" "~i~2 := ~i~2 + 1;" "4579#L12''")
		("4578#L12''" "assume true;" "4580#L12")
		("4579#L12''" "assume true;" "4581#L12")
		("4580#L12" "assume !!(~i~2 < ~n~2);" "4582#L13")
		("4581#L12" "assume !!(~i~2 < ~n~2);" "4583#L13")
		("4584#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4586#L13''")
		("4585#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4587#L13''")
		("4586#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4588#L13''''")
		("4586#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4589#L13''''")
		("4587#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4589#L13''''")
		("4587#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4589#L13''''")
		("4588#L13''''" "~i~2 := ~i~2 + 1;" "4590#L12''")
		("4589#L13''''" "~i~2 := ~i~2 + 1;" "4591#L12''")
		("4590#L12''" "assume true;" "4592#L12")
		("4591#L12''" "assume true;" "4593#L12")
		("4592#L12" "assume !!(~i~2 < ~n~2);" "4594#L13")
		("4593#L12" "assume !!(~i~2 < ~n~2);" "4595#L13")
		("4596#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4598#L13''")
		("4597#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4599#L13''")
		("4598#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4600#L13''''")
		("4598#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4601#L13''''")
		("4599#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4601#L13''''")
		("4599#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4601#L13''''")
		("4600#L13''''" "~i~2 := ~i~2 + 1;" "4602#L12''")
		("4601#L13''''" "~i~2 := ~i~2 + 1;" "4603#L12''")
		("4602#L12''" "assume true;" "4604#L12")
		("4603#L12''" "assume true;" "4605#L12")
		("4604#L12" "assume !!(~i~2 < ~n~2);" "4606#L13")
		("4605#L12" "assume !!(~i~2 < ~n~2);" "4595#L13")
		("4605#L12" "assume !(~i~2 < ~n~2);" "4608#L12'''")
	},
	returnTransitions = {
		("4541#ULTIMATE.initEXIT" "4539#ULTIMATE.startENTRY" "return;" "4542#L1")
		("4549#randEXIT" "4546#L13" "return;" "4550#L13'")
		("4549#randEXIT" "4594#L13" "return;" "4596#L13'")
		("4549#randEXIT" "4595#L13" "return;" "4597#L13'")
		("4549#randEXIT" "4582#L13" "return;" "4584#L13'")
		("4549#randEXIT" "4583#L13" "return;" "4585#L13'")
		("4549#randEXIT" "4570#L13" "return;" "4572#L13'")
		("4549#randEXIT" "4571#L13" "return;" "4573#L13'")
		("4549#randEXIT" "4558#L13" "return;" "4560#L13'")
		("4549#randEXIT" "4606#L13" "return;" "4610#L13'")
		("4549#randEXIT" "4559#L13" "return;" "4561#L13'")
	}
);
