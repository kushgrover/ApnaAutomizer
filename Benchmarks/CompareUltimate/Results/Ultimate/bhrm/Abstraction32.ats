// Testfile dumped by Ultimate at 2018/11/19 14:19:23
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"8599#L13''''" "8600#L1" "8601#L12''" "8602#L13'" "8603#L13''" "8604#L13" "8605#randENTRY" "8606#L12" "8607#L12'''" "8608#mainErr0AssertViolation" "8609#mainENTRY" "8610#ULTIMATE.initEXIT" "8611#ULTIMATE.startENTRY" "8612#L12''" "8613#randEXIT" "8614#L13" "8615#L13" "8616#L13" "8617#L13" "8618#L13" "8619#L13" "8620#L13" "8621#L13" "8622#L13'" "8623#L13'" "8624#L13'" "8625#L13'" "8626#L13'" "8627#L13'" "8628#L13'" "8629#L13'" "8630#randFINAL" "8631#L13''" "8632#ULTIMATE.initFINAL" "8633#L12" "8634#L12''" "8635#L13''''" "8636#L13''" "8637#L12" "8638#L12''" "8639#L13''''" "8640#L13''" "8641#L13''" "8642#L13''''" "8643#L12" "8644#L12''" "8645#L13''''" "8646#L13''" "8647#L12" "8648#L12''" "8649#L13''''" "8650#L13''" "8651#L12" "8652#L12''" "8653#L13''''" "8654#L13''" "8655#L13''''" "8656#L12" "8657#L12" "8658#L12''" "8659#L13''" "8660#L12" "8661#L12''" "8662#L13''''" "8663#L12" "8664#L12''" },
	initialStates = {"8611#ULTIMATE.startENTRY" },
	finalStates = {"8608#mainErr0AssertViolation" },
	callTransitions = {
		("8600#L1" "call #t~ret1 := main();" "8609#mainENTRY")
		("8604#L13" "call #t~ret0 := rand();" "8605#randENTRY")
		("8611#ULTIMATE.startENTRY" "call ULTIMATE.init();" "8632#ULTIMATE.initFINAL")
		("8614#L13" "call #t~ret0 := rand();" "8605#randENTRY")
		("8615#L13" "call #t~ret0 := rand();" "8605#randENTRY")
		("8616#L13" "call #t~ret0 := rand();" "8605#randENTRY")
		("8617#L13" "call #t~ret0 := rand();" "8605#randENTRY")
		("8618#L13" "call #t~ret0 := rand();" "8605#randENTRY")
		("8619#L13" "call #t~ret0 := rand();" "8605#randENTRY")
		("8620#L13" "call #t~ret0 := rand();" "8605#randENTRY")
		("8621#L13" "call #t~ret0 := rand();" "8605#randENTRY")
	},
	internalTransitions = {
		("8599#L13''''" "~i~2 := ~i~2 + 1;" "8601#L12''")
		("8601#L12''" "assume true;" "8606#L12")
		("8602#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8603#L13''")
		("8603#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8662#L13''''")
		("8603#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8662#L13''''")
		("8605#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "8630#randFINAL")
		("8606#L12" "assume !!(~i~2 < ~n~2);" "8604#L13")
		("8607#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "8608#mainErr0AssertViolation")
		("8609#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "8612#L12''")
		("8612#L12''" "assume true;" "8656#L12")
		("8622#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8636#L13''")
		("8623#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8640#L13''")
		("8624#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8659#L13''")
		("8625#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8641#L13''")
		("8626#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8646#L13''")
		("8627#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8631#L13''")
		("8628#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8650#L13''")
		("8629#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8654#L13''")
		("8630#randFINAL" "assume true;" "8613#randEXIT")
		("8631#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8599#L13''''")
		("8631#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8599#L13''''")
		("8632#ULTIMATE.initFINAL" "assume true;" "8610#ULTIMATE.initEXIT")
		("8633#L12" "assume !!(~i~2 < ~n~2);" "8614#L13")
		("8633#L12" "assume !(~i~2 < ~n~2);" "8607#L12'''")
		("8634#L12''" "assume true;" "8633#L12")
		("8635#L13''''" "~i~2 := ~i~2 + 1;" "8634#L12''")
		("8636#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8635#L13''''")
		("8636#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8635#L13''''")
		("8637#L12" "assume !!(~i~2 < ~n~2);" "8614#L13")
		("8638#L12''" "assume true;" "8637#L12")
		("8639#L13''''" "~i~2 := ~i~2 + 1;" "8638#L12''")
		("8640#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8639#L13''''")
		("8640#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8639#L13''''")
		("8641#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8642#L13''''")
		("8641#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8639#L13''''")
		("8642#L13''''" "~i~2 := ~i~2 + 1;" "8658#L12''")
		("8643#L12" "assume !!(~i~2 < ~n~2);" "8617#L13")
		("8644#L12''" "assume true;" "8643#L12")
		("8645#L13''''" "~i~2 := ~i~2 + 1;" "8644#L12''")
		("8646#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8645#L13''''")
		("8646#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8642#L13''''")
		("8647#L12" "assume !!(~i~2 < ~n~2);" "8618#L13")
		("8648#L12''" "assume true;" "8647#L12")
		("8649#L13''''" "~i~2 := ~i~2 + 1;" "8648#L12''")
		("8650#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8599#L13''''")
		("8650#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8649#L13''''")
		("8651#L12" "assume !!(~i~2 < ~n~2);" "8620#L13")
		("8652#L12''" "assume true;" "8651#L12")
		("8653#L13''''" "~i~2 := ~i~2 + 1;" "8652#L12''")
		("8654#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8655#L13''''")
		("8654#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8653#L13''''")
		("8655#L13''''" "~i~2 := ~i~2 + 1;" "8664#L12''")
		("8656#L12" "assume !!(~i~2 < ~n~2);" "8621#L13")
		("8657#L12" "assume !!(~i~2 < ~n~2);" "8615#L13")
		("8658#L12''" "assume true;" "8657#L12")
		("8659#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8642#L13''''")
		("8659#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8642#L13''''")
		("8660#L12" "assume !!(~i~2 < ~n~2);" "8616#L13")
		("8661#L12''" "assume true;" "8660#L12")
		("8662#L13''''" "~i~2 := ~i~2 + 1;" "8661#L12''")
		("8663#L12" "assume !!(~i~2 < ~n~2);" "8619#L13")
		("8664#L12''" "assume true;" "8663#L12")
	},
	returnTransitions = {
		("8610#ULTIMATE.initEXIT" "8611#ULTIMATE.startENTRY" "return;" "8600#L1")
		("8613#randEXIT" "8614#L13" "return;" "8622#L13'")
		("8613#randEXIT" "8615#L13" "return;" "8623#L13'")
		("8613#randEXIT" "8616#L13" "return;" "8624#L13'")
		("8613#randEXIT" "8617#L13" "return;" "8625#L13'")
		("8613#randEXIT" "8618#L13" "return;" "8626#L13'")
		("8613#randEXIT" "8619#L13" "return;" "8627#L13'")
		("8613#randEXIT" "8620#L13" "return;" "8628#L13'")
		("8613#randEXIT" "8604#L13" "return;" "8602#L13'")
		("8613#randEXIT" "8621#L13" "return;" "8629#L13'")
	}
);
