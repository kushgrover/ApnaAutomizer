// Testfile dumped by Ultimate at 2018/11/19 14:19:04
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"1280#L13''''" "1281#L12''" "1282#L12''" "1283#L12" "1284#L12" "1285#L13" "1286#L13" "1287#L13'" "1288#L13'" "1289#L13''" "1290#L13''" "1291#L13''''" "1292#L13''''" "1293#L12''" "1294#L12''" "1295#L12" "1296#L12" "1297#L13" "1298#L13" "1299#L13'" "1300#L13'" "1301#L13''" "1302#L13''" "1303#L13''''" "1304#L13''''" "1305#L12''" "1306#L12''" "1307#L12" "1308#L12" "1309#L13" "1310#L13" "1311#L13'" "1312#L13'" "1313#L13''" "1314#L13''" "1315#L13''''" "1316#L13''''" "1317#L12''" "1318#L12''" "1319#L12" "1320#L12" "1321#L13" "1322#L13" "1323#L13'" "1324#L13'" "1325#L13''" "1326#L13''" "1327#L13''''" "1328#L13''''" "1329#L12''" "1330#L12''" "1331#L12" "1332#L12" "1333#L13" "1335#L12'''" "1336#mainErr0AssertViolation" "1337#L13'" "1338#L13''" "1266#ULTIMATE.startENTRY" "1267#ULTIMATE.initFINAL" "1268#ULTIMATE.initEXIT" "1269#L1" "1270#mainENTRY" "1271#L12''" "1272#L12" "1273#L13" "1274#randENTRY" "1275#randFINAL" "1276#randEXIT" "1277#L13'" "1278#L13''" "1279#L13''''" },
	initialStates = {"1266#ULTIMATE.startENTRY" },
	finalStates = {"1336#mainErr0AssertViolation" },
	callTransitions = {
		("1285#L13" "call #t~ret0 := rand();" "1274#randENTRY")
		("1286#L13" "call #t~ret0 := rand();" "1274#randENTRY")
		("1297#L13" "call #t~ret0 := rand();" "1274#randENTRY")
		("1298#L13" "call #t~ret0 := rand();" "1274#randENTRY")
		("1309#L13" "call #t~ret0 := rand();" "1274#randENTRY")
		("1310#L13" "call #t~ret0 := rand();" "1274#randENTRY")
		("1321#L13" "call #t~ret0 := rand();" "1274#randENTRY")
		("1322#L13" "call #t~ret0 := rand();" "1274#randENTRY")
		("1333#L13" "call #t~ret0 := rand();" "1274#randENTRY")
		("1266#ULTIMATE.startENTRY" "call ULTIMATE.init();" "1267#ULTIMATE.initFINAL")
		("1269#L1" "call #t~ret1 := main();" "1270#mainENTRY")
		("1273#L13" "call #t~ret0 := rand();" "1274#randENTRY")
	},
	internalTransitions = {
		("1280#L13''''" "~i~2 := ~i~2 + 1;" "1282#L12''")
		("1281#L12''" "assume true;" "1283#L12")
		("1282#L12''" "assume true;" "1284#L12")
		("1283#L12" "assume !!(~i~2 < ~n~2);" "1285#L13")
		("1284#L12" "assume !!(~i~2 < ~n~2);" "1286#L13")
		("1287#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1289#L13''")
		("1288#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1290#L13''")
		("1289#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1291#L13''''")
		("1289#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1292#L13''''")
		("1290#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1292#L13''''")
		("1290#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1292#L13''''")
		("1291#L13''''" "~i~2 := ~i~2 + 1;" "1293#L12''")
		("1292#L13''''" "~i~2 := ~i~2 + 1;" "1294#L12''")
		("1293#L12''" "assume true;" "1295#L12")
		("1294#L12''" "assume true;" "1296#L12")
		("1295#L12" "assume !!(~i~2 < ~n~2);" "1297#L13")
		("1296#L12" "assume !!(~i~2 < ~n~2);" "1298#L13")
		("1299#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1301#L13''")
		("1300#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1302#L13''")
		("1301#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1303#L13''''")
		("1301#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1304#L13''''")
		("1302#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1304#L13''''")
		("1302#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1304#L13''''")
		("1303#L13''''" "~i~2 := ~i~2 + 1;" "1305#L12''")
		("1304#L13''''" "~i~2 := ~i~2 + 1;" "1306#L12''")
		("1305#L12''" "assume true;" "1307#L12")
		("1306#L12''" "assume true;" "1308#L12")
		("1307#L12" "assume !!(~i~2 < ~n~2);" "1309#L13")
		("1308#L12" "assume !!(~i~2 < ~n~2);" "1310#L13")
		("1311#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1313#L13''")
		("1312#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1314#L13''")
		("1313#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1315#L13''''")
		("1313#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1316#L13''''")
		("1314#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1316#L13''''")
		("1314#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1316#L13''''")
		("1315#L13''''" "~i~2 := ~i~2 + 1;" "1317#L12''")
		("1316#L13''''" "~i~2 := ~i~2 + 1;" "1318#L12''")
		("1317#L12''" "assume true;" "1319#L12")
		("1318#L12''" "assume true;" "1320#L12")
		("1319#L12" "assume !!(~i~2 < ~n~2);" "1321#L13")
		("1320#L12" "assume !!(~i~2 < ~n~2);" "1322#L13")
		("1323#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1325#L13''")
		("1324#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1326#L13''")
		("1325#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1316#L13''''")
		("1325#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1327#L13''''")
		("1326#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1328#L13''''")
		("1326#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1328#L13''''")
		("1327#L13''''" "~i~2 := ~i~2 + 1;" "1329#L12''")
		("1328#L13''''" "~i~2 := ~i~2 + 1;" "1330#L12''")
		("1329#L12''" "assume true;" "1331#L12")
		("1330#L12''" "assume true;" "1332#L12")
		("1331#L12" "assume !!(~i~2 < ~n~2);" "1333#L13")
		("1332#L12" "assume !!(~i~2 < ~n~2);" "1322#L13")
		("1332#L12" "assume !(~i~2 < ~n~2);" "1335#L12'''")
		("1335#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "1336#mainErr0AssertViolation")
		("1337#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1338#L13''")
		("1338#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1328#L13''''")
		("1338#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1328#L13''''")
		("1267#ULTIMATE.initFINAL" "assume true;" "1268#ULTIMATE.initEXIT")
		("1270#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "1271#L12''")
		("1271#L12''" "assume true;" "1272#L12")
		("1272#L12" "assume !!(~i~2 < ~n~2);" "1273#L13")
		("1274#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "1275#randFINAL")
		("1275#randFINAL" "assume true;" "1276#randEXIT")
		("1277#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1278#L13''")
		("1278#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1279#L13''''")
		("1278#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1280#L13''''")
		("1279#L13''''" "~i~2 := ~i~2 + 1;" "1281#L12''")
	},
	returnTransitions = {
		("1268#ULTIMATE.initEXIT" "1266#ULTIMATE.startENTRY" "return;" "1269#L1")
		("1276#randEXIT" "1297#L13" "return;" "1299#L13'")
		("1276#randEXIT" "1298#L13" "return;" "1300#L13'")
		("1276#randEXIT" "1285#L13" "return;" "1287#L13'")
		("1276#randEXIT" "1333#L13" "return;" "1337#L13'")
		("1276#randEXIT" "1286#L13" "return;" "1288#L13'")
		("1276#randEXIT" "1273#L13" "return;" "1277#L13'")
		("1276#randEXIT" "1321#L13" "return;" "1323#L13'")
		("1276#randEXIT" "1322#L13" "return;" "1324#L13'")
		("1276#randEXIT" "1309#L13" "return;" "1311#L13'")
		("1276#randEXIT" "1310#L13" "return;" "1312#L13'")
	}
);
