// Testfile dumped by Ultimate at 2018/11/19 14:19:07
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"2560#L13'" "2561#L13'" "2562#randFINAL" "2563#L13''" "2564#L13''''" "2565#ULTIMATE.initFINAL" "2566#L12" "2567#L12''" "2568#L13''''" "2569#L13''" "2570#L12" "2571#L12''" "2572#L13''''" "2573#L13''" "2574#L13''" "2575#L13''''" "2576#L12" "2577#L12''" "2578#L13''''" "2579#L13''" "2580#L12" "2581#L12''" "2582#L13''''" "2583#L13''" "2584#L12" "2585#L12''" "2586#L13''''" "2587#L13''" "2588#L12" "2589#L12" "2590#L12''" "2591#L12" "2592#L12''" "2533#L13'" "2534#L1" "2535#L13''" "2536#L13''''" "2537#L12''" "2538#L13" "2539#randENTRY" "2540#L12" "2541#L13" "2542#L12'''" "2543#mainErr0AssertViolation" "2544#mainENTRY" "2545#ULTIMATE.initEXIT" "2546#ULTIMATE.startENTRY" "2547#L12''" "2548#randEXIT" "2549#L13" "2550#L13" "2551#L13" "2552#L13" "2553#L13" "2554#L13" "2555#L13'" "2556#L13'" "2557#L13'" "2558#L13'" "2559#L13'" },
	initialStates = {"2546#ULTIMATE.startENTRY" },
	finalStates = {"2543#mainErr0AssertViolation" },
	callTransitions = {
		("2534#L1" "call #t~ret1 := main();" "2544#mainENTRY")
		("2538#L13" "call #t~ret0 := rand();" "2539#randENTRY")
		("2541#L13" "call #t~ret0 := rand();" "2539#randENTRY")
		("2546#ULTIMATE.startENTRY" "call ULTIMATE.init();" "2565#ULTIMATE.initFINAL")
		("2549#L13" "call #t~ret0 := rand();" "2539#randENTRY")
		("2550#L13" "call #t~ret0 := rand();" "2539#randENTRY")
		("2551#L13" "call #t~ret0 := rand();" "2539#randENTRY")
		("2552#L13" "call #t~ret0 := rand();" "2539#randENTRY")
		("2553#L13" "call #t~ret0 := rand();" "2539#randENTRY")
		("2554#L13" "call #t~ret0 := rand();" "2539#randENTRY")
	},
	internalTransitions = {
		("2560#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2579#L13''")
		("2561#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2583#L13''")
		("2562#randFINAL" "assume true;" "2548#randEXIT")
		("2563#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2564#L13''''")
		("2563#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2564#L13''''")
		("2564#L13''''" "~i~2 := ~i~2 + 1;" "2592#L12''")
		("2565#ULTIMATE.initFINAL" "assume true;" "2545#ULTIMATE.initEXIT")
		("2566#L12" "assume !!(~i~2 < ~n~2);" "2549#L13")
		("2566#L12" "assume !(~i~2 < ~n~2);" "2542#L12'''")
		("2567#L12''" "assume true;" "2566#L12")
		("2568#L13''''" "~i~2 := ~i~2 + 1;" "2567#L12''")
		("2569#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2568#L13''''")
		("2569#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2568#L13''''")
		("2570#L12" "assume !!(~i~2 < ~n~2);" "2549#L13")
		("2571#L12''" "assume true;" "2570#L12")
		("2572#L13''''" "~i~2 := ~i~2 + 1;" "2571#L12''")
		("2573#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2572#L13''''")
		("2573#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2572#L13''''")
		("2574#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2575#L13''''")
		("2574#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2572#L13''''")
		("2575#L13''''" "~i~2 := ~i~2 + 1;" "2590#L12''")
		("2576#L12" "assume !!(~i~2 < ~n~2);" "2552#L13")
		("2577#L12''" "assume true;" "2576#L12")
		("2578#L13''''" "~i~2 := ~i~2 + 1;" "2577#L12''")
		("2579#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2564#L13''''")
		("2579#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2578#L13''''")
		("2580#L12" "assume !!(~i~2 < ~n~2);" "2553#L13")
		("2581#L12''" "assume true;" "2580#L12")
		("2582#L13''''" "~i~2 := ~i~2 + 1;" "2581#L12''")
		("2583#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2582#L13''''")
		("2583#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2564#L13''''")
		("2584#L12" "assume !!(~i~2 < ~n~2);" "2554#L13")
		("2585#L12''" "assume true;" "2584#L12")
		("2586#L13''''" "~i~2 := ~i~2 + 1;" "2585#L12''")
		("2587#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2586#L13''''")
		("2587#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2536#L13''''")
		("2588#L12" "assume !!(~i~2 < ~n~2);" "2550#L13")
		("2589#L12" "assume !!(~i~2 < ~n~2);" "2551#L13")
		("2590#L12''" "assume true;" "2589#L12")
		("2591#L12" "assume !!(~i~2 < ~n~2);" "2538#L13")
		("2592#L12''" "assume true;" "2591#L12")
		("2533#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2535#L13''")
		("2535#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2575#L13''''")
		("2535#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2575#L13''''")
		("2536#L13''''" "~i~2 := ~i~2 + 1;" "2537#L12''")
		("2537#L12''" "assume true;" "2540#L12")
		("2539#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "2562#randFINAL")
		("2540#L12" "assume !!(~i~2 < ~n~2);" "2541#L13")
		("2542#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "2543#mainErr0AssertViolation")
		("2544#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "2547#L12''")
		("2547#L12''" "assume true;" "2588#L12")
		("2555#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2563#L13''")
		("2556#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2569#L13''")
		("2557#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2587#L13''")
		("2558#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2573#L13''")
		("2559#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2574#L13''")
	},
	returnTransitions = {
		("2545#ULTIMATE.initEXIT" "2546#ULTIMATE.startENTRY" "return;" "2534#L1")
		("2548#randEXIT" "2549#L13" "return;" "2556#L13'")
		("2548#randEXIT" "2550#L13" "return;" "2557#L13'")
		("2548#randEXIT" "2551#L13" "return;" "2558#L13'")
		("2548#randEXIT" "2552#L13" "return;" "2559#L13'")
		("2548#randEXIT" "2553#L13" "return;" "2560#L13'")
		("2548#randEXIT" "2554#L13" "return;" "2561#L13'")
		("2548#randEXIT" "2538#L13" "return;" "2533#L13'")
		("2548#randEXIT" "2541#L13" "return;" "2555#L13'")
	}
);
