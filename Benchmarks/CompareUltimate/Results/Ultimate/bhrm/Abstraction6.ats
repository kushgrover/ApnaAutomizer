// Testfile dumped by Ultimate at 2018/11/19 14:19:02
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"768#mainENTRY" "769#ULTIMATE.initEXIT" "770#ULTIMATE.startENTRY" "771#L12''" "772#randEXIT" "773#L13" "774#L13" "775#L13" "776#L13'" "777#L13'" "778#L13'" "779#L13'" "780#randFINAL" "781#ULTIMATE.initFINAL" "782#L12" "783#L12''" "784#L13''''" "785#L13''" "786#L12" "787#L12''" "788#L13''''" "789#L13''" "790#L12" "791#L12''" "792#L13''''" "793#L13''" "794#L12" "795#L12''" "796#L13''''" "797#L13''" "798#L12" "757#L13'" "758#L1" "759#L13''" "760#L13''''" "761#L12''" "762#L13" "763#randENTRY" "764#L12" "765#L13" "766#L12'''" "767#mainErr0AssertViolation" },
	initialStates = {"770#ULTIMATE.startENTRY" },
	finalStates = {"767#mainErr0AssertViolation" },
	callTransitions = {
		("770#ULTIMATE.startENTRY" "call ULTIMATE.init();" "781#ULTIMATE.initFINAL")
		("773#L13" "call #t~ret0 := rand();" "763#randENTRY")
		("774#L13" "call #t~ret0 := rand();" "763#randENTRY")
		("775#L13" "call #t~ret0 := rand();" "763#randENTRY")
		("758#L1" "call #t~ret1 := main();" "768#mainENTRY")
		("762#L13" "call #t~ret0 := rand();" "763#randENTRY")
		("765#L13" "call #t~ret0 := rand();" "763#randENTRY")
	},
	internalTransitions = {
		("768#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "771#L12''")
		("771#L12''" "assume true;" "798#L12")
		("776#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "789#L13''")
		("777#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "797#L13''")
		("778#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "785#L13''")
		("779#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "793#L13''")
		("780#randFINAL" "assume true;" "772#randEXIT")
		("781#ULTIMATE.initFINAL" "assume true;" "769#ULTIMATE.initEXIT")
		("782#L12" "assume !!(~i~2 < ~n~2);" "774#L13")
		("782#L12" "assume !(~i~2 < ~n~2);" "766#L12'''")
		("783#L12''" "assume true;" "782#L12")
		("784#L13''''" "~i~2 := ~i~2 + 1;" "783#L12''")
		("785#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "784#L13''''")
		("785#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "784#L13''''")
		("786#L12" "assume !!(~i~2 < ~n~2);" "774#L13")
		("787#L12''" "assume true;" "786#L12")
		("788#L13''''" "~i~2 := ~i~2 + 1;" "787#L12''")
		("789#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "788#L13''''")
		("789#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "788#L13''''")
		("790#L12" "assume !!(~i~2 < ~n~2);" "773#L13")
		("791#L12''" "assume true;" "790#L12")
		("792#L13''''" "~i~2 := ~i~2 + 1;" "791#L12''")
		("793#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "792#L13''''")
		("793#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "792#L13''''")
		("794#L12" "assume !!(~i~2 < ~n~2);" "775#L13")
		("795#L12''" "assume true;" "794#L12")
		("796#L13''''" "~i~2 := ~i~2 + 1;" "795#L12''")
		("797#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "796#L13''''")
		("797#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "796#L13''''")
		("798#L12" "assume !!(~i~2 < ~n~2);" "762#L13")
		("757#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "759#L13''")
		("759#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "760#L13''''")
		("759#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "760#L13''''")
		("760#L13''''" "~i~2 := ~i~2 + 1;" "761#L12''")
		("761#L12''" "assume true;" "764#L12")
		("763#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "780#randFINAL")
		("764#L12" "assume !!(~i~2 < ~n~2);" "765#L13")
		("766#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "767#mainErr0AssertViolation")
	},
	returnTransitions = {
		("769#ULTIMATE.initEXIT" "770#ULTIMATE.startENTRY" "return;" "758#L1")
		("772#randEXIT" "773#L13" "return;" "776#L13'")
		("772#randEXIT" "774#L13" "return;" "778#L13'")
		("772#randEXIT" "775#L13" "return;" "779#L13'")
		("772#randEXIT" "762#L13" "return;" "757#L13'")
		("772#randEXIT" "765#L13" "return;" "777#L13'")
	}
);
