// Testfile dumped by Ultimate at 2018/11/19 14:19:03
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"1036#L13''''" "1037#L1" "1038#L12''" "1039#L13'" "1040#L13''" "1041#L13" "1042#randENTRY" "1043#L12" "1044#L12'''" "1045#mainErr0AssertViolation" "1046#mainENTRY" "1047#ULTIMATE.initEXIT" "1048#ULTIMATE.startENTRY" "1049#L12''" "1050#randEXIT" "1051#L13" "1052#L13" "1053#L13" "1054#L13" "1055#L13" "1056#L13" "1057#L13" "1058#L13" "1059#L13'" "1060#L13'" "1061#L13'" "1062#L13'" "1063#L13'" "1064#L13'" "1065#L13'" "1066#L13'" "1067#randFINAL" "1068#L13''" "1069#ULTIMATE.initFINAL" "1070#L12" "1071#L12''" "1072#L13''''" "1073#L13''" "1074#L13''" "1075#L13''''" "1076#L12" "1077#L12''" "1078#L13''''" "1079#L13''" "1080#L12" "1081#L12''" "1082#L13''''" "1083#L13''" "1084#L13''''" "1085#L12" "1086#L12''" "1087#L13''''" "1088#L13''" "1089#L12" "1090#L12''" "1091#L13''''" "1092#L13''" "1093#L13''''" "1094#L12" "1095#L12" "1096#L12''" "1097#L13''" "1098#L12" "1099#L12''" "1100#L12" "1101#L12''" },
	initialStates = {"1048#ULTIMATE.startENTRY" },
	finalStates = {"1045#mainErr0AssertViolation" },
	callTransitions = {
		("1037#L1" "call #t~ret1 := main();" "1046#mainENTRY")
		("1041#L13" "call #t~ret0 := rand();" "1042#randENTRY")
		("1048#ULTIMATE.startENTRY" "call ULTIMATE.init();" "1069#ULTIMATE.initFINAL")
		("1051#L13" "call #t~ret0 := rand();" "1042#randENTRY")
		("1052#L13" "call #t~ret0 := rand();" "1042#randENTRY")
		("1053#L13" "call #t~ret0 := rand();" "1042#randENTRY")
		("1054#L13" "call #t~ret0 := rand();" "1042#randENTRY")
		("1055#L13" "call #t~ret0 := rand();" "1042#randENTRY")
		("1056#L13" "call #t~ret0 := rand();" "1042#randENTRY")
		("1057#L13" "call #t~ret0 := rand();" "1042#randENTRY")
		("1058#L13" "call #t~ret0 := rand();" "1042#randENTRY")
	},
	internalTransitions = {
		("1036#L13''''" "~i~2 := ~i~2 + 1;" "1038#L12''")
		("1038#L12''" "assume true;" "1043#L12")
		("1039#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1040#L13''")
		("1040#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1084#L13''''")
		("1040#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1084#L13''''")
		("1042#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "1067#randFINAL")
		("1043#L12" "assume !!(~i~2 < ~n~2);" "1041#L13")
		("1044#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "1045#mainErr0AssertViolation")
		("1046#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "1049#L12''")
		("1049#L12''" "assume true;" "1094#L12")
		("1059#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1083#L13''")
		("1060#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1088#L13''")
		("1061#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1073#L13''")
		("1062#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1068#L13''")
		("1063#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1092#L13''")
		("1064#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1074#L13''")
		("1065#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1079#L13''")
		("1066#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "1097#L13''")
		("1067#randFINAL" "assume true;" "1050#randEXIT")
		("1068#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1036#L13''''")
		("1068#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1036#L13''''")
		("1069#ULTIMATE.initFINAL" "assume true;" "1047#ULTIMATE.initEXIT")
		("1070#L12" "assume !!(~i~2 < ~n~2);" "1053#L13")
		("1070#L12" "assume !(~i~2 < ~n~2);" "1044#L12'''")
		("1071#L12''" "assume true;" "1070#L12")
		("1072#L13''''" "~i~2 := ~i~2 + 1;" "1071#L12''")
		("1073#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1072#L13''''")
		("1073#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1072#L13''''")
		("1074#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1075#L13''''")
		("1074#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1072#L13''''")
		("1075#L13''''" "~i~2 := ~i~2 + 1;" "1096#L12''")
		("1076#L12" "assume !!(~i~2 < ~n~2);" "1056#L13")
		("1077#L12''" "assume true;" "1076#L12")
		("1078#L13''''" "~i~2 := ~i~2 + 1;" "1077#L12''")
		("1079#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1078#L13''''")
		("1079#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1075#L13''''")
		("1080#L12" "assume !!(~i~2 < ~n~2);" "1057#L13")
		("1081#L12''" "assume true;" "1080#L12")
		("1082#L13''''" "~i~2 := ~i~2 + 1;" "1081#L12''")
		("1083#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1082#L13''''")
		("1083#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1084#L13''''")
		("1084#L13''''" "~i~2 := ~i~2 + 1;" "1099#L12''")
		("1085#L12" "assume !!(~i~2 < ~n~2);" "1051#L13")
		("1086#L12''" "assume true;" "1085#L12")
		("1087#L13''''" "~i~2 := ~i~2 + 1;" "1086#L12''")
		("1088#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1087#L13''''")
		("1088#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1036#L13''''")
		("1089#L12" "assume !!(~i~2 < ~n~2);" "1052#L13")
		("1090#L12''" "assume true;" "1089#L12")
		("1091#L13''''" "~i~2 := ~i~2 + 1;" "1090#L12''")
		("1092#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1091#L13''''")
		("1092#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1093#L13''''")
		("1093#L13''''" "~i~2 := ~i~2 + 1;" "1101#L12''")
		("1094#L12" "assume !!(~i~2 < ~n~2);" "1055#L13")
		("1095#L12" "assume !!(~i~2 < ~n~2);" "1053#L13")
		("1096#L12''" "assume true;" "1095#L12")
		("1097#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "1075#L13''''")
		("1097#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "1075#L13''''")
		("1098#L12" "assume !!(~i~2 < ~n~2);" "1058#L13")
		("1099#L12''" "assume true;" "1098#L12")
		("1100#L12" "assume !!(~i~2 < ~n~2);" "1054#L13")
		("1101#L12''" "assume true;" "1100#L12")
	},
	returnTransitions = {
		("1047#ULTIMATE.initEXIT" "1048#ULTIMATE.startENTRY" "return;" "1037#L1")
		("1050#randEXIT" "1056#L13" "return;" "1064#L13'")
		("1050#randEXIT" "1041#L13" "return;" "1039#L13'")
		("1050#randEXIT" "1057#L13" "return;" "1065#L13'")
		("1050#randEXIT" "1058#L13" "return;" "1066#L13'")
		("1050#randEXIT" "1051#L13" "return;" "1059#L13'")
		("1050#randEXIT" "1052#L13" "return;" "1060#L13'")
		("1050#randEXIT" "1053#L13" "return;" "1061#L13'")
		("1050#randEXIT" "1054#L13" "return;" "1062#L13'")
		("1050#randEXIT" "1055#L13" "return;" "1063#L13'")
	}
);
