// Testfile dumped by Ultimate at 2018/11/19 14:19:07
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"2460#ULTIMATE.startENTRY" "2461#ULTIMATE.initFINAL" "2462#ULTIMATE.initEXIT" "2463#L1" "2464#mainENTRY" "2465#L12''" "2466#L12" "2467#L13" "2468#randENTRY" "2469#randFINAL" "2470#randEXIT" "2471#L13'" "2472#L13''" "2473#L13''''" "2474#L13''''" "2475#L12''" "2476#L12''" "2477#L12" "2478#L12" "2479#L13" "2480#L13" "2481#L13'" "2482#L13'" "2483#L13''" "2484#L13''" "2485#L13''''" "2486#L13''''" "2487#L12''" "2488#L12''" "2489#L12" "2490#L12" "2491#L13" "2492#L13" "2493#L13'" "2494#L13'" "2495#L13''" "2496#L13''" "2497#L13''''" "2498#L13''''" "2499#L12''" "2500#L12''" "2501#L12" "2502#L12" "2503#L13" "2504#L13" "2505#L13'" "2506#L13'" "2507#L13''" "2508#L13''" "2509#L13''''" "2510#L13''''" "2511#L12''" "2512#L12''" "2513#L12" "2514#L12" "2515#L13" "2516#L13" "2517#L13'" "2518#L13'" "2519#L13''" "2520#L13''" "2521#L13''''" "2522#L13''''" "2523#L12''" "2524#L12''" "2525#L12" "2526#L12" "2527#L12'''" "2528#L13" "2530#mainErr0AssertViolation" "2531#L13'" "2532#L13''" },
	initialStates = {"2460#ULTIMATE.startENTRY" },
	finalStates = {"2530#mainErr0AssertViolation" },
	callTransitions = {
		("2460#ULTIMATE.startENTRY" "call ULTIMATE.init();" "2461#ULTIMATE.initFINAL")
		("2463#L1" "call #t~ret1 := main();" "2464#mainENTRY")
		("2467#L13" "call #t~ret0 := rand();" "2468#randENTRY")
		("2479#L13" "call #t~ret0 := rand();" "2468#randENTRY")
		("2480#L13" "call #t~ret0 := rand();" "2468#randENTRY")
		("2491#L13" "call #t~ret0 := rand();" "2468#randENTRY")
		("2492#L13" "call #t~ret0 := rand();" "2468#randENTRY")
		("2503#L13" "call #t~ret0 := rand();" "2468#randENTRY")
		("2504#L13" "call #t~ret0 := rand();" "2468#randENTRY")
		("2515#L13" "call #t~ret0 := rand();" "2468#randENTRY")
		("2516#L13" "call #t~ret0 := rand();" "2468#randENTRY")
		("2528#L13" "call #t~ret0 := rand();" "2468#randENTRY")
	},
	internalTransitions = {
		("2461#ULTIMATE.initFINAL" "assume true;" "2462#ULTIMATE.initEXIT")
		("2464#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "2465#L12''")
		("2465#L12''" "assume true;" "2466#L12")
		("2466#L12" "assume !!(~i~2 < ~n~2);" "2467#L13")
		("2468#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "2469#randFINAL")
		("2469#randFINAL" "assume true;" "2470#randEXIT")
		("2471#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2472#L13''")
		("2472#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2473#L13''''")
		("2472#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2474#L13''''")
		("2473#L13''''" "~i~2 := ~i~2 + 1;" "2475#L12''")
		("2474#L13''''" "~i~2 := ~i~2 + 1;" "2476#L12''")
		("2475#L12''" "assume true;" "2477#L12")
		("2476#L12''" "assume true;" "2478#L12")
		("2477#L12" "assume !!(~i~2 < ~n~2);" "2479#L13")
		("2478#L12" "assume !!(~i~2 < ~n~2);" "2480#L13")
		("2481#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2483#L13''")
		("2482#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2484#L13''")
		("2483#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2485#L13''''")
		("2483#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2485#L13''''")
		("2484#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2486#L13''''")
		("2484#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2485#L13''''")
		("2485#L13''''" "~i~2 := ~i~2 + 1;" "2487#L12''")
		("2486#L13''''" "~i~2 := ~i~2 + 1;" "2488#L12''")
		("2487#L12''" "assume true;" "2489#L12")
		("2488#L12''" "assume true;" "2490#L12")
		("2489#L12" "assume !!(~i~2 < ~n~2);" "2491#L13")
		("2490#L12" "assume !!(~i~2 < ~n~2);" "2492#L13")
		("2493#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2495#L13''")
		("2494#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2496#L13''")
		("2495#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2497#L13''''")
		("2495#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2497#L13''''")
		("2496#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2485#L13''''")
		("2496#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2498#L13''''")
		("2497#L13''''" "~i~2 := ~i~2 + 1;" "2499#L12''")
		("2498#L13''''" "~i~2 := ~i~2 + 1;" "2500#L12''")
		("2499#L12''" "assume true;" "2501#L12")
		("2500#L12''" "assume true;" "2502#L12")
		("2501#L12" "assume !!(~i~2 < ~n~2);" "2503#L13")
		("2502#L12" "assume !!(~i~2 < ~n~2);" "2504#L13")
		("2505#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2507#L13''")
		("2506#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2508#L13''")
		("2507#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2509#L13''''")
		("2507#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2509#L13''''")
		("2508#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2510#L13''''")
		("2508#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2509#L13''''")
		("2509#L13''''" "~i~2 := ~i~2 + 1;" "2511#L12''")
		("2510#L13''''" "~i~2 := ~i~2 + 1;" "2512#L12''")
		("2511#L12''" "assume true;" "2513#L12")
		("2512#L12''" "assume true;" "2514#L12")
		("2513#L12" "assume !!(~i~2 < ~n~2);" "2515#L13")
		("2514#L12" "assume !!(~i~2 < ~n~2);" "2516#L13")
		("2517#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2519#L13''")
		("2518#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2520#L13''")
		("2519#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2521#L13''''")
		("2519#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2521#L13''''")
		("2520#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2509#L13''''")
		("2520#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2522#L13''''")
		("2521#L13''''" "~i~2 := ~i~2 + 1;" "2523#L12''")
		("2522#L13''''" "~i~2 := ~i~2 + 1;" "2524#L12''")
		("2523#L12''" "assume true;" "2525#L12")
		("2524#L12''" "assume true;" "2526#L12")
		("2525#L12" "assume !!(~i~2 < ~n~2);" "2515#L13")
		("2525#L12" "assume !(~i~2 < ~n~2);" "2527#L12'''")
		("2526#L12" "assume !!(~i~2 < ~n~2);" "2528#L13")
		("2527#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "2530#mainErr0AssertViolation")
		("2531#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2532#L13''")
		("2532#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2521#L13''''")
		("2532#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2521#L13''''")
	},
	returnTransitions = {
		("2462#ULTIMATE.initEXIT" "2460#ULTIMATE.startENTRY" "return;" "2463#L1")
		("2470#randEXIT" "2480#L13" "return;" "2481#L13'")
		("2470#randEXIT" "2528#L13" "return;" "2531#L13'")
		("2470#randEXIT" "2467#L13" "return;" "2471#L13'")
		("2470#randEXIT" "2515#L13" "return;" "2517#L13'")
		("2470#randEXIT" "2516#L13" "return;" "2518#L13'")
		("2470#randEXIT" "2503#L13" "return;" "2505#L13'")
		("2470#randEXIT" "2504#L13" "return;" "2506#L13'")
		("2470#randEXIT" "2491#L13" "return;" "2493#L13'")
		("2470#randEXIT" "2492#L13" "return;" "2494#L13'")
		("2470#randEXIT" "2479#L13" "return;" "2482#L13'")
	}
);
