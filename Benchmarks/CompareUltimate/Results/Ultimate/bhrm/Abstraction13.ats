// Testfile dumped by Ultimate at 2018/11/19 14:19:08
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"2830#L13''''" "2831#L1" "2832#L12''" "2833#L13'" "2834#L13''" "2835#L13" "2836#randENTRY" "2837#L12" "2838#L12'''" "2839#mainErr0AssertViolation" "2840#mainENTRY" "2841#ULTIMATE.initEXIT" "2842#ULTIMATE.startENTRY" "2843#L12''" "2844#randEXIT" "2845#L13" "2846#L13" "2847#L13" "2848#L13" "2849#L13" "2850#L13" "2851#L13" "2852#L13" "2853#L13'" "2854#L13'" "2855#L13'" "2856#L13'" "2857#L13'" "2858#L13'" "2859#L13'" "2860#L13'" "2861#randFINAL" "2862#L13''''" "2863#ULTIMATE.initFINAL" "2864#L12" "2865#L12''" "2866#L13''''" "2867#L13''" "2868#L13''" "2869#L13''''" "2870#L12" "2871#L12''" "2872#L13''''" "2873#L13''" "2874#L13''''" "2875#L12" "2876#L12''" "2877#L13''''" "2878#L13''" "2879#L12" "2880#L12''" "2881#L13''''" "2882#L13''" "2883#L12" "2884#L12''" "2885#L13''''" "2886#L13''" "2887#L12" "2888#L12" "2889#L12''" "2890#L13''" "2891#L12" "2892#L12''" "2893#L13''" "2894#L12" "2895#L12''" },
	initialStates = {"2842#ULTIMATE.startENTRY" },
	finalStates = {"2839#mainErr0AssertViolation" },
	callTransitions = {
		("2831#L1" "call #t~ret1 := main();" "2840#mainENTRY")
		("2835#L13" "call #t~ret0 := rand();" "2836#randENTRY")
		("2842#ULTIMATE.startENTRY" "call ULTIMATE.init();" "2863#ULTIMATE.initFINAL")
		("2845#L13" "call #t~ret0 := rand();" "2836#randENTRY")
		("2846#L13" "call #t~ret0 := rand();" "2836#randENTRY")
		("2847#L13" "call #t~ret0 := rand();" "2836#randENTRY")
		("2848#L13" "call #t~ret0 := rand();" "2836#randENTRY")
		("2849#L13" "call #t~ret0 := rand();" "2836#randENTRY")
		("2850#L13" "call #t~ret0 := rand();" "2836#randENTRY")
		("2851#L13" "call #t~ret0 := rand();" "2836#randENTRY")
		("2852#L13" "call #t~ret0 := rand();" "2836#randENTRY")
	},
	internalTransitions = {
		("2830#L13''''" "~i~2 := ~i~2 + 1;" "2832#L12''")
		("2832#L12''" "assume true;" "2837#L12")
		("2833#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2834#L13''")
		("2834#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2862#L13''''")
		("2834#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2862#L13''''")
		("2836#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "2861#randFINAL")
		("2837#L12" "assume !!(~i~2 < ~n~2);" "2835#L13")
		("2838#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "2839#mainErr0AssertViolation")
		("2840#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "2843#L12''")
		("2843#L12''" "assume true;" "2887#L12")
		("2853#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2873#L13''")
		("2854#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2890#L13''")
		("2855#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2878#L13''")
		("2856#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2893#L13''")
		("2857#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2882#L13''")
		("2858#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2867#L13''")
		("2859#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2886#L13''")
		("2860#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2868#L13''")
		("2861#randFINAL" "assume true;" "2844#randEXIT")
		("2862#L13''''" "~i~2 := ~i~2 + 1;" "2895#L12''")
		("2863#ULTIMATE.initFINAL" "assume true;" "2841#ULTIMATE.initEXIT")
		("2864#L12" "assume !!(~i~2 < ~n~2);" "2850#L13")
		("2864#L12" "assume !(~i~2 < ~n~2);" "2838#L12'''")
		("2865#L12''" "assume true;" "2864#L12")
		("2866#L13''''" "~i~2 := ~i~2 + 1;" "2865#L12''")
		("2867#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2866#L13''''")
		("2867#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2866#L13''''")
		("2868#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2869#L13''''")
		("2868#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2866#L13''''")
		("2869#L13''''" "~i~2 := ~i~2 + 1;" "2889#L12''")
		("2870#L12" "assume !!(~i~2 < ~n~2);" "2852#L13")
		("2871#L12''" "assume true;" "2870#L12")
		("2872#L13''''" "~i~2 := ~i~2 + 1;" "2871#L12''")
		("2873#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2874#L13''''")
		("2873#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2872#L13''''")
		("2874#L13''''" "~i~2 := ~i~2 + 1;" "2892#L12''")
		("2875#L12" "assume !!(~i~2 < ~n~2);" "2845#L13")
		("2876#L12''" "assume true;" "2875#L12")
		("2877#L13''''" "~i~2 := ~i~2 + 1;" "2876#L12''")
		("2878#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2862#L13''''")
		("2878#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2877#L13''''")
		("2879#L12" "assume !!(~i~2 < ~n~2);" "2847#L13")
		("2880#L12''" "assume true;" "2879#L12")
		("2881#L13''''" "~i~2 := ~i~2 + 1;" "2880#L12''")
		("2882#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2881#L13''''")
		("2882#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2862#L13''''")
		("2883#L12" "assume !!(~i~2 < ~n~2);" "2849#L13")
		("2884#L12''" "assume true;" "2883#L12")
		("2885#L13''''" "~i~2 := ~i~2 + 1;" "2884#L12''")
		("2886#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2885#L13''''")
		("2886#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2830#L13''''")
		("2887#L12" "assume !!(~i~2 < ~n~2);" "2851#L13")
		("2888#L12" "assume !!(~i~2 < ~n~2);" "2850#L13")
		("2889#L12''" "assume true;" "2888#L12")
		("2890#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2869#L13''''")
		("2890#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2869#L13''''")
		("2891#L12" "assume !!(~i~2 < ~n~2);" "2846#L13")
		("2892#L12''" "assume true;" "2891#L12")
		("2893#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2874#L13''''")
		("2893#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2874#L13''''")
		("2894#L12" "assume !!(~i~2 < ~n~2);" "2848#L13")
		("2895#L12''" "assume true;" "2894#L12")
	},
	returnTransitions = {
		("2841#ULTIMATE.initEXIT" "2842#ULTIMATE.startENTRY" "return;" "2831#L1")
		("2844#randEXIT" "2848#L13" "return;" "2856#L13'")
		("2844#randEXIT" "2849#L13" "return;" "2857#L13'")
		("2844#randEXIT" "2850#L13" "return;" "2858#L13'")
		("2844#randEXIT" "2851#L13" "return;" "2859#L13'")
		("2844#randEXIT" "2835#L13" "return;" "2833#L13'")
		("2844#randEXIT" "2852#L13" "return;" "2860#L13'")
		("2844#randEXIT" "2845#L13" "return;" "2853#L13'")
		("2844#randEXIT" "2846#L13" "return;" "2854#L13'")
		("2844#randEXIT" "2847#L13" "return;" "2855#L13'")
	}
);
