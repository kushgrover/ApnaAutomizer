// Testfile dumped by Ultimate at 2018/11/19 14:19:09
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"3345#ULTIMATE.startENTRY" "3346#ULTIMATE.initFINAL" "3347#ULTIMATE.initEXIT" "3348#L1" "3349#mainENTRY" "3350#L12''" "3351#L12" "3352#L13" "3353#randENTRY" "3354#randFINAL" "3355#randEXIT" "3356#L13'" "3357#L13''" "3358#L13''''" "3359#L13''''" "3360#L12''" "3361#L12''" "3362#L12" "3363#L12" "3364#L13" "3365#L13" "3366#L13'" "3367#L13'" "3368#L13''" "3369#L13''" "3370#L13''''" "3371#L13''''" "3372#L12''" "3373#L12''" "3374#L12" "3375#L12" "3376#L13" "3377#L13" "3378#L13'" "3379#L13'" "3380#L13''" "3381#L13''" "3382#L13''''" "3383#L13''''" "3384#L12''" "3385#L12''" "3386#L12" "3387#L12" "3388#L13" "3389#L13" "3390#L13'" "3391#L13'" "3392#L13''" "3393#L13''" "3394#L13''''" "3395#L13''''" "3396#L12''" "3397#L12''" "3398#L12" "3399#L12" "3400#L13" "3401#L13" "3402#L13'" "3403#L13'" "3404#L13''" "3405#L13''" "3406#L13''''" "3407#L13''''" "3408#L12''" "3409#L12''" "3410#L12" "3411#L12" "3412#L13" "3414#L12'''" "3415#mainErr0AssertViolation" "3416#L13'" "3417#L13''" },
	initialStates = {"3345#ULTIMATE.startENTRY" },
	finalStates = {"3415#mainErr0AssertViolation" },
	callTransitions = {
		("3345#ULTIMATE.startENTRY" "call ULTIMATE.init();" "3346#ULTIMATE.initFINAL")
		("3348#L1" "call #t~ret1 := main();" "3349#mainENTRY")
		("3352#L13" "call #t~ret0 := rand();" "3353#randENTRY")
		("3364#L13" "call #t~ret0 := rand();" "3353#randENTRY")
		("3365#L13" "call #t~ret0 := rand();" "3353#randENTRY")
		("3376#L13" "call #t~ret0 := rand();" "3353#randENTRY")
		("3377#L13" "call #t~ret0 := rand();" "3353#randENTRY")
		("3388#L13" "call #t~ret0 := rand();" "3353#randENTRY")
		("3389#L13" "call #t~ret0 := rand();" "3353#randENTRY")
		("3400#L13" "call #t~ret0 := rand();" "3353#randENTRY")
		("3401#L13" "call #t~ret0 := rand();" "3353#randENTRY")
		("3412#L13" "call #t~ret0 := rand();" "3353#randENTRY")
	},
	internalTransitions = {
		("3346#ULTIMATE.initFINAL" "assume true;" "3347#ULTIMATE.initEXIT")
		("3349#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "3350#L12''")
		("3350#L12''" "assume true;" "3351#L12")
		("3351#L12" "assume !!(~i~2 < ~n~2);" "3352#L13")
		("3353#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "3354#randFINAL")
		("3354#randFINAL" "assume true;" "3355#randEXIT")
		("3356#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3357#L13''")
		("3357#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3358#L13''''")
		("3357#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3359#L13''''")
		("3358#L13''''" "~i~2 := ~i~2 + 1;" "3360#L12''")
		("3359#L13''''" "~i~2 := ~i~2 + 1;" "3361#L12''")
		("3360#L12''" "assume true;" "3362#L12")
		("3361#L12''" "assume true;" "3363#L12")
		("3362#L12" "assume !!(~i~2 < ~n~2);" "3364#L13")
		("3363#L12" "assume !!(~i~2 < ~n~2);" "3365#L13")
		("3366#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3368#L13''")
		("3367#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3369#L13''")
		("3368#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3359#L13''''")
		("3368#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3370#L13''''")
		("3369#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3371#L13''''")
		("3369#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3371#L13''''")
		("3370#L13''''" "~i~2 := ~i~2 + 1;" "3372#L12''")
		("3371#L13''''" "~i~2 := ~i~2 + 1;" "3373#L12''")
		("3372#L12''" "assume true;" "3374#L12")
		("3373#L12''" "assume true;" "3375#L12")
		("3374#L12" "assume !!(~i~2 < ~n~2);" "3376#L13")
		("3375#L12" "assume !!(~i~2 < ~n~2);" "3377#L13")
		("3378#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3380#L13''")
		("3379#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3381#L13''")
		("3380#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3382#L13''''")
		("3380#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3383#L13''''")
		("3381#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3383#L13''''")
		("3381#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3383#L13''''")
		("3382#L13''''" "~i~2 := ~i~2 + 1;" "3384#L12''")
		("3383#L13''''" "~i~2 := ~i~2 + 1;" "3385#L12''")
		("3384#L12''" "assume true;" "3386#L12")
		("3385#L12''" "assume true;" "3387#L12")
		("3386#L12" "assume !!(~i~2 < ~n~2);" "3388#L13")
		("3387#L12" "assume !!(~i~2 < ~n~2);" "3389#L13")
		("3390#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3392#L13''")
		("3391#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3393#L13''")
		("3392#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3394#L13''''")
		("3392#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3395#L13''''")
		("3393#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3395#L13''''")
		("3393#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3395#L13''''")
		("3394#L13''''" "~i~2 := ~i~2 + 1;" "3396#L12''")
		("3395#L13''''" "~i~2 := ~i~2 + 1;" "3397#L12''")
		("3396#L12''" "assume true;" "3398#L12")
		("3397#L12''" "assume true;" "3399#L12")
		("3398#L12" "assume !!(~i~2 < ~n~2);" "3400#L13")
		("3399#L12" "assume !!(~i~2 < ~n~2);" "3401#L13")
		("3402#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3404#L13''")
		("3403#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3405#L13''")
		("3404#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3406#L13''''")
		("3404#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3407#L13''''")
		("3405#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3407#L13''''")
		("3405#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3407#L13''''")
		("3406#L13''''" "~i~2 := ~i~2 + 1;" "3408#L12''")
		("3407#L13''''" "~i~2 := ~i~2 + 1;" "3409#L12''")
		("3408#L12''" "assume true;" "3410#L12")
		("3409#L12''" "assume true;" "3411#L12")
		("3410#L12" "assume !!(~i~2 < ~n~2);" "3412#L13")
		("3411#L12" "assume !!(~i~2 < ~n~2);" "3401#L13")
		("3411#L12" "assume !(~i~2 < ~n~2);" "3414#L12'''")
		("3414#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "3415#mainErr0AssertViolation")
		("3416#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3417#L13''")
		("3417#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3407#L13''''")
		("3417#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3407#L13''''")
	},
	returnTransitions = {
		("3347#ULTIMATE.initEXIT" "3345#ULTIMATE.startENTRY" "return;" "3348#L1")
		("3355#randEXIT" "3376#L13" "return;" "3378#L13'")
		("3355#randEXIT" "3377#L13" "return;" "3379#L13'")
		("3355#randEXIT" "3364#L13" "return;" "3366#L13'")
		("3355#randEXIT" "3412#L13" "return;" "3416#L13'")
		("3355#randEXIT" "3365#L13" "return;" "3367#L13'")
		("3355#randEXIT" "3352#L13" "return;" "3356#L13'")
		("3355#randEXIT" "3400#L13" "return;" "3402#L13'")
		("3355#randEXIT" "3401#L13" "return;" "3403#L13'")
		("3355#randEXIT" "3388#L13" "return;" "3390#L13'")
		("3355#randEXIT" "3389#L13" "return;" "3391#L13'")
	}
);
