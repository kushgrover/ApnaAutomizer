// Testfile dumped by Ultimate at 2018/11/19 14:19:15
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"5248#L12''" "5249#L13''''" "5250#L13''" "5251#L13''" "5252#L13''''" "5253#L12" "5254#L12''" "5255#L13''''" "5256#L13''" "5257#L13''''" "5258#L12" "5259#L12''" "5260#L13''''" "5261#L13''" "5262#L12" "5263#L12''" "5264#L13''''" "5265#L13''" "5266#L12" "5267#L12''" "5268#L13''''" "5269#L13''" "5270#L12" "5271#L12" "5272#L12''" "5273#L13''" "5274#L12" "5275#L12''" "5276#L12" "5277#L12''" "5212#L13'" "5213#L1" "5214#L13''" "5215#L13''''" "5216#L12''" "5217#L13" "5218#randENTRY" "5219#L12" "5220#L13" "5221#L12'''" "5222#mainErr0AssertViolation" "5223#mainENTRY" "5224#ULTIMATE.initEXIT" "5225#ULTIMATE.startENTRY" "5226#L12''" "5227#randEXIT" "5228#L13" "5229#L13" "5230#L13" "5231#L13" "5232#L13" "5233#L13" "5234#L13" "5235#L13'" "5236#L13'" "5237#L13'" "5238#L13'" "5239#L13'" "5240#L13'" "5241#L13'" "5242#L13'" "5243#randFINAL" "5244#L13''" "5245#L13''''" "5246#ULTIMATE.initFINAL" "5247#L12" },
	initialStates = {"5225#ULTIMATE.startENTRY" },
	finalStates = {"5222#mainErr0AssertViolation" },
	callTransitions = {
		("5213#L1" "call #t~ret1 := main();" "5223#mainENTRY")
		("5217#L13" "call #t~ret0 := rand();" "5218#randENTRY")
		("5220#L13" "call #t~ret0 := rand();" "5218#randENTRY")
		("5225#ULTIMATE.startENTRY" "call ULTIMATE.init();" "5246#ULTIMATE.initFINAL")
		("5228#L13" "call #t~ret0 := rand();" "5218#randENTRY")
		("5229#L13" "call #t~ret0 := rand();" "5218#randENTRY")
		("5230#L13" "call #t~ret0 := rand();" "5218#randENTRY")
		("5231#L13" "call #t~ret0 := rand();" "5218#randENTRY")
		("5232#L13" "call #t~ret0 := rand();" "5218#randENTRY")
		("5233#L13" "call #t~ret0 := rand();" "5218#randENTRY")
		("5234#L13" "call #t~ret0 := rand();" "5218#randENTRY")
	},
	internalTransitions = {
		("5248#L12''" "assume true;" "5247#L12")
		("5249#L13''''" "~i~2 := ~i~2 + 1;" "5248#L12''")
		("5250#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5249#L13''''")
		("5250#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5249#L13''''")
		("5251#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5252#L13''''")
		("5251#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5249#L13''''")
		("5252#L13''''" "~i~2 := ~i~2 + 1;" "5272#L12''")
		("5253#L12" "assume !!(~i~2 < ~n~2);" "5232#L13")
		("5254#L12''" "assume true;" "5253#L12")
		("5255#L13''''" "~i~2 := ~i~2 + 1;" "5254#L12''")
		("5256#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5257#L13''''")
		("5256#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5255#L13''''")
		("5257#L13''''" "~i~2 := ~i~2 + 1;" "5275#L12''")
		("5258#L12" "assume !!(~i~2 < ~n~2);" "5233#L13")
		("5259#L12''" "assume true;" "5258#L12")
		("5260#L13''''" "~i~2 := ~i~2 + 1;" "5259#L12''")
		("5261#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5245#L13''''")
		("5261#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5260#L13''''")
		("5262#L12" "assume !!(~i~2 < ~n~2);" "5228#L13")
		("5263#L12''" "assume true;" "5262#L12")
		("5264#L13''''" "~i~2 := ~i~2 + 1;" "5263#L12''")
		("5265#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5215#L13''''")
		("5265#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5264#L13''''")
		("5266#L12" "assume !!(~i~2 < ~n~2);" "5229#L13")
		("5267#L12''" "assume true;" "5266#L12")
		("5268#L13''''" "~i~2 := ~i~2 + 1;" "5267#L12''")
		("5269#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5268#L13''''")
		("5269#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5215#L13''''")
		("5270#L12" "assume !!(~i~2 < ~n~2);" "5231#L13")
		("5271#L12" "assume !!(~i~2 < ~n~2);" "5230#L13")
		("5272#L12''" "assume true;" "5271#L12")
		("5273#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5252#L13''''")
		("5273#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5252#L13''''")
		("5274#L12" "assume !!(~i~2 < ~n~2);" "5234#L13")
		("5275#L12''" "assume true;" "5274#L12")
		("5276#L12" "assume !!(~i~2 < ~n~2);" "5217#L13")
		("5277#L12''" "assume true;" "5276#L12")
		("5212#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5214#L13''")
		("5214#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5257#L13''''")
		("5214#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5257#L13''''")
		("5215#L13''''" "~i~2 := ~i~2 + 1;" "5216#L12''")
		("5216#L12''" "assume true;" "5219#L12")
		("5218#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "5243#randFINAL")
		("5219#L12" "assume !!(~i~2 < ~n~2);" "5220#L13")
		("5221#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "5222#mainErr0AssertViolation")
		("5223#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "5226#L12''")
		("5226#L12''" "assume true;" "5270#L12")
		("5235#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5261#L13''")
		("5236#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5265#L13''")
		("5237#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5250#L13''")
		("5238#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5244#L13''")
		("5239#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5269#L13''")
		("5240#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5251#L13''")
		("5241#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5256#L13''")
		("5242#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5273#L13''")
		("5243#randFINAL" "assume true;" "5227#randEXIT")
		("5244#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5245#L13''''")
		("5244#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5245#L13''''")
		("5245#L13''''" "~i~2 := ~i~2 + 1;" "5277#L12''")
		("5246#ULTIMATE.initFINAL" "assume true;" "5224#ULTIMATE.initEXIT")
		("5247#L12" "assume !!(~i~2 < ~n~2);" "5230#L13")
		("5247#L12" "assume !(~i~2 < ~n~2);" "5221#L12'''")
	},
	returnTransitions = {
		("5224#ULTIMATE.initEXIT" "5225#ULTIMATE.startENTRY" "return;" "5213#L1")
		("5227#randEXIT" "5232#L13" "return;" "5240#L13'")
		("5227#randEXIT" "5217#L13" "return;" "5212#L13'")
		("5227#randEXIT" "5233#L13" "return;" "5241#L13'")
		("5227#randEXIT" "5234#L13" "return;" "5242#L13'")
		("5227#randEXIT" "5220#L13" "return;" "5238#L13'")
		("5227#randEXIT" "5228#L13" "return;" "5235#L13'")
		("5227#randEXIT" "5229#L13" "return;" "5236#L13'")
		("5227#randEXIT" "5230#L13" "return;" "5237#L13'")
		("5227#randEXIT" "5231#L13" "return;" "5239#L13'")
	}
);
