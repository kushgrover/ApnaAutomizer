// Testfile dumped by Ultimate at 2018/11/19 14:19:07
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"2176#L13" "2177#L13" "2178#L13'" "2179#L13'" "2180#L13''" "2181#L13''" "2182#L13''''" "2183#L13''''" "2184#L12''" "2185#L12''" "2186#L12" "2187#L12" "2188#L13" "2189#L13" "2190#L13'" "2191#L13'" "2192#L13''" "2193#L13''" "2194#L13''''" "2195#L13''''" "2196#L12''" "2197#L12''" "2198#L12" "2199#L12" "2200#L13" "2201#L13" "2202#L13'" "2203#L13'" "2204#L13''" "2205#L13''" "2206#L13''''" "2207#L13''''" "2208#L12''" "2209#L12''" "2210#L12" "2211#L12" "2212#L13" "2213#L13" "2214#L13'" "2215#L13'" "2216#L13''" "2217#L13''" "2218#L13''''" "2219#L13''''" "2220#L12''" "2221#L12''" "2222#L12" "2223#L12" "2224#L13" "2226#L12'''" "2227#mainErr0AssertViolation" "2228#L13'" "2229#L13''" "2157#ULTIMATE.startENTRY" "2158#ULTIMATE.initFINAL" "2159#ULTIMATE.initEXIT" "2160#L1" "2161#mainENTRY" "2162#L12''" "2163#L12" "2164#L13" "2165#randENTRY" "2166#randFINAL" "2167#randEXIT" "2168#L13'" "2169#L13''" "2170#L13''''" "2171#L13''''" "2172#L12''" "2173#L12''" "2174#L12" "2175#L12" },
	initialStates = {"2157#ULTIMATE.startENTRY" },
	finalStates = {"2227#mainErr0AssertViolation" },
	callTransitions = {
		("2176#L13" "call #t~ret0 := rand();" "2165#randENTRY")
		("2177#L13" "call #t~ret0 := rand();" "2165#randENTRY")
		("2188#L13" "call #t~ret0 := rand();" "2165#randENTRY")
		("2189#L13" "call #t~ret0 := rand();" "2165#randENTRY")
		("2200#L13" "call #t~ret0 := rand();" "2165#randENTRY")
		("2201#L13" "call #t~ret0 := rand();" "2165#randENTRY")
		("2212#L13" "call #t~ret0 := rand();" "2165#randENTRY")
		("2213#L13" "call #t~ret0 := rand();" "2165#randENTRY")
		("2224#L13" "call #t~ret0 := rand();" "2165#randENTRY")
		("2157#ULTIMATE.startENTRY" "call ULTIMATE.init();" "2158#ULTIMATE.initFINAL")
		("2160#L1" "call #t~ret1 := main();" "2161#mainENTRY")
		("2164#L13" "call #t~ret0 := rand();" "2165#randENTRY")
	},
	internalTransitions = {
		("2178#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2180#L13''")
		("2179#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2181#L13''")
		("2180#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2182#L13''''")
		("2180#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2183#L13''''")
		("2181#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2183#L13''''")
		("2181#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2183#L13''''")
		("2182#L13''''" "~i~2 := ~i~2 + 1;" "2184#L12''")
		("2183#L13''''" "~i~2 := ~i~2 + 1;" "2185#L12''")
		("2184#L12''" "assume true;" "2186#L12")
		("2185#L12''" "assume true;" "2187#L12")
		("2186#L12" "assume !!(~i~2 < ~n~2);" "2188#L13")
		("2187#L12" "assume !!(~i~2 < ~n~2);" "2189#L13")
		("2190#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2192#L13''")
		("2191#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2193#L13''")
		("2192#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2183#L13''''")
		("2192#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2194#L13''''")
		("2193#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2195#L13''''")
		("2193#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2195#L13''''")
		("2194#L13''''" "~i~2 := ~i~2 + 1;" "2196#L12''")
		("2195#L13''''" "~i~2 := ~i~2 + 1;" "2197#L12''")
		("2196#L12''" "assume true;" "2198#L12")
		("2197#L12''" "assume true;" "2199#L12")
		("2198#L12" "assume !!(~i~2 < ~n~2);" "2200#L13")
		("2199#L12" "assume !!(~i~2 < ~n~2);" "2201#L13")
		("2202#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2204#L13''")
		("2203#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2205#L13''")
		("2204#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2206#L13''''")
		("2204#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2207#L13''''")
		("2205#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2207#L13''''")
		("2205#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2207#L13''''")
		("2206#L13''''" "~i~2 := ~i~2 + 1;" "2208#L12''")
		("2207#L13''''" "~i~2 := ~i~2 + 1;" "2209#L12''")
		("2208#L12''" "assume true;" "2210#L12")
		("2209#L12''" "assume true;" "2211#L12")
		("2210#L12" "assume !!(~i~2 < ~n~2);" "2212#L13")
		("2211#L12" "assume !!(~i~2 < ~n~2);" "2213#L13")
		("2214#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2216#L13''")
		("2215#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2217#L13''")
		("2216#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2218#L13''''")
		("2216#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2219#L13''''")
		("2217#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2219#L13''''")
		("2217#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2219#L13''''")
		("2218#L13''''" "~i~2 := ~i~2 + 1;" "2220#L12''")
		("2219#L13''''" "~i~2 := ~i~2 + 1;" "2221#L12''")
		("2220#L12''" "assume true;" "2222#L12")
		("2221#L12''" "assume true;" "2223#L12")
		("2222#L12" "assume !!(~i~2 < ~n~2);" "2224#L13")
		("2223#L12" "assume !!(~i~2 < ~n~2);" "2213#L13")
		("2223#L12" "assume !(~i~2 < ~n~2);" "2226#L12'''")
		("2226#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "2227#mainErr0AssertViolation")
		("2228#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2229#L13''")
		("2229#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2219#L13''''")
		("2229#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2219#L13''''")
		("2158#ULTIMATE.initFINAL" "assume true;" "2159#ULTIMATE.initEXIT")
		("2161#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "2162#L12''")
		("2162#L12''" "assume true;" "2163#L12")
		("2163#L12" "assume !!(~i~2 < ~n~2);" "2164#L13")
		("2165#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "2166#randFINAL")
		("2166#randFINAL" "assume true;" "2167#randEXIT")
		("2168#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2169#L13''")
		("2169#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2170#L13''''")
		("2169#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2171#L13''''")
		("2170#L13''''" "~i~2 := ~i~2 + 1;" "2172#L12''")
		("2171#L13''''" "~i~2 := ~i~2 + 1;" "2173#L12''")
		("2172#L12''" "assume true;" "2174#L12")
		("2173#L12''" "assume true;" "2175#L12")
		("2174#L12" "assume !!(~i~2 < ~n~2);" "2176#L13")
		("2175#L12" "assume !!(~i~2 < ~n~2);" "2177#L13")
	},
	returnTransitions = {
		("2159#ULTIMATE.initEXIT" "2157#ULTIMATE.startENTRY" "return;" "2160#L1")
		("2167#randEXIT" "2176#L13" "return;" "2178#L13'")
		("2167#randEXIT" "2224#L13" "return;" "2228#L13'")
		("2167#randEXIT" "2177#L13" "return;" "2179#L13'")
		("2167#randEXIT" "2164#L13" "return;" "2168#L13'")
		("2167#randEXIT" "2212#L13" "return;" "2214#L13'")
		("2167#randEXIT" "2213#L13" "return;" "2215#L13'")
		("2167#randEXIT" "2200#L13" "return;" "2202#L13'")
		("2167#randEXIT" "2201#L13" "return;" "2203#L13'")
		("2167#randEXIT" "2188#L13" "return;" "2190#L13'")
		("2167#randEXIT" "2189#L13" "return;" "2191#L13'")
	}
);
