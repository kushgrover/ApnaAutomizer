// Testfile dumped by Ultimate at 2018/11/19 14:19:15
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"5139#ULTIMATE.startENTRY" "5140#ULTIMATE.initFINAL" "5141#ULTIMATE.initEXIT" "5142#L1" "5143#mainENTRY" "5144#L12''" "5145#L12" "5146#L13" "5147#randENTRY" "5148#randFINAL" "5149#randEXIT" "5150#L13'" "5151#L13''" "5152#L13''''" "5153#L13''''" "5154#L12''" "5155#L12''" "5156#L12" "5157#L12" "5158#L13" "5159#L13" "5160#L13'" "5161#L13'" "5162#L13''" "5163#L13''" "5164#L13''''" "5165#L13''''" "5166#L12''" "5167#L12''" "5168#L12" "5169#L12" "5170#L13" "5171#L13" "5172#L13'" "5173#L13'" "5174#L13''" "5175#L13''" "5176#L13''''" "5177#L13''''" "5178#L12''" "5179#L12''" "5180#L12" "5181#L12" "5182#L13" "5183#L13" "5184#L13'" "5185#L13'" "5186#L13''" "5187#L13''" "5188#L13''''" "5189#L13''''" "5190#L12''" "5191#L12''" "5192#L12" "5193#L12" "5194#L13" "5195#L13" "5196#L13'" "5197#L13'" "5198#L13''" "5199#L13''" "5200#L13''''" "5201#L13''''" "5202#L12''" "5203#L12''" "5204#L12" "5205#L12" "5206#L13" "5208#L12'''" "5209#mainErr0AssertViolation" "5210#L13'" "5211#L13''" },
	initialStates = {"5139#ULTIMATE.startENTRY" },
	finalStates = {"5209#mainErr0AssertViolation" },
	callTransitions = {
		("5139#ULTIMATE.startENTRY" "call ULTIMATE.init();" "5140#ULTIMATE.initFINAL")
		("5142#L1" "call #t~ret1 := main();" "5143#mainENTRY")
		("5146#L13" "call #t~ret0 := rand();" "5147#randENTRY")
		("5158#L13" "call #t~ret0 := rand();" "5147#randENTRY")
		("5159#L13" "call #t~ret0 := rand();" "5147#randENTRY")
		("5170#L13" "call #t~ret0 := rand();" "5147#randENTRY")
		("5171#L13" "call #t~ret0 := rand();" "5147#randENTRY")
		("5182#L13" "call #t~ret0 := rand();" "5147#randENTRY")
		("5183#L13" "call #t~ret0 := rand();" "5147#randENTRY")
		("5194#L13" "call #t~ret0 := rand();" "5147#randENTRY")
		("5195#L13" "call #t~ret0 := rand();" "5147#randENTRY")
		("5206#L13" "call #t~ret0 := rand();" "5147#randENTRY")
	},
	internalTransitions = {
		("5140#ULTIMATE.initFINAL" "assume true;" "5141#ULTIMATE.initEXIT")
		("5143#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "5144#L12''")
		("5144#L12''" "assume true;" "5145#L12")
		("5145#L12" "assume !!(~i~2 < ~n~2);" "5146#L13")
		("5147#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "5148#randFINAL")
		("5148#randFINAL" "assume true;" "5149#randEXIT")
		("5150#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5151#L13''")
		("5151#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5152#L13''''")
		("5151#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5153#L13''''")
		("5152#L13''''" "~i~2 := ~i~2 + 1;" "5154#L12''")
		("5153#L13''''" "~i~2 := ~i~2 + 1;" "5155#L12''")
		("5154#L12''" "assume true;" "5156#L12")
		("5155#L12''" "assume true;" "5157#L12")
		("5156#L12" "assume !!(~i~2 < ~n~2);" "5158#L13")
		("5157#L12" "assume !!(~i~2 < ~n~2);" "5159#L13")
		("5160#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5162#L13''")
		("5161#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5163#L13''")
		("5162#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5153#L13''''")
		("5162#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5164#L13''''")
		("5163#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5165#L13''''")
		("5163#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5165#L13''''")
		("5164#L13''''" "~i~2 := ~i~2 + 1;" "5166#L12''")
		("5165#L13''''" "~i~2 := ~i~2 + 1;" "5167#L12''")
		("5166#L12''" "assume true;" "5168#L12")
		("5167#L12''" "assume true;" "5169#L12")
		("5168#L12" "assume !!(~i~2 < ~n~2);" "5170#L13")
		("5169#L12" "assume !!(~i~2 < ~n~2);" "5171#L13")
		("5172#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5174#L13''")
		("5173#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5175#L13''")
		("5174#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5165#L13''''")
		("5174#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5176#L13''''")
		("5175#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5177#L13''''")
		("5175#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5177#L13''''")
		("5176#L13''''" "~i~2 := ~i~2 + 1;" "5178#L12''")
		("5177#L13''''" "~i~2 := ~i~2 + 1;" "5179#L12''")
		("5178#L12''" "assume true;" "5180#L12")
		("5179#L12''" "assume true;" "5181#L12")
		("5180#L12" "assume !!(~i~2 < ~n~2);" "5182#L13")
		("5181#L12" "assume !!(~i~2 < ~n~2);" "5183#L13")
		("5184#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5186#L13''")
		("5185#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5187#L13''")
		("5186#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5177#L13''''")
		("5186#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5188#L13''''")
		("5187#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5189#L13''''")
		("5187#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5189#L13''''")
		("5188#L13''''" "~i~2 := ~i~2 + 1;" "5190#L12''")
		("5189#L13''''" "~i~2 := ~i~2 + 1;" "5191#L12''")
		("5190#L12''" "assume true;" "5192#L12")
		("5191#L12''" "assume true;" "5193#L12")
		("5192#L12" "assume !!(~i~2 < ~n~2);" "5194#L13")
		("5193#L12" "assume !!(~i~2 < ~n~2);" "5195#L13")
		("5196#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5198#L13''")
		("5197#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5199#L13''")
		("5198#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5200#L13''''")
		("5198#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5201#L13''''")
		("5199#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5201#L13''''")
		("5199#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5201#L13''''")
		("5200#L13''''" "~i~2 := ~i~2 + 1;" "5202#L12''")
		("5201#L13''''" "~i~2 := ~i~2 + 1;" "5203#L12''")
		("5202#L12''" "assume true;" "5204#L12")
		("5203#L12''" "assume true;" "5205#L12")
		("5204#L12" "assume !!(~i~2 < ~n~2);" "5206#L13")
		("5205#L12" "assume !!(~i~2 < ~n~2);" "5195#L13")
		("5205#L12" "assume !(~i~2 < ~n~2);" "5208#L12'''")
		("5208#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "5209#mainErr0AssertViolation")
		("5210#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5211#L13''")
		("5211#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5201#L13''''")
		("5211#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5201#L13''''")
	},
	returnTransitions = {
		("5141#ULTIMATE.initEXIT" "5139#ULTIMATE.startENTRY" "return;" "5142#L1")
		("5149#randEXIT" "5170#L13" "return;" "5172#L13'")
		("5149#randEXIT" "5171#L13" "return;" "5173#L13'")
		("5149#randEXIT" "5158#L13" "return;" "5160#L13'")
		("5149#randEXIT" "5206#L13" "return;" "5210#L13'")
		("5149#randEXIT" "5159#L13" "return;" "5161#L13'")
		("5149#randEXIT" "5146#L13" "return;" "5150#L13'")
		("5149#randEXIT" "5194#L13" "return;" "5196#L13'")
		("5149#randEXIT" "5195#L13" "return;" "5197#L13'")
		("5149#randEXIT" "5182#L13" "return;" "5184#L13'")
		("5149#randEXIT" "5183#L13" "return;" "5185#L13'")
	}
);
