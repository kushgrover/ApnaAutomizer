// Testfile dumped by Ultimate at 2018/11/19 14:19:26
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"10386#ULTIMATE.startENTRY" "10387#ULTIMATE.initFINAL" "10388#ULTIMATE.initEXIT" "10389#L1" "10390#mainENTRY" "10391#L12''" "10392#L12" "10393#L13" "10394#randENTRY" "10395#randFINAL" "10396#randEXIT" "10397#L13'" "10398#L13''" "10399#L13''''" "10400#L13''''" "10401#L12''" "10402#L12''" "10403#L12" "10404#L12" "10405#L13" "10406#L13" "10407#L13'" "10408#L13'" "10409#L13''" "10410#L13''" "10411#L13''''" "10412#L13''''" "10413#L12''" "10414#L12''" "10415#L12" "10416#L12" "10417#L13" "10418#L13" "10419#L13'" "10420#L13'" "10421#L13''" "10422#L13''" "10423#L13''''" "10424#L13''''" "10425#L12''" "10426#L12''" "10427#L12" "10428#L12" "10429#L13" "10430#L13" "10431#L13'" "10432#L13'" "10433#L13''" "10434#L13''" "10435#L13''''" "10436#L13''''" "10437#L12''" "10438#L12''" "10439#L12" "10440#L12" "10441#L13" "10442#L13" "10443#L13'" "10444#L13'" "10445#L13''" "10446#L13''" "10447#L13''''" "10448#L13''''" "10449#L12''" "10450#L12''" "10451#L12" "10452#L12" "10453#L13" "10454#L13" "10456#L13'" "10457#L13'" "10458#L13''" "10459#L13''" "10460#L13''''" "10461#L12''" "10462#L12" "10463#L12'''" "10464#mainErr0AssertViolation" },
	initialStates = {"10386#ULTIMATE.startENTRY" },
	finalStates = {"10464#mainErr0AssertViolation" },
	callTransitions = {
		("10386#ULTIMATE.startENTRY" "call ULTIMATE.init();" "10387#ULTIMATE.initFINAL")
		("10389#L1" "call #t~ret1 := main();" "10390#mainENTRY")
		("10393#L13" "call #t~ret0 := rand();" "10394#randENTRY")
		("10405#L13" "call #t~ret0 := rand();" "10394#randENTRY")
		("10406#L13" "call #t~ret0 := rand();" "10394#randENTRY")
		("10417#L13" "call #t~ret0 := rand();" "10394#randENTRY")
		("10418#L13" "call #t~ret0 := rand();" "10394#randENTRY")
		("10429#L13" "call #t~ret0 := rand();" "10394#randENTRY")
		("10430#L13" "call #t~ret0 := rand();" "10394#randENTRY")
		("10441#L13" "call #t~ret0 := rand();" "10394#randENTRY")
		("10442#L13" "call #t~ret0 := rand();" "10394#randENTRY")
		("10453#L13" "call #t~ret0 := rand();" "10394#randENTRY")
		("10454#L13" "call #t~ret0 := rand();" "10394#randENTRY")
	},
	internalTransitions = {
		("10387#ULTIMATE.initFINAL" "assume true;" "10388#ULTIMATE.initEXIT")
		("10390#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "10391#L12''")
		("10391#L12''" "assume true;" "10392#L12")
		("10392#L12" "assume !!(~i~2 < ~n~2);" "10393#L13")
		("10394#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "10395#randFINAL")
		("10395#randFINAL" "assume true;" "10396#randEXIT")
		("10397#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10398#L13''")
		("10398#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10399#L13''''")
		("10398#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10400#L13''''")
		("10399#L13''''" "~i~2 := ~i~2 + 1;" "10401#L12''")
		("10400#L13''''" "~i~2 := ~i~2 + 1;" "10402#L12''")
		("10401#L12''" "assume true;" "10403#L12")
		("10402#L12''" "assume true;" "10404#L12")
		("10403#L12" "assume !!(~i~2 < ~n~2);" "10405#L13")
		("10404#L12" "assume !!(~i~2 < ~n~2);" "10406#L13")
		("10407#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10409#L13''")
		("10408#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10410#L13''")
		("10409#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10411#L13''''")
		("10409#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10411#L13''''")
		("10410#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10411#L13''''")
		("10410#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10412#L13''''")
		("10411#L13''''" "~i~2 := ~i~2 + 1;" "10413#L12''")
		("10412#L13''''" "~i~2 := ~i~2 + 1;" "10414#L12''")
		("10413#L12''" "assume true;" "10415#L12")
		("10414#L12''" "assume true;" "10416#L12")
		("10415#L12" "assume !!(~i~2 < ~n~2);" "10417#L13")
		("10416#L12" "assume !!(~i~2 < ~n~2);" "10418#L13")
		("10419#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10421#L13''")
		("10420#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10422#L13''")
		("10421#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10423#L13''''")
		("10421#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10423#L13''''")
		("10422#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10423#L13''''")
		("10422#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10424#L13''''")
		("10423#L13''''" "~i~2 := ~i~2 + 1;" "10425#L12''")
		("10424#L13''''" "~i~2 := ~i~2 + 1;" "10426#L12''")
		("10425#L12''" "assume true;" "10427#L12")
		("10426#L12''" "assume true;" "10428#L12")
		("10427#L12" "assume !!(~i~2 < ~n~2);" "10429#L13")
		("10428#L12" "assume !!(~i~2 < ~n~2);" "10430#L13")
		("10431#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10433#L13''")
		("10432#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10434#L13''")
		("10433#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10435#L13''''")
		("10433#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10435#L13''''")
		("10434#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10435#L13''''")
		("10434#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10436#L13''''")
		("10435#L13''''" "~i~2 := ~i~2 + 1;" "10437#L12''")
		("10436#L13''''" "~i~2 := ~i~2 + 1;" "10438#L12''")
		("10437#L12''" "assume true;" "10439#L12")
		("10438#L12''" "assume true;" "10440#L12")
		("10439#L12" "assume !!(~i~2 < ~n~2);" "10441#L13")
		("10440#L12" "assume !!(~i~2 < ~n~2);" "10442#L13")
		("10443#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10445#L13''")
		("10444#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10446#L13''")
		("10445#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10447#L13''''")
		("10445#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10447#L13''''")
		("10446#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10447#L13''''")
		("10446#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10448#L13''''")
		("10447#L13''''" "~i~2 := ~i~2 + 1;" "10449#L12''")
		("10448#L13''''" "~i~2 := ~i~2 + 1;" "10450#L12''")
		("10449#L12''" "assume true;" "10451#L12")
		("10450#L12''" "assume true;" "10452#L12")
		("10451#L12" "assume !!(~i~2 < ~n~2);" "10453#L13")
		("10452#L12" "assume !!(~i~2 < ~n~2);" "10454#L13")
		("10456#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10458#L13''")
		("10457#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10459#L13''")
		("10458#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10460#L13''''")
		("10458#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10460#L13''''")
		("10459#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10460#L13''''")
		("10459#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10460#L13''''")
		("10460#L13''''" "~i~2 := ~i~2 + 1;" "10461#L12''")
		("10461#L12''" "assume true;" "10462#L12")
		("10462#L12" "assume !!(~i~2 < ~n~2);" "10453#L13")
		("10462#L12" "assume !(~i~2 < ~n~2);" "10463#L12'''")
		("10463#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "10464#mainErr0AssertViolation")
	},
	returnTransitions = {
		("10388#ULTIMATE.initEXIT" "10386#ULTIMATE.startENTRY" "return;" "10389#L1")
		("10396#randEXIT" "10417#L13" "return;" "10419#L13'")
		("10396#randEXIT" "10418#L13" "return;" "10420#L13'")
		("10396#randEXIT" "10405#L13" "return;" "10407#L13'")
		("10396#randEXIT" "10453#L13" "return;" "10456#L13'")
		("10396#randEXIT" "10406#L13" "return;" "10408#L13'")
		("10396#randEXIT" "10454#L13" "return;" "10457#L13'")
		("10396#randEXIT" "10393#L13" "return;" "10397#L13'")
		("10396#randEXIT" "10441#L13" "return;" "10443#L13'")
		("10396#randEXIT" "10442#L13" "return;" "10444#L13'")
		("10396#randEXIT" "10429#L13" "return;" "10431#L13'")
		("10396#randEXIT" "10430#L13" "return;" "10432#L13'")
	}
);
