// Testfile dumped by Ultimate at 2018/11/19 14:19:26
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"10150#L13'" "10151#L1" "10152#L13''" "10153#L13''''" "10154#L12''" "10155#L13" "10156#randENTRY" "10157#L12" "10158#L12'''" "10159#mainErr0AssertViolation" "10160#mainENTRY" "10161#ULTIMATE.initEXIT" "10162#ULTIMATE.startENTRY" "10163#L12''" "10164#randEXIT" "10165#L13" "10166#L13" "10167#L13" "10168#L13" "10169#L13" "10170#L13" "10171#L13" "10172#L13" "10173#L13" "10174#L13'" "10175#L13'" "10176#L13'" "10177#L13'" "10178#L13'" "10179#L13'" "10180#L13'" "10181#L13'" "10182#L13'" "10183#randFINAL" "10184#L13''" "10185#ULTIMATE.initFINAL" "10186#L12" "10187#L12''" "10188#L13''''" "10189#L13''" "10190#L13''" "10191#L13''''" "10192#L12" "10193#L12''" "10194#L13''''" "10195#L13''" "10196#L13''''" "10197#L12" "10198#L12''" "10199#L13''''" "10200#L13''" "10201#L13''''" "10202#L12" "10203#L12''" "10204#L13''''" "10205#L13''" "10206#L12" "10207#L12''" "10208#L13''''" "10209#L13''" "10210#L13''''" "10211#L12" "10212#L12" "10213#L12''" "10214#L13''" "10215#L12" "10216#L12''" "10217#L13''" "10218#L12" "10219#L12''" "10220#L12" "10221#L12''" },
	initialStates = {"10162#ULTIMATE.startENTRY" },
	finalStates = {"10159#mainErr0AssertViolation" },
	callTransitions = {
		("10151#L1" "call #t~ret1 := main();" "10160#mainENTRY")
		("10155#L13" "call #t~ret0 := rand();" "10156#randENTRY")
		("10162#ULTIMATE.startENTRY" "call ULTIMATE.init();" "10185#ULTIMATE.initFINAL")
		("10165#L13" "call #t~ret0 := rand();" "10156#randENTRY")
		("10166#L13" "call #t~ret0 := rand();" "10156#randENTRY")
		("10167#L13" "call #t~ret0 := rand();" "10156#randENTRY")
		("10168#L13" "call #t~ret0 := rand();" "10156#randENTRY")
		("10169#L13" "call #t~ret0 := rand();" "10156#randENTRY")
		("10170#L13" "call #t~ret0 := rand();" "10156#randENTRY")
		("10171#L13" "call #t~ret0 := rand();" "10156#randENTRY")
		("10172#L13" "call #t~ret0 := rand();" "10156#randENTRY")
		("10173#L13" "call #t~ret0 := rand();" "10156#randENTRY")
	},
	internalTransitions = {
		("10150#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10152#L13''")
		("10152#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10201#L13''''")
		("10152#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10201#L13''''")
		("10153#L13''''" "~i~2 := ~i~2 + 1;" "10154#L12''")
		("10154#L12''" "assume true;" "10157#L12")
		("10156#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "10183#randFINAL")
		("10157#L12" "assume !!(~i~2 < ~n~2);" "10155#L13")
		("10158#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "10159#mainErr0AssertViolation")
		("10160#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "10163#L12''")
		("10163#L12''" "assume true;" "10211#L12")
		("10174#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10217#L13''")
		("10175#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10195#L13''")
		("10176#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10200#L13''")
		("10177#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10184#L13''")
		("10178#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10205#L13''")
		("10179#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10189#L13''")
		("10180#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10209#L13''")
		("10181#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10214#L13''")
		("10182#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "10190#L13''")
		("10183#randFINAL" "assume true;" "10164#randEXIT")
		("10184#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10153#L13''''")
		("10184#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10153#L13''''")
		("10185#ULTIMATE.initFINAL" "assume true;" "10161#ULTIMATE.initEXIT")
		("10186#L12" "assume !!(~i~2 < ~n~2);" "10170#L13")
		("10186#L12" "assume !(~i~2 < ~n~2);" "10158#L12'''")
		("10187#L12''" "assume true;" "10186#L12")
		("10188#L13''''" "~i~2 := ~i~2 + 1;" "10187#L12''")
		("10189#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10188#L13''''")
		("10189#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10188#L13''''")
		("10190#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10191#L13''''")
		("10190#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10188#L13''''")
		("10191#L13''''" "~i~2 := ~i~2 + 1;" "10213#L12''")
		("10192#L12" "assume !!(~i~2 < ~n~2);" "10173#L13")
		("10193#L12''" "assume true;" "10192#L12")
		("10194#L13''''" "~i~2 := ~i~2 + 1;" "10193#L12''")
		("10195#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10196#L13''''")
		("10195#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10194#L13''''")
		("10196#L13''''" "~i~2 := ~i~2 + 1;" "10216#L12''")
		("10197#L12" "assume !!(~i~2 < ~n~2);" "10166#L13")
		("10198#L12''" "assume true;" "10197#L12")
		("10199#L13''''" "~i~2 := ~i~2 + 1;" "10198#L12''")
		("10200#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10201#L13''''")
		("10200#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10199#L13''''")
		("10201#L13''''" "~i~2 := ~i~2 + 1;" "10219#L12''")
		("10202#L12" "assume !!(~i~2 < ~n~2);" "10167#L13")
		("10203#L12''" "assume true;" "10202#L12")
		("10204#L13''''" "~i~2 := ~i~2 + 1;" "10203#L12''")
		("10205#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10153#L13''''")
		("10205#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10204#L13''''")
		("10206#L12" "assume !!(~i~2 < ~n~2);" "10169#L13")
		("10207#L12''" "assume true;" "10206#L12")
		("10208#L13''''" "~i~2 := ~i~2 + 1;" "10207#L12''")
		("10209#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10210#L13''''")
		("10209#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10208#L13''''")
		("10210#L13''''" "~i~2 := ~i~2 + 1;" "10221#L12''")
		("10211#L12" "assume !!(~i~2 < ~n~2);" "10171#L13")
		("10212#L12" "assume !!(~i~2 < ~n~2);" "10170#L13")
		("10213#L12''" "assume true;" "10212#L12")
		("10214#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10191#L13''''")
		("10214#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10191#L13''''")
		("10215#L12" "assume !!(~i~2 < ~n~2);" "10172#L13")
		("10216#L12''" "assume true;" "10215#L12")
		("10217#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "10196#L13''''")
		("10217#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "10196#L13''''")
		("10218#L12" "assume !!(~i~2 < ~n~2);" "10165#L13")
		("10219#L12''" "assume true;" "10218#L12")
		("10220#L12" "assume !!(~i~2 < ~n~2);" "10168#L13")
		("10221#L12''" "assume true;" "10220#L12")
	},
	returnTransitions = {
		("10161#ULTIMATE.initEXIT" "10162#ULTIMATE.startENTRY" "return;" "10151#L1")
		("10164#randEXIT" "10165#L13" "return;" "10174#L13'")
		("10164#randEXIT" "10166#L13" "return;" "10175#L13'")
		("10164#randEXIT" "10167#L13" "return;" "10176#L13'")
		("10164#randEXIT" "10168#L13" "return;" "10177#L13'")
		("10164#randEXIT" "10169#L13" "return;" "10178#L13'")
		("10164#randEXIT" "10170#L13" "return;" "10179#L13'")
		("10164#randEXIT" "10171#L13" "return;" "10180#L13'")
		("10164#randEXIT" "10155#L13" "return;" "10150#L13'")
		("10164#randEXIT" "10172#L13" "return;" "10181#L13'")
		("10164#randEXIT" "10173#L13" "return;" "10182#L13'")
	}
);
