// Testfile dumped by Ultimate at 2018/11/19 14:19:09
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"3072#L13''" "3073#L13''''" "3074#L13''''" "3075#L12''" "3076#L12''" "3077#L12" "3078#L12" "3079#L13" "3080#L13" "3081#L13'" "3082#L13'" "3083#L13''" "3084#L13''" "3085#L13''''" "3086#L13''''" "3087#L12''" "3088#L12''" "3089#L12" "3090#L12" "3091#L13" "3092#L13" "3093#L13'" "3094#L13'" "3095#L13''" "3096#L13''" "3097#L13''''" "3098#L13''''" "3099#L12''" "3100#L12''" "3101#L12" "3102#L12" "3103#L13" "3104#L13" "3105#L13'" "3106#L13'" "3107#L13''" "3108#L13''" "3109#L13''''" "3110#L13''''" "3111#L12''" "3112#L12''" "3113#L12" "3114#L12" "3115#L13" "3116#L13" "3117#L13'" "3118#L13'" "3119#L13''" "3120#L13''" "3121#L13''''" "3122#L13''''" "3123#L12''" "3124#L12''" "3125#L12" "3126#L12" "3127#L12'''" "3128#L13" "3130#mainErr0AssertViolation" "3131#L13'" "3132#L13''" "3060#ULTIMATE.startENTRY" "3061#ULTIMATE.initFINAL" "3062#ULTIMATE.initEXIT" "3063#L1" "3064#mainENTRY" "3065#L12''" "3066#L12" "3067#L13" "3068#randENTRY" "3069#randFINAL" "3070#randEXIT" "3071#L13'" },
	initialStates = {"3060#ULTIMATE.startENTRY" },
	finalStates = {"3130#mainErr0AssertViolation" },
	callTransitions = {
		("3079#L13" "call #t~ret0 := rand();" "3068#randENTRY")
		("3080#L13" "call #t~ret0 := rand();" "3068#randENTRY")
		("3091#L13" "call #t~ret0 := rand();" "3068#randENTRY")
		("3092#L13" "call #t~ret0 := rand();" "3068#randENTRY")
		("3103#L13" "call #t~ret0 := rand();" "3068#randENTRY")
		("3104#L13" "call #t~ret0 := rand();" "3068#randENTRY")
		("3115#L13" "call #t~ret0 := rand();" "3068#randENTRY")
		("3116#L13" "call #t~ret0 := rand();" "3068#randENTRY")
		("3128#L13" "call #t~ret0 := rand();" "3068#randENTRY")
		("3060#ULTIMATE.startENTRY" "call ULTIMATE.init();" "3061#ULTIMATE.initFINAL")
		("3063#L1" "call #t~ret1 := main();" "3064#mainENTRY")
		("3067#L13" "call #t~ret0 := rand();" "3068#randENTRY")
	},
	internalTransitions = {
		("3072#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3073#L13''''")
		("3072#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3074#L13''''")
		("3073#L13''''" "~i~2 := ~i~2 + 1;" "3075#L12''")
		("3074#L13''''" "~i~2 := ~i~2 + 1;" "3076#L12''")
		("3075#L12''" "assume true;" "3077#L12")
		("3076#L12''" "assume true;" "3078#L12")
		("3077#L12" "assume !!(~i~2 < ~n~2);" "3079#L13")
		("3078#L12" "assume !!(~i~2 < ~n~2);" "3080#L13")
		("3081#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3083#L13''")
		("3082#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3084#L13''")
		("3083#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3085#L13''''")
		("3083#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3086#L13''''")
		("3084#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3086#L13''''")
		("3084#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3086#L13''''")
		("3085#L13''''" "~i~2 := ~i~2 + 1;" "3087#L12''")
		("3086#L13''''" "~i~2 := ~i~2 + 1;" "3088#L12''")
		("3087#L12''" "assume true;" "3089#L12")
		("3088#L12''" "assume true;" "3090#L12")
		("3089#L12" "assume !!(~i~2 < ~n~2);" "3091#L13")
		("3090#L12" "assume !!(~i~2 < ~n~2);" "3092#L13")
		("3093#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3095#L13''")
		("3094#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3096#L13''")
		("3095#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3086#L13''''")
		("3095#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3097#L13''''")
		("3096#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3098#L13''''")
		("3096#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3098#L13''''")
		("3097#L13''''" "~i~2 := ~i~2 + 1;" "3099#L12''")
		("3098#L13''''" "~i~2 := ~i~2 + 1;" "3100#L12''")
		("3099#L12''" "assume true;" "3101#L12")
		("3100#L12''" "assume true;" "3102#L12")
		("3101#L12" "assume !!(~i~2 < ~n~2);" "3103#L13")
		("3102#L12" "assume !!(~i~2 < ~n~2);" "3104#L13")
		("3105#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3107#L13''")
		("3106#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3108#L13''")
		("3107#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3109#L13''''")
		("3107#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3109#L13''''")
		("3108#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3098#L13''''")
		("3108#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3110#L13''''")
		("3109#L13''''" "~i~2 := ~i~2 + 1;" "3111#L12''")
		("3110#L13''''" "~i~2 := ~i~2 + 1;" "3112#L12''")
		("3111#L12''" "assume true;" "3113#L12")
		("3112#L12''" "assume true;" "3114#L12")
		("3113#L12" "assume !!(~i~2 < ~n~2);" "3115#L13")
		("3114#L12" "assume !!(~i~2 < ~n~2);" "3116#L13")
		("3117#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3119#L13''")
		("3118#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3120#L13''")
		("3119#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3121#L13''''")
		("3119#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3121#L13''''")
		("3120#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3109#L13''''")
		("3120#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3122#L13''''")
		("3121#L13''''" "~i~2 := ~i~2 + 1;" "3123#L12''")
		("3122#L13''''" "~i~2 := ~i~2 + 1;" "3124#L12''")
		("3123#L12''" "assume true;" "3125#L12")
		("3124#L12''" "assume true;" "3126#L12")
		("3125#L12" "assume !!(~i~2 < ~n~2);" "3115#L13")
		("3125#L12" "assume !(~i~2 < ~n~2);" "3127#L12'''")
		("3126#L12" "assume !!(~i~2 < ~n~2);" "3128#L13")
		("3127#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "3130#mainErr0AssertViolation")
		("3131#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3132#L13''")
		("3132#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3121#L13''''")
		("3132#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3121#L13''''")
		("3061#ULTIMATE.initFINAL" "assume true;" "3062#ULTIMATE.initEXIT")
		("3064#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "3065#L12''")
		("3065#L12''" "assume true;" "3066#L12")
		("3066#L12" "assume !!(~i~2 < ~n~2);" "3067#L13")
		("3068#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "3069#randFINAL")
		("3069#randFINAL" "assume true;" "3070#randEXIT")
		("3071#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3072#L13''")
	},
	returnTransitions = {
		("3062#ULTIMATE.initEXIT" "3060#ULTIMATE.startENTRY" "return;" "3063#L1")
		("3070#randEXIT" "3104#L13" "return;" "3105#L13'")
		("3070#randEXIT" "3091#L13" "return;" "3093#L13'")
		("3070#randEXIT" "3092#L13" "return;" "3094#L13'")
		("3070#randEXIT" "3079#L13" "return;" "3081#L13'")
		("3070#randEXIT" "3080#L13" "return;" "3082#L13'")
		("3070#randEXIT" "3128#L13" "return;" "3131#L13'")
		("3070#randEXIT" "3067#L13" "return;" "3071#L13'")
		("3070#randEXIT" "3115#L13" "return;" "3117#L13'")
		("3070#randEXIT" "3116#L13" "return;" "3118#L13'")
		("3070#randEXIT" "3103#L13" "return;" "3106#L13'")
	}
);
