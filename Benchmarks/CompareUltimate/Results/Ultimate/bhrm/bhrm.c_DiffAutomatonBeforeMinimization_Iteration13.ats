// Testfile dumped by Ultimate at 2018/11/19 14:19:08
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"2816#L13''" "2817#L13''" "2818#L13''''" "2819#L13''''" "2820#L12''" "2821#L12''" "2822#L12" "2823#L12" "2824#L13" "2826#L12'''" "2827#mainErr0AssertViolation" "2828#L13'" "2829#L13''" "2757#ULTIMATE.startENTRY" "2758#ULTIMATE.initFINAL" "2759#ULTIMATE.initEXIT" "2760#L1" "2761#mainENTRY" "2762#L12''" "2763#L12" "2764#L13" "2765#randENTRY" "2766#randFINAL" "2767#randEXIT" "2768#L13'" "2769#L13''" "2770#L13''''" "2771#L13''''" "2772#L12''" "2773#L12''" "2774#L12" "2775#L12" "2776#L13" "2777#L13" "2778#L13'" "2779#L13'" "2780#L13''" "2781#L13''" "2782#L13''''" "2783#L13''''" "2784#L12''" "2785#L12''" "2786#L12" "2787#L12" "2788#L13" "2789#L13" "2790#L13'" "2791#L13'" "2792#L13''" "2793#L13''" "2794#L13''''" "2795#L13''''" "2796#L12''" "2797#L12''" "2798#L12" "2799#L12" "2800#L13" "2801#L13" "2802#L13'" "2803#L13'" "2804#L13''" "2805#L13''" "2806#L13''''" "2807#L13''''" "2808#L12''" "2809#L12''" "2810#L12" "2811#L12" "2812#L13" "2813#L13" "2814#L13'" "2815#L13'" },
	initialStates = {"2757#ULTIMATE.startENTRY" },
	finalStates = {"2827#mainErr0AssertViolation" },
	callTransitions = {
		("2824#L13" "call #t~ret0 := rand();" "2765#randENTRY")
		("2757#ULTIMATE.startENTRY" "call ULTIMATE.init();" "2758#ULTIMATE.initFINAL")
		("2760#L1" "call #t~ret1 := main();" "2761#mainENTRY")
		("2764#L13" "call #t~ret0 := rand();" "2765#randENTRY")
		("2776#L13" "call #t~ret0 := rand();" "2765#randENTRY")
		("2777#L13" "call #t~ret0 := rand();" "2765#randENTRY")
		("2788#L13" "call #t~ret0 := rand();" "2765#randENTRY")
		("2789#L13" "call #t~ret0 := rand();" "2765#randENTRY")
		("2800#L13" "call #t~ret0 := rand();" "2765#randENTRY")
		("2801#L13" "call #t~ret0 := rand();" "2765#randENTRY")
		("2812#L13" "call #t~ret0 := rand();" "2765#randENTRY")
		("2813#L13" "call #t~ret0 := rand();" "2765#randENTRY")
	},
	internalTransitions = {
		("2816#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2818#L13''''")
		("2816#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2819#L13''''")
		("2817#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2819#L13''''")
		("2817#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2819#L13''''")
		("2818#L13''''" "~i~2 := ~i~2 + 1;" "2820#L12''")
		("2819#L13''''" "~i~2 := ~i~2 + 1;" "2821#L12''")
		("2820#L12''" "assume true;" "2822#L12")
		("2821#L12''" "assume true;" "2823#L12")
		("2822#L12" "assume !!(~i~2 < ~n~2);" "2824#L13")
		("2823#L12" "assume !!(~i~2 < ~n~2);" "2813#L13")
		("2823#L12" "assume !(~i~2 < ~n~2);" "2826#L12'''")
		("2826#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "2827#mainErr0AssertViolation")
		("2828#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2829#L13''")
		("2829#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2819#L13''''")
		("2829#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2819#L13''''")
		("2758#ULTIMATE.initFINAL" "assume true;" "2759#ULTIMATE.initEXIT")
		("2761#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "2762#L12''")
		("2762#L12''" "assume true;" "2763#L12")
		("2763#L12" "assume !!(~i~2 < ~n~2);" "2764#L13")
		("2765#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "2766#randFINAL")
		("2766#randFINAL" "assume true;" "2767#randEXIT")
		("2768#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2769#L13''")
		("2769#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2770#L13''''")
		("2769#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2771#L13''''")
		("2770#L13''''" "~i~2 := ~i~2 + 1;" "2772#L12''")
		("2771#L13''''" "~i~2 := ~i~2 + 1;" "2773#L12''")
		("2772#L12''" "assume true;" "2774#L12")
		("2773#L12''" "assume true;" "2775#L12")
		("2774#L12" "assume !!(~i~2 < ~n~2);" "2776#L13")
		("2775#L12" "assume !!(~i~2 < ~n~2);" "2777#L13")
		("2778#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2780#L13''")
		("2779#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2781#L13''")
		("2780#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2782#L13''''")
		("2780#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2783#L13''''")
		("2781#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2783#L13''''")
		("2781#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2783#L13''''")
		("2782#L13''''" "~i~2 := ~i~2 + 1;" "2784#L12''")
		("2783#L13''''" "~i~2 := ~i~2 + 1;" "2785#L12''")
		("2784#L12''" "assume true;" "2786#L12")
		("2785#L12''" "assume true;" "2787#L12")
		("2786#L12" "assume !!(~i~2 < ~n~2);" "2788#L13")
		("2787#L12" "assume !!(~i~2 < ~n~2);" "2789#L13")
		("2790#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2792#L13''")
		("2791#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2793#L13''")
		("2792#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2783#L13''''")
		("2792#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2794#L13''''")
		("2793#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2795#L13''''")
		("2793#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2795#L13''''")
		("2794#L13''''" "~i~2 := ~i~2 + 1;" "2796#L12''")
		("2795#L13''''" "~i~2 := ~i~2 + 1;" "2797#L12''")
		("2796#L12''" "assume true;" "2798#L12")
		("2797#L12''" "assume true;" "2799#L12")
		("2798#L12" "assume !!(~i~2 < ~n~2);" "2800#L13")
		("2799#L12" "assume !!(~i~2 < ~n~2);" "2801#L13")
		("2802#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2804#L13''")
		("2803#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2805#L13''")
		("2804#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2795#L13''''")
		("2804#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2806#L13''''")
		("2805#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "2807#L13''''")
		("2805#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "2807#L13''''")
		("2806#L13''''" "~i~2 := ~i~2 + 1;" "2808#L12''")
		("2807#L13''''" "~i~2 := ~i~2 + 1;" "2809#L12''")
		("2808#L12''" "assume true;" "2810#L12")
		("2809#L12''" "assume true;" "2811#L12")
		("2810#L12" "assume !!(~i~2 < ~n~2);" "2812#L13")
		("2811#L12" "assume !!(~i~2 < ~n~2);" "2813#L13")
		("2814#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2816#L13''")
		("2815#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "2817#L13''")
	},
	returnTransitions = {
		("2759#ULTIMATE.initEXIT" "2757#ULTIMATE.startENTRY" "return;" "2760#L1")
		("2767#randEXIT" "2800#L13" "return;" "2802#L13'")
		("2767#randEXIT" "2801#L13" "return;" "2803#L13'")
		("2767#randEXIT" "2788#L13" "return;" "2790#L13'")
		("2767#randEXIT" "2789#L13" "return;" "2791#L13'")
		("2767#randEXIT" "2776#L13" "return;" "2778#L13'")
		("2767#randEXIT" "2824#L13" "return;" "2828#L13'")
		("2767#randEXIT" "2777#L13" "return;" "2779#L13'")
		("2767#randEXIT" "2764#L13" "return;" "2768#L13'")
		("2767#randEXIT" "2812#L13" "return;" "2814#L13'")
		("2767#randEXIT" "2813#L13" "return;" "2815#L13'")
	}
);
