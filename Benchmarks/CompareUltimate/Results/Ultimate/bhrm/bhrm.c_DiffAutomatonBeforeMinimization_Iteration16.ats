// Testfile dumped by Ultimate at 2018/11/19 14:19:10
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"3712#L12''" "3713#L12" "3714#L12" "3715#L12'''" "3716#L13" "3718#mainErr0AssertViolation" "3719#L13'" "3720#L13''" "3648#ULTIMATE.startENTRY" "3649#ULTIMATE.initFINAL" "3650#ULTIMATE.initEXIT" "3651#L1" "3652#mainENTRY" "3653#L12''" "3654#L12" "3655#L13" "3656#randENTRY" "3657#randFINAL" "3658#randEXIT" "3659#L13'" "3660#L13''" "3661#L13''''" "3662#L13''''" "3663#L12''" "3664#L12''" "3665#L12" "3666#L12" "3667#L13" "3668#L13" "3669#L13'" "3670#L13'" "3671#L13''" "3672#L13''" "3673#L13''''" "3674#L13''''" "3675#L12''" "3676#L12''" "3677#L12" "3678#L12" "3679#L13" "3680#L13" "3681#L13'" "3682#L13'" "3683#L13''" "3684#L13''" "3685#L13''''" "3686#L13''''" "3687#L12''" "3688#L12''" "3689#L12" "3690#L12" "3691#L13" "3692#L13" "3693#L13'" "3694#L13'" "3695#L13''" "3696#L13''" "3697#L13''''" "3698#L13''''" "3699#L12''" "3700#L12''" "3701#L12" "3702#L12" "3703#L13" "3704#L13" "3705#L13'" "3706#L13'" "3707#L13''" "3708#L13''" "3709#L13''''" "3710#L13''''" "3711#L12''" },
	initialStates = {"3648#ULTIMATE.startENTRY" },
	finalStates = {"3718#mainErr0AssertViolation" },
	callTransitions = {
		("3716#L13" "call #t~ret0 := rand();" "3656#randENTRY")
		("3648#ULTIMATE.startENTRY" "call ULTIMATE.init();" "3649#ULTIMATE.initFINAL")
		("3651#L1" "call #t~ret1 := main();" "3652#mainENTRY")
		("3655#L13" "call #t~ret0 := rand();" "3656#randENTRY")
		("3667#L13" "call #t~ret0 := rand();" "3656#randENTRY")
		("3668#L13" "call #t~ret0 := rand();" "3656#randENTRY")
		("3679#L13" "call #t~ret0 := rand();" "3656#randENTRY")
		("3680#L13" "call #t~ret0 := rand();" "3656#randENTRY")
		("3691#L13" "call #t~ret0 := rand();" "3656#randENTRY")
		("3692#L13" "call #t~ret0 := rand();" "3656#randENTRY")
		("3703#L13" "call #t~ret0 := rand();" "3656#randENTRY")
		("3704#L13" "call #t~ret0 := rand();" "3656#randENTRY")
	},
	internalTransitions = {
		("3712#L12''" "assume true;" "3714#L12")
		("3713#L12" "assume !!(~i~2 < ~n~2);" "3703#L13")
		("3713#L12" "assume !(~i~2 < ~n~2);" "3715#L12'''")
		("3714#L12" "assume !!(~i~2 < ~n~2);" "3716#L13")
		("3715#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "3718#mainErr0AssertViolation")
		("3719#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3720#L13''")
		("3720#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3709#L13''''")
		("3720#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3709#L13''''")
		("3649#ULTIMATE.initFINAL" "assume true;" "3650#ULTIMATE.initEXIT")
		("3652#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "3653#L12''")
		("3653#L12''" "assume true;" "3654#L12")
		("3654#L12" "assume !!(~i~2 < ~n~2);" "3655#L13")
		("3656#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "3657#randFINAL")
		("3657#randFINAL" "assume true;" "3658#randEXIT")
		("3659#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3660#L13''")
		("3660#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3661#L13''''")
		("3660#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3662#L13''''")
		("3661#L13''''" "~i~2 := ~i~2 + 1;" "3663#L12''")
		("3662#L13''''" "~i~2 := ~i~2 + 1;" "3664#L12''")
		("3663#L12''" "assume true;" "3665#L12")
		("3664#L12''" "assume true;" "3666#L12")
		("3665#L12" "assume !!(~i~2 < ~n~2);" "3667#L13")
		("3666#L12" "assume !!(~i~2 < ~n~2);" "3668#L13")
		("3669#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3671#L13''")
		("3670#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3672#L13''")
		("3671#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3662#L13''''")
		("3671#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3673#L13''''")
		("3672#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3674#L13''''")
		("3672#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3674#L13''''")
		("3673#L13''''" "~i~2 := ~i~2 + 1;" "3675#L12''")
		("3674#L13''''" "~i~2 := ~i~2 + 1;" "3676#L12''")
		("3675#L12''" "assume true;" "3677#L12")
		("3676#L12''" "assume true;" "3678#L12")
		("3677#L12" "assume !!(~i~2 < ~n~2);" "3679#L13")
		("3678#L12" "assume !!(~i~2 < ~n~2);" "3680#L13")
		("3681#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3683#L13''")
		("3682#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3684#L13''")
		("3683#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3685#L13''''")
		("3683#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3685#L13''''")
		("3684#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3686#L13''''")
		("3684#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3685#L13''''")
		("3685#L13''''" "~i~2 := ~i~2 + 1;" "3687#L12''")
		("3686#L13''''" "~i~2 := ~i~2 + 1;" "3688#L12''")
		("3687#L12''" "assume true;" "3689#L12")
		("3688#L12''" "assume true;" "3690#L12")
		("3689#L12" "assume !!(~i~2 < ~n~2);" "3691#L13")
		("3690#L12" "assume !!(~i~2 < ~n~2);" "3692#L13")
		("3693#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3695#L13''")
		("3694#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3696#L13''")
		("3695#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3697#L13''''")
		("3695#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3697#L13''''")
		("3696#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3698#L13''''")
		("3696#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3697#L13''''")
		("3697#L13''''" "~i~2 := ~i~2 + 1;" "3699#L12''")
		("3698#L13''''" "~i~2 := ~i~2 + 1;" "3700#L12''")
		("3699#L12''" "assume true;" "3701#L12")
		("3700#L12''" "assume true;" "3702#L12")
		("3701#L12" "assume !!(~i~2 < ~n~2);" "3703#L13")
		("3702#L12" "assume !!(~i~2 < ~n~2);" "3704#L13")
		("3705#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3707#L13''")
		("3706#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3708#L13''")
		("3707#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3709#L13''''")
		("3707#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3709#L13''''")
		("3708#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3697#L13''''")
		("3708#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3710#L13''''")
		("3709#L13''''" "~i~2 := ~i~2 + 1;" "3711#L12''")
		("3710#L13''''" "~i~2 := ~i~2 + 1;" "3712#L12''")
		("3711#L12''" "assume true;" "3713#L12")
	},
	returnTransitions = {
		("3650#ULTIMATE.initEXIT" "3648#ULTIMATE.startENTRY" "return;" "3651#L1")
		("3658#randEXIT" "3680#L13" "return;" "3681#L13'")
		("3658#randEXIT" "3667#L13" "return;" "3669#L13'")
		("3658#randEXIT" "3668#L13" "return;" "3670#L13'")
		("3658#randEXIT" "3716#L13" "return;" "3719#L13'")
		("3658#randEXIT" "3655#L13" "return;" "3659#L13'")
		("3658#randEXIT" "3703#L13" "return;" "3705#L13'")
		("3658#randEXIT" "3704#L13" "return;" "3706#L13'")
		("3658#randEXIT" "3691#L13" "return;" "3693#L13'")
		("3658#randEXIT" "3692#L13" "return;" "3694#L13'")
		("3658#randEXIT" "3679#L13" "return;" "3682#L13'")
	}
);
