// Testfile dumped by Ultimate at 2018/11/19 14:19:17
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"5806#L13'" "5807#L1" "5808#L13''" "5809#L13''''" "5810#L12''" "5811#L13" "5812#randENTRY" "5813#L12" "5814#L12'''" "5815#mainErr0AssertViolation" "5816#mainENTRY" "5817#ULTIMATE.initEXIT" "5818#ULTIMATE.startENTRY" "5819#L12''" "5820#randEXIT" "5821#L13" "5822#L13" "5823#L13" "5824#L13" "5825#L13" "5826#L13" "5827#L13" "5828#L13" "5829#L13" "5830#L13'" "5831#L13'" "5832#L13'" "5833#L13'" "5834#L13'" "5835#L13'" "5836#L13'" "5837#L13'" "5838#L13'" "5839#randFINAL" "5840#L13''" "5841#ULTIMATE.initFINAL" "5842#L12" "5843#L12''" "5844#L13''''" "5845#L13''" "5846#L13''" "5847#L13''''" "5848#L12" "5849#L12''" "5850#L13''''" "5851#L13''" "5852#L12" "5853#L12''" "5854#L13''''" "5855#L13''" "5856#L13''''" "5857#L12" "5858#L12''" "5859#L13''''" "5860#L13''" "5861#L13''''" "5862#L12" "5863#L12''" "5864#L13''''" "5865#L13''" "5866#L13''''" "5867#L12" "5868#L12" "5869#L12''" "5870#L13''" "5871#L12" "5872#L12''" "5873#L13''" "5874#L12" "5875#L12''" "5876#L12" "5877#L12''" },
	initialStates = {"5818#ULTIMATE.startENTRY" },
	finalStates = {"5815#mainErr0AssertViolation" },
	callTransitions = {
		("5807#L1" "call #t~ret1 := main();" "5816#mainENTRY")
		("5811#L13" "call #t~ret0 := rand();" "5812#randENTRY")
		("5818#ULTIMATE.startENTRY" "call ULTIMATE.init();" "5841#ULTIMATE.initFINAL")
		("5821#L13" "call #t~ret0 := rand();" "5812#randENTRY")
		("5822#L13" "call #t~ret0 := rand();" "5812#randENTRY")
		("5823#L13" "call #t~ret0 := rand();" "5812#randENTRY")
		("5824#L13" "call #t~ret0 := rand();" "5812#randENTRY")
		("5825#L13" "call #t~ret0 := rand();" "5812#randENTRY")
		("5826#L13" "call #t~ret0 := rand();" "5812#randENTRY")
		("5827#L13" "call #t~ret0 := rand();" "5812#randENTRY")
		("5828#L13" "call #t~ret0 := rand();" "5812#randENTRY")
		("5829#L13" "call #t~ret0 := rand();" "5812#randENTRY")
	},
	internalTransitions = {
		("5806#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5808#L13''")
		("5808#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5861#L13''''")
		("5808#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5861#L13''''")
		("5809#L13''''" "~i~2 := ~i~2 + 1;" "5810#L12''")
		("5810#L12''" "assume true;" "5813#L12")
		("5812#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "5839#randFINAL")
		("5813#L12" "assume !!(~i~2 < ~n~2);" "5811#L13")
		("5814#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "5815#mainErr0AssertViolation")
		("5816#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "5819#L12''")
		("5819#L12''" "assume true;" "5867#L12")
		("5830#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5851#L13''")
		("5831#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5870#L13''")
		("5832#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5840#L13''")
		("5833#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5855#L13''")
		("5834#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5860#L13''")
		("5835#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5873#L13''")
		("5836#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5865#L13''")
		("5837#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5845#L13''")
		("5838#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5846#L13''")
		("5839#randFINAL" "assume true;" "5820#randEXIT")
		("5840#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5809#L13''''")
		("5840#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5809#L13''''")
		("5841#ULTIMATE.initFINAL" "assume true;" "5817#ULTIMATE.initEXIT")
		("5842#L12" "assume !!(~i~2 < ~n~2);" "5828#L13")
		("5842#L12" "assume !(~i~2 < ~n~2);" "5814#L12'''")
		("5843#L12''" "assume true;" "5842#L12")
		("5844#L13''''" "~i~2 := ~i~2 + 1;" "5843#L12''")
		("5845#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5844#L13''''")
		("5845#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5844#L13''''")
		("5846#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5847#L13''''")
		("5846#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5844#L13''''")
		("5847#L13''''" "~i~2 := ~i~2 + 1;" "5869#L12''")
		("5848#L12" "assume !!(~i~2 < ~n~2);" "5829#L13")
		("5849#L12''" "assume true;" "5848#L12")
		("5850#L13''''" "~i~2 := ~i~2 + 1;" "5849#L12''")
		("5851#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5850#L13''''")
		("5851#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5847#L13''''")
		("5852#L12" "assume !!(~i~2 < ~n~2);" "5821#L13")
		("5853#L12''" "assume true;" "5852#L12")
		("5854#L13''''" "~i~2 := ~i~2 + 1;" "5853#L12''")
		("5855#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5854#L13''''")
		("5855#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5856#L13''''")
		("5856#L13''''" "~i~2 := ~i~2 + 1;" "5872#L12''")
		("5857#L12" "assume !!(~i~2 < ~n~2);" "5824#L13")
		("5858#L12''" "assume true;" "5857#L12")
		("5859#L13''''" "~i~2 := ~i~2 + 1;" "5858#L12''")
		("5860#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5859#L13''''")
		("5860#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5861#L13''''")
		("5861#L13''''" "~i~2 := ~i~2 + 1;" "5875#L12''")
		("5862#L12" "assume !!(~i~2 < ~n~2);" "5825#L13")
		("5863#L12''" "assume true;" "5862#L12")
		("5864#L13''''" "~i~2 := ~i~2 + 1;" "5863#L12''")
		("5865#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5866#L13''''")
		("5865#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5864#L13''''")
		("5866#L13''''" "~i~2 := ~i~2 + 1;" "5877#L12''")
		("5867#L12" "assume !!(~i~2 < ~n~2);" "5827#L13")
		("5868#L12" "assume !!(~i~2 < ~n~2);" "5828#L13")
		("5869#L12''" "assume true;" "5868#L12")
		("5870#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5847#L13''''")
		("5870#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5847#L13''''")
		("5871#L12" "assume !!(~i~2 < ~n~2);" "5822#L13")
		("5872#L12''" "assume true;" "5871#L12")
		("5873#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5856#L13''''")
		("5873#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5856#L13''''")
		("5874#L12" "assume !!(~i~2 < ~n~2);" "5826#L13")
		("5875#L12''" "assume true;" "5874#L12")
		("5876#L12" "assume !!(~i~2 < ~n~2);" "5823#L13")
		("5877#L12''" "assume true;" "5876#L12")
	},
	returnTransitions = {
		("5817#ULTIMATE.initEXIT" "5818#ULTIMATE.startENTRY" "return;" "5807#L1")
		("5820#randEXIT" "5824#L13" "return;" "5833#L13'")
		("5820#randEXIT" "5825#L13" "return;" "5834#L13'")
		("5820#randEXIT" "5826#L13" "return;" "5835#L13'")
		("5820#randEXIT" "5827#L13" "return;" "5836#L13'")
		("5820#randEXIT" "5811#L13" "return;" "5806#L13'")
		("5820#randEXIT" "5828#L13" "return;" "5837#L13'")
		("5820#randEXIT" "5829#L13" "return;" "5838#L13'")
		("5820#randEXIT" "5821#L13" "return;" "5830#L13'")
		("5820#randEXIT" "5822#L13" "return;" "5831#L13'")
		("5820#randEXIT" "5823#L13" "return;" "5832#L13'")
	}
);
