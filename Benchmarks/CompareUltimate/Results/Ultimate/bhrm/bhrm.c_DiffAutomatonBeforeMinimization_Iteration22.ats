// Testfile dumped by Ultimate at 2018/11/19 14:19:16
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"5504#L13''''" "5505#L12''" "5506#L12''" "5507#L12" "5508#L12" "5509#L13" "5511#L12'''" "5512#mainErr0AssertViolation" "5513#L13'" "5514#L13''" "5442#ULTIMATE.startENTRY" "5443#ULTIMATE.initFINAL" "5444#ULTIMATE.initEXIT" "5445#L1" "5446#mainENTRY" "5447#L12''" "5448#L12" "5449#L13" "5450#randENTRY" "5451#randFINAL" "5452#randEXIT" "5453#L13'" "5454#L13''" "5455#L13''''" "5456#L13''''" "5457#L12''" "5458#L12''" "5459#L12" "5460#L12" "5461#L13" "5462#L13" "5463#L13'" "5464#L13'" "5465#L13''" "5466#L13''" "5467#L13''''" "5468#L13''''" "5469#L12''" "5470#L12''" "5471#L12" "5472#L12" "5473#L13" "5474#L13" "5475#L13'" "5476#L13'" "5477#L13''" "5478#L13''" "5479#L13''''" "5480#L13''''" "5481#L12''" "5482#L12''" "5483#L12" "5484#L12" "5485#L13" "5486#L13" "5487#L13'" "5488#L13'" "5489#L13''" "5490#L13''" "5491#L13''''" "5492#L13''''" "5493#L12''" "5494#L12''" "5495#L12" "5496#L12" "5497#L13" "5498#L13" "5499#L13'" "5500#L13'" "5501#L13''" "5502#L13''" "5503#L13''''" },
	initialStates = {"5442#ULTIMATE.startENTRY" },
	finalStates = {"5512#mainErr0AssertViolation" },
	callTransitions = {
		("5509#L13" "call #t~ret0 := rand();" "5450#randENTRY")
		("5442#ULTIMATE.startENTRY" "call ULTIMATE.init();" "5443#ULTIMATE.initFINAL")
		("5445#L1" "call #t~ret1 := main();" "5446#mainENTRY")
		("5449#L13" "call #t~ret0 := rand();" "5450#randENTRY")
		("5461#L13" "call #t~ret0 := rand();" "5450#randENTRY")
		("5462#L13" "call #t~ret0 := rand();" "5450#randENTRY")
		("5473#L13" "call #t~ret0 := rand();" "5450#randENTRY")
		("5474#L13" "call #t~ret0 := rand();" "5450#randENTRY")
		("5485#L13" "call #t~ret0 := rand();" "5450#randENTRY")
		("5486#L13" "call #t~ret0 := rand();" "5450#randENTRY")
		("5497#L13" "call #t~ret0 := rand();" "5450#randENTRY")
		("5498#L13" "call #t~ret0 := rand();" "5450#randENTRY")
	},
	internalTransitions = {
		("5504#L13''''" "~i~2 := ~i~2 + 1;" "5506#L12''")
		("5505#L12''" "assume true;" "5507#L12")
		("5506#L12''" "assume true;" "5508#L12")
		("5507#L12" "assume !!(~i~2 < ~n~2);" "5509#L13")
		("5508#L12" "assume !!(~i~2 < ~n~2);" "5498#L13")
		("5508#L12" "assume !(~i~2 < ~n~2);" "5511#L12'''")
		("5511#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "5512#mainErr0AssertViolation")
		("5513#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5514#L13''")
		("5514#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5504#L13''''")
		("5514#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5504#L13''''")
		("5443#ULTIMATE.initFINAL" "assume true;" "5444#ULTIMATE.initEXIT")
		("5446#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "5447#L12''")
		("5447#L12''" "assume true;" "5448#L12")
		("5448#L12" "assume !!(~i~2 < ~n~2);" "5449#L13")
		("5450#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "5451#randFINAL")
		("5451#randFINAL" "assume true;" "5452#randEXIT")
		("5453#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5454#L13''")
		("5454#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5455#L13''''")
		("5454#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5456#L13''''")
		("5455#L13''''" "~i~2 := ~i~2 + 1;" "5457#L12''")
		("5456#L13''''" "~i~2 := ~i~2 + 1;" "5458#L12''")
		("5457#L12''" "assume true;" "5459#L12")
		("5458#L12''" "assume true;" "5460#L12")
		("5459#L12" "assume !!(~i~2 < ~n~2);" "5461#L13")
		("5460#L12" "assume !!(~i~2 < ~n~2);" "5462#L13")
		("5463#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5465#L13''")
		("5464#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5466#L13''")
		("5465#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5456#L13''''")
		("5465#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5467#L13''''")
		("5466#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5468#L13''''")
		("5466#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5468#L13''''")
		("5467#L13''''" "~i~2 := ~i~2 + 1;" "5469#L12''")
		("5468#L13''''" "~i~2 := ~i~2 + 1;" "5470#L12''")
		("5469#L12''" "assume true;" "5471#L12")
		("5470#L12''" "assume true;" "5472#L12")
		("5471#L12" "assume !!(~i~2 < ~n~2);" "5473#L13")
		("5472#L12" "assume !!(~i~2 < ~n~2);" "5474#L13")
		("5475#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5477#L13''")
		("5476#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5478#L13''")
		("5477#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5468#L13''''")
		("5477#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5479#L13''''")
		("5478#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5480#L13''''")
		("5478#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5480#L13''''")
		("5479#L13''''" "~i~2 := ~i~2 + 1;" "5481#L12''")
		("5480#L13''''" "~i~2 := ~i~2 + 1;" "5482#L12''")
		("5481#L12''" "assume true;" "5483#L12")
		("5482#L12''" "assume true;" "5484#L12")
		("5483#L12" "assume !!(~i~2 < ~n~2);" "5485#L13")
		("5484#L12" "assume !!(~i~2 < ~n~2);" "5486#L13")
		("5487#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5489#L13''")
		("5488#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5490#L13''")
		("5489#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5480#L13''''")
		("5489#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5491#L13''''")
		("5490#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5492#L13''''")
		("5490#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5492#L13''''")
		("5491#L13''''" "~i~2 := ~i~2 + 1;" "5493#L12''")
		("5492#L13''''" "~i~2 := ~i~2 + 1;" "5494#L12''")
		("5493#L12''" "assume true;" "5495#L12")
		("5494#L12''" "assume true;" "5496#L12")
		("5495#L12" "assume !!(~i~2 < ~n~2);" "5497#L13")
		("5496#L12" "assume !!(~i~2 < ~n~2);" "5498#L13")
		("5499#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5501#L13''")
		("5500#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "5502#L13''")
		("5501#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5492#L13''''")
		("5501#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5503#L13''''")
		("5502#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "5504#L13''''")
		("5502#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "5504#L13''''")
		("5503#L13''''" "~i~2 := ~i~2 + 1;" "5505#L12''")
	},
	returnTransitions = {
		("5444#ULTIMATE.initEXIT" "5442#ULTIMATE.startENTRY" "return;" "5445#L1")
		("5452#randEXIT" "5473#L13" "return;" "5475#L13'")
		("5452#randEXIT" "5474#L13" "return;" "5476#L13'")
		("5452#randEXIT" "5461#L13" "return;" "5463#L13'")
		("5452#randEXIT" "5509#L13" "return;" "5513#L13'")
		("5452#randEXIT" "5462#L13" "return;" "5464#L13'")
		("5452#randEXIT" "5449#L13" "return;" "5453#L13'")
		("5452#randEXIT" "5497#L13" "return;" "5499#L13'")
		("5452#randEXIT" "5498#L13" "return;" "5500#L13'")
		("5452#randEXIT" "5485#L13" "return;" "5487#L13'")
		("5452#randEXIT" "5486#L13" "return;" "5488#L13'")
	}
);
