// Testfile dumped by Ultimate at 2018/11/19 14:19:19
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"6430#L13'" "6431#L1" "6432#L13''" "6433#L13''''" "6434#L12''" "6435#L13" "6436#randENTRY" "6437#L12" "6438#L12'''" "6439#mainErr0AssertViolation" "6440#mainENTRY" "6441#ULTIMATE.initEXIT" "6442#ULTIMATE.startENTRY" "6443#L12''" "6444#randEXIT" "6445#L13" "6446#L13" "6447#L13" "6448#L13" "6449#L13" "6450#L13" "6451#L13" "6452#L13" "6453#L13" "6454#L13'" "6455#L13'" "6456#L13'" "6457#L13'" "6458#L13'" "6459#L13'" "6460#L13'" "6461#L13'" "6462#L13'" "6463#randFINAL" "6464#L13''" "6465#ULTIMATE.initFINAL" "6466#L12" "6467#L12''" "6468#L13''''" "6469#L13''" "6470#L13''" "6471#L13''''" "6472#L12" "6473#L12''" "6474#L13''''" "6475#L13''" "6476#L13''''" "6477#L12" "6478#L12''" "6479#L13''''" "6480#L13''" "6481#L12" "6482#L12''" "6483#L13''''" "6484#L13''" "6485#L13''''" "6486#L12" "6487#L12''" "6488#L13''''" "6489#L13''" "6490#L13''''" "6491#L12" "6492#L12" "6493#L12''" "6494#L13''" "6495#L12" "6496#L12''" "6497#L13''" "6498#L12" "6499#L12''" "6500#L12" "6501#L12''" },
	initialStates = {"6442#ULTIMATE.startENTRY" },
	finalStates = {"6439#mainErr0AssertViolation" },
	callTransitions = {
		("6431#L1" "call #t~ret1 := main();" "6440#mainENTRY")
		("6435#L13" "call #t~ret0 := rand();" "6436#randENTRY")
		("6442#ULTIMATE.startENTRY" "call ULTIMATE.init();" "6465#ULTIMATE.initFINAL")
		("6445#L13" "call #t~ret0 := rand();" "6436#randENTRY")
		("6446#L13" "call #t~ret0 := rand();" "6436#randENTRY")
		("6447#L13" "call #t~ret0 := rand();" "6436#randENTRY")
		("6448#L13" "call #t~ret0 := rand();" "6436#randENTRY")
		("6449#L13" "call #t~ret0 := rand();" "6436#randENTRY")
		("6450#L13" "call #t~ret0 := rand();" "6436#randENTRY")
		("6451#L13" "call #t~ret0 := rand();" "6436#randENTRY")
		("6452#L13" "call #t~ret0 := rand();" "6436#randENTRY")
		("6453#L13" "call #t~ret0 := rand();" "6436#randENTRY")
	},
	internalTransitions = {
		("6430#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "6432#L13''")
		("6432#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "6485#L13''''")
		("6432#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "6485#L13''''")
		("6433#L13''''" "~i~2 := ~i~2 + 1;" "6434#L12''")
		("6434#L12''" "assume true;" "6437#L12")
		("6436#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "6463#randFINAL")
		("6437#L12" "assume !!(~i~2 < ~n~2);" "6435#L13")
		("6438#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "6439#mainErr0AssertViolation")
		("6440#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "6443#L12''")
		("6443#L12''" "assume true;" "6491#L12")
		("6454#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "6475#L13''")
		("6455#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "6494#L13''")
		("6456#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "6464#L13''")
		("6457#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "6480#L13''")
		("6458#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "6484#L13''")
		("6459#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "6497#L13''")
		("6460#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "6489#L13''")
		("6461#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "6469#L13''")
		("6462#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "6470#L13''")
		("6463#randFINAL" "assume true;" "6444#randEXIT")
		("6464#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "6433#L13''''")
		("6464#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "6433#L13''''")
		("6465#ULTIMATE.initFINAL" "assume true;" "6441#ULTIMATE.initEXIT")
		("6466#L12" "assume !!(~i~2 < ~n~2);" "6452#L13")
		("6466#L12" "assume !(~i~2 < ~n~2);" "6438#L12'''")
		("6467#L12''" "assume true;" "6466#L12")
		("6468#L13''''" "~i~2 := ~i~2 + 1;" "6467#L12''")
		("6469#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "6468#L13''''")
		("6469#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "6468#L13''''")
		("6470#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "6471#L13''''")
		("6470#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "6468#L13''''")
		("6471#L13''''" "~i~2 := ~i~2 + 1;" "6493#L12''")
		("6472#L12" "assume !!(~i~2 < ~n~2);" "6453#L13")
		("6473#L12''" "assume true;" "6472#L12")
		("6474#L13''''" "~i~2 := ~i~2 + 1;" "6473#L12''")
		("6475#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "6476#L13''''")
		("6475#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "6474#L13''''")
		("6476#L13''''" "~i~2 := ~i~2 + 1;" "6496#L12''")
		("6477#L12" "assume !!(~i~2 < ~n~2);" "6445#L13")
		("6478#L12''" "assume true;" "6477#L12")
		("6479#L13''''" "~i~2 := ~i~2 + 1;" "6478#L12''")
		("6480#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "6479#L13''''")
		("6480#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "6476#L13''''")
		("6481#L12" "assume !!(~i~2 < ~n~2);" "6448#L13")
		("6482#L12''" "assume true;" "6481#L12")
		("6483#L13''''" "~i~2 := ~i~2 + 1;" "6482#L12''")
		("6484#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "6483#L13''''")
		("6484#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "6485#L13''''")
		("6485#L13''''" "~i~2 := ~i~2 + 1;" "6499#L12''")
		("6486#L12" "assume !!(~i~2 < ~n~2);" "6449#L13")
		("6487#L12''" "assume true;" "6486#L12")
		("6488#L13''''" "~i~2 := ~i~2 + 1;" "6487#L12''")
		("6489#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "6490#L13''''")
		("6489#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "6488#L13''''")
		("6490#L13''''" "~i~2 := ~i~2 + 1;" "6501#L12''")
		("6491#L12" "assume !!(~i~2 < ~n~2);" "6451#L13")
		("6492#L12" "assume !!(~i~2 < ~n~2);" "6452#L13")
		("6493#L12''" "assume true;" "6492#L12")
		("6494#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "6471#L13''''")
		("6494#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "6471#L13''''")
		("6495#L12" "assume !!(~i~2 < ~n~2);" "6446#L13")
		("6496#L12''" "assume true;" "6495#L12")
		("6497#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "6476#L13''''")
		("6497#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "6476#L13''''")
		("6498#L12" "assume !!(~i~2 < ~n~2);" "6450#L13")
		("6499#L12''" "assume true;" "6498#L12")
		("6500#L12" "assume !!(~i~2 < ~n~2);" "6447#L13")
		("6501#L12''" "assume true;" "6500#L12")
	},
	returnTransitions = {
		("6441#ULTIMATE.initEXIT" "6442#ULTIMATE.startENTRY" "return;" "6431#L1")
		("6444#randEXIT" "6448#L13" "return;" "6457#L13'")
		("6444#randEXIT" "6449#L13" "return;" "6458#L13'")
		("6444#randEXIT" "6450#L13" "return;" "6459#L13'")
		("6444#randEXIT" "6451#L13" "return;" "6460#L13'")
		("6444#randEXIT" "6435#L13" "return;" "6430#L13'")
		("6444#randEXIT" "6452#L13" "return;" "6461#L13'")
		("6444#randEXIT" "6453#L13" "return;" "6462#L13'")
		("6444#randEXIT" "6445#L13" "return;" "6454#L13'")
		("6444#randEXIT" "6446#L13" "return;" "6455#L13'")
		("6444#randEXIT" "6447#L13" "return;" "6456#L13'")
	}
);
