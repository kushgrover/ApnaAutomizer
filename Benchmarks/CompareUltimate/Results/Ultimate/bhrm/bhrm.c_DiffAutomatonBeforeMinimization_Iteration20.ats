// Testfile dumped by Ultimate at 2018/11/19 14:19:14
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"4864#L13'" "4865#L13''" "4866#L13''" "4867#L13''''" "4868#L13''''" "4869#L12''" "4870#L12''" "4871#L12" "4872#L12" "4873#L13" "4874#L13" "4875#L13'" "4876#L13'" "4877#L13''" "4878#L13''" "4879#L13''''" "4880#L13''''" "4881#L12''" "4882#L12''" "4883#L12" "4884#L12" "4885#L13" "4886#L13" "4887#L13'" "4888#L13'" "4889#L13''" "4890#L13''" "4891#L13''''" "4892#L13''''" "4893#L12''" "4894#L12''" "4895#L12" "4896#L12" "4897#L13" "4898#L13" "4899#L13'" "4900#L13'" "4901#L13''" "4902#L13''" "4903#L13''''" "4904#L13''''" "4905#L12''" "4906#L12''" "4907#L12" "4908#L12" "4909#L13" "4911#L12'''" "4912#mainErr0AssertViolation" "4913#L13'" "4914#L13''" "4842#ULTIMATE.startENTRY" "4843#ULTIMATE.initFINAL" "4844#ULTIMATE.initEXIT" "4845#L1" "4846#mainENTRY" "4847#L12''" "4848#L12" "4849#L13" "4850#randENTRY" "4851#randFINAL" "4852#randEXIT" "4853#L13'" "4854#L13''" "4855#L13''''" "4856#L13''''" "4857#L12''" "4858#L12''" "4859#L12" "4860#L12" "4861#L13" "4862#L13" "4863#L13'" },
	initialStates = {"4842#ULTIMATE.startENTRY" },
	finalStates = {"4912#mainErr0AssertViolation" },
	callTransitions = {
		("4873#L13" "call #t~ret0 := rand();" "4850#randENTRY")
		("4874#L13" "call #t~ret0 := rand();" "4850#randENTRY")
		("4885#L13" "call #t~ret0 := rand();" "4850#randENTRY")
		("4886#L13" "call #t~ret0 := rand();" "4850#randENTRY")
		("4897#L13" "call #t~ret0 := rand();" "4850#randENTRY")
		("4898#L13" "call #t~ret0 := rand();" "4850#randENTRY")
		("4909#L13" "call #t~ret0 := rand();" "4850#randENTRY")
		("4842#ULTIMATE.startENTRY" "call ULTIMATE.init();" "4843#ULTIMATE.initFINAL")
		("4845#L1" "call #t~ret1 := main();" "4846#mainENTRY")
		("4849#L13" "call #t~ret0 := rand();" "4850#randENTRY")
		("4861#L13" "call #t~ret0 := rand();" "4850#randENTRY")
		("4862#L13" "call #t~ret0 := rand();" "4850#randENTRY")
	},
	internalTransitions = {
		("4864#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4866#L13''")
		("4865#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4856#L13''''")
		("4865#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4867#L13''''")
		("4866#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4868#L13''''")
		("4866#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4868#L13''''")
		("4867#L13''''" "~i~2 := ~i~2 + 1;" "4869#L12''")
		("4868#L13''''" "~i~2 := ~i~2 + 1;" "4870#L12''")
		("4869#L12''" "assume true;" "4871#L12")
		("4870#L12''" "assume true;" "4872#L12")
		("4871#L12" "assume !!(~i~2 < ~n~2);" "4873#L13")
		("4872#L12" "assume !!(~i~2 < ~n~2);" "4874#L13")
		("4875#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4877#L13''")
		("4876#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4878#L13''")
		("4877#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4868#L13''''")
		("4877#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4879#L13''''")
		("4878#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4880#L13''''")
		("4878#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4880#L13''''")
		("4879#L13''''" "~i~2 := ~i~2 + 1;" "4881#L12''")
		("4880#L13''''" "~i~2 := ~i~2 + 1;" "4882#L12''")
		("4881#L12''" "assume true;" "4883#L12")
		("4882#L12''" "assume true;" "4884#L12")
		("4883#L12" "assume !!(~i~2 < ~n~2);" "4885#L13")
		("4884#L12" "assume !!(~i~2 < ~n~2);" "4886#L13")
		("4887#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4889#L13''")
		("4888#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4890#L13''")
		("4889#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4891#L13''''")
		("4889#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4892#L13''''")
		("4890#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4892#L13''''")
		("4890#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4892#L13''''")
		("4891#L13''''" "~i~2 := ~i~2 + 1;" "4893#L12''")
		("4892#L13''''" "~i~2 := ~i~2 + 1;" "4894#L12''")
		("4893#L12''" "assume true;" "4895#L12")
		("4894#L12''" "assume true;" "4896#L12")
		("4895#L12" "assume !!(~i~2 < ~n~2);" "4897#L13")
		("4896#L12" "assume !!(~i~2 < ~n~2);" "4898#L13")
		("4899#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4901#L13''")
		("4900#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4902#L13''")
		("4901#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4892#L13''''")
		("4901#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4903#L13''''")
		("4902#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4904#L13''''")
		("4902#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4904#L13''''")
		("4903#L13''''" "~i~2 := ~i~2 + 1;" "4905#L12''")
		("4904#L13''''" "~i~2 := ~i~2 + 1;" "4906#L12''")
		("4905#L12''" "assume true;" "4907#L12")
		("4906#L12''" "assume true;" "4908#L12")
		("4907#L12" "assume !!(~i~2 < ~n~2);" "4909#L13")
		("4908#L12" "assume !!(~i~2 < ~n~2);" "4898#L13")
		("4908#L12" "assume !(~i~2 < ~n~2);" "4911#L12'''")
		("4911#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "4912#mainErr0AssertViolation")
		("4913#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4914#L13''")
		("4914#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4904#L13''''")
		("4914#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4904#L13''''")
		("4843#ULTIMATE.initFINAL" "assume true;" "4844#ULTIMATE.initEXIT")
		("4846#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "4847#L12''")
		("4847#L12''" "assume true;" "4848#L12")
		("4848#L12" "assume !!(~i~2 < ~n~2);" "4849#L13")
		("4850#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "4851#randFINAL")
		("4851#randFINAL" "assume true;" "4852#randEXIT")
		("4853#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4854#L13''")
		("4854#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "4855#L13''''")
		("4854#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "4856#L13''''")
		("4855#L13''''" "~i~2 := ~i~2 + 1;" "4857#L12''")
		("4856#L13''''" "~i~2 := ~i~2 + 1;" "4858#L12''")
		("4857#L12''" "assume true;" "4859#L12")
		("4858#L12''" "assume true;" "4860#L12")
		("4859#L12" "assume !!(~i~2 < ~n~2);" "4861#L13")
		("4860#L12" "assume !!(~i~2 < ~n~2);" "4862#L13")
		("4863#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "4865#L13''")
	},
	returnTransitions = {
		("4844#ULTIMATE.initEXIT" "4842#ULTIMATE.startENTRY" "return;" "4845#L1")
		("4852#randEXIT" "4849#L13" "return;" "4853#L13'")
		("4852#randEXIT" "4897#L13" "return;" "4899#L13'")
		("4852#randEXIT" "4898#L13" "return;" "4900#L13'")
		("4852#randEXIT" "4885#L13" "return;" "4887#L13'")
		("4852#randEXIT" "4886#L13" "return;" "4888#L13'")
		("4852#randEXIT" "4873#L13" "return;" "4875#L13'")
		("4852#randEXIT" "4874#L13" "return;" "4876#L13'")
		("4852#randEXIT" "4861#L13" "return;" "4863#L13'")
		("4852#randEXIT" "4909#L13" "return;" "4913#L13'")
		("4852#randEXIT" "4862#L13" "return;" "4864#L13'")
	}
);
