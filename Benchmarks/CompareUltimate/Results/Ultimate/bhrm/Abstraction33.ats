// Testfile dumped by Ultimate at 2018/11/19 14:19:24
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"8960#L12" "8961#L12''" "8962#L13''''" "8963#L13''" "8964#L12" "8965#L12''" "8966#L13''''" "8967#L13''" "8968#L12" "8969#L12" "8970#L12''" "8971#L13''" "8972#L12" "8973#L12''" "8974#L13''" "8975#L12" "8976#L12''" "8977#L13''''" "8978#L12" "8979#L12''" "8908#L13'" "8909#L1" "8910#L13''" "8911#L13''''" "8912#L12''" "8913#L13" "8914#randENTRY" "8915#L12" "8916#L13" "8917#L12'''" "8918#mainErr0AssertViolation" "8919#mainENTRY" "8920#ULTIMATE.initEXIT" "8921#ULTIMATE.startENTRY" "8922#L12''" "8923#randEXIT" "8924#L13" "8925#L13" "8926#L13" "8927#L13" "8928#L13" "8929#L13" "8930#L13" "8931#L13" "8932#L13'" "8933#L13'" "8934#L13'" "8935#L13'" "8936#L13'" "8937#L13'" "8938#L13'" "8939#L13'" "8940#L13'" "8941#randFINAL" "8942#L13''" "8943#L13''''" "8944#ULTIMATE.initFINAL" "8945#L12" "8946#L12''" "8947#L13''''" "8948#L13''" "8949#L13''" "8950#L13''''" "8951#L12" "8952#L12''" "8953#L13''''" "8954#L13''" "8955#L13''''" "8956#L12" "8957#L12''" "8958#L13''''" "8959#L13''" },
	initialStates = {"8921#ULTIMATE.startENTRY" },
	finalStates = {"8918#mainErr0AssertViolation" },
	callTransitions = {
		("8909#L1" "call #t~ret1 := main();" "8919#mainENTRY")
		("8913#L13" "call #t~ret0 := rand();" "8914#randENTRY")
		("8916#L13" "call #t~ret0 := rand();" "8914#randENTRY")
		("8921#ULTIMATE.startENTRY" "call ULTIMATE.init();" "8944#ULTIMATE.initFINAL")
		("8924#L13" "call #t~ret0 := rand();" "8914#randENTRY")
		("8925#L13" "call #t~ret0 := rand();" "8914#randENTRY")
		("8926#L13" "call #t~ret0 := rand();" "8914#randENTRY")
		("8927#L13" "call #t~ret0 := rand();" "8914#randENTRY")
		("8928#L13" "call #t~ret0 := rand();" "8914#randENTRY")
		("8929#L13" "call #t~ret0 := rand();" "8914#randENTRY")
		("8930#L13" "call #t~ret0 := rand();" "8914#randENTRY")
		("8931#L13" "call #t~ret0 := rand();" "8914#randENTRY")
	},
	internalTransitions = {
		("8960#L12" "assume !!(~i~2 < ~n~2);" "8930#L13")
		("8961#L12''" "assume true;" "8960#L12")
		("8962#L13''''" "~i~2 := ~i~2 + 1;" "8961#L12''")
		("8963#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8943#L13''''")
		("8963#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8962#L13''''")
		("8964#L12" "assume !!(~i~2 < ~n~2);" "8924#L13")
		("8965#L12''" "assume true;" "8964#L12")
		("8966#L13''''" "~i~2 := ~i~2 + 1;" "8965#L12''")
		("8967#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8911#L13''''")
		("8967#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8966#L13''''")
		("8968#L12" "assume !!(~i~2 < ~n~2);" "8925#L13")
		("8969#L12" "assume !!(~i~2 < ~n~2);" "8926#L13")
		("8970#L12''" "assume true;" "8969#L12")
		("8971#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8950#L13''''")
		("8971#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8950#L13''''")
		("8972#L12" "assume !!(~i~2 < ~n~2);" "8931#L13")
		("8973#L12''" "assume true;" "8972#L12")
		("8974#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8955#L13''''")
		("8974#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8955#L13''''")
		("8975#L12" "assume !!(~i~2 < ~n~2);" "8928#L13")
		("8976#L12''" "assume true;" "8975#L12")
		("8977#L13''''" "~i~2 := ~i~2 + 1;" "8976#L12''")
		("8978#L12" "assume !!(~i~2 < ~n~2);" "8913#L13")
		("8979#L12''" "assume true;" "8978#L12")
		("8908#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8910#L13''")
		("8910#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8977#L13''''")
		("8910#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8977#L13''''")
		("8911#L13''''" "~i~2 := ~i~2 + 1;" "8912#L12''")
		("8912#L12''" "assume true;" "8915#L12")
		("8914#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "8941#randFINAL")
		("8915#L12" "assume !!(~i~2 < ~n~2);" "8916#L13")
		("8917#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "8918#mainErr0AssertViolation")
		("8919#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "8922#L12''")
		("8922#L12''" "assume true;" "8968#L12")
		("8932#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8942#L13''")
		("8933#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8963#L13''")
		("8934#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8967#L13''")
		("8935#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8948#L13''")
		("8936#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8949#L13''")
		("8937#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8974#L13''")
		("8938#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8954#L13''")
		("8939#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8959#L13''")
		("8940#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "8971#L13''")
		("8941#randFINAL" "assume true;" "8923#randEXIT")
		("8942#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8943#L13''''")
		("8942#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8943#L13''''")
		("8943#L13''''" "~i~2 := ~i~2 + 1;" "8979#L12''")
		("8944#ULTIMATE.initFINAL" "assume true;" "8920#ULTIMATE.initEXIT")
		("8945#L12" "assume !!(~i~2 < ~n~2);" "8926#L13")
		("8945#L12" "assume !(~i~2 < ~n~2);" "8917#L12'''")
		("8946#L12''" "assume true;" "8945#L12")
		("8947#L13''''" "~i~2 := ~i~2 + 1;" "8946#L12''")
		("8948#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8947#L13''''")
		("8948#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8947#L13''''")
		("8949#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8950#L13''''")
		("8949#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8947#L13''''")
		("8950#L13''''" "~i~2 := ~i~2 + 1;" "8970#L12''")
		("8951#L12" "assume !!(~i~2 < ~n~2);" "8927#L13")
		("8952#L12''" "assume true;" "8951#L12")
		("8953#L13''''" "~i~2 := ~i~2 + 1;" "8952#L12''")
		("8954#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8955#L13''''")
		("8954#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8953#L13''''")
		("8955#L13''''" "~i~2 := ~i~2 + 1;" "8973#L12''")
		("8956#L12" "assume !!(~i~2 < ~n~2);" "8929#L13")
		("8957#L12''" "assume true;" "8956#L12")
		("8958#L13''''" "~i~2 := ~i~2 + 1;" "8957#L12''")
		("8959#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "8958#L13''''")
		("8959#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "8955#L13''''")
	},
	returnTransitions = {
		("8920#ULTIMATE.initEXIT" "8921#ULTIMATE.startENTRY" "return;" "8909#L1")
		("8923#randEXIT" "8928#L13" "return;" "8937#L13'")
		("8923#randEXIT" "8913#L13" "return;" "8908#L13'")
		("8923#randEXIT" "8929#L13" "return;" "8938#L13'")
		("8923#randEXIT" "8930#L13" "return;" "8939#L13'")
		("8923#randEXIT" "8931#L13" "return;" "8940#L13'")
		("8923#randEXIT" "8916#L13" "return;" "8932#L13'")
		("8923#randEXIT" "8924#L13" "return;" "8933#L13'")
		("8923#randEXIT" "8925#L13" "return;" "8934#L13'")
		("8923#randEXIT" "8926#L13" "return;" "8935#L13'")
		("8923#randEXIT" "8927#L13" "return;" "8936#L13'")
	}
);
