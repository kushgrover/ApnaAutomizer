// Testfile dumped by Ultimate at 2018/11/19 14:19:09
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"3456#L13''" "3457#L13''" "3458#L13''''" "3459#L12" "3460#L12''" "3461#L13''''" "3462#L13''" "3463#L12" "3464#L12''" "3465#L13''''" "3466#L13''" "3467#L13''''" "3468#L12" "3469#L12''" "3470#L13''''" "3471#L13''" "3472#L12" "3473#L12''" "3474#L13''''" "3475#L13''" "3476#L12" "3477#L12" "3478#L12''" "3479#L13''" "3480#L12" "3481#L12''" "3482#L12" "3483#L12''" "3418#L13'" "3419#L1" "3420#L13''" "3421#L13''''" "3422#L12''" "3423#L13" "3424#randENTRY" "3425#L12" "3426#L13" "3427#L12'''" "3428#mainErr0AssertViolation" "3429#mainENTRY" "3430#ULTIMATE.initEXIT" "3431#ULTIMATE.startENTRY" "3432#L12''" "3433#randEXIT" "3434#L13" "3435#L13" "3436#L13" "3437#L13" "3438#L13" "3439#L13" "3440#L13" "3441#L13'" "3442#L13'" "3443#L13'" "3444#L13'" "3445#L13'" "3446#L13'" "3447#L13'" "3448#L13'" "3449#randFINAL" "3450#L13''" "3451#L13''''" "3452#ULTIMATE.initFINAL" "3453#L12" "3454#L12''" "3455#L13''''" },
	initialStates = {"3431#ULTIMATE.startENTRY" },
	finalStates = {"3428#mainErr0AssertViolation" },
	callTransitions = {
		("3419#L1" "call #t~ret1 := main();" "3429#mainENTRY")
		("3423#L13" "call #t~ret0 := rand();" "3424#randENTRY")
		("3426#L13" "call #t~ret0 := rand();" "3424#randENTRY")
		("3431#ULTIMATE.startENTRY" "call ULTIMATE.init();" "3452#ULTIMATE.initFINAL")
		("3434#L13" "call #t~ret0 := rand();" "3424#randENTRY")
		("3435#L13" "call #t~ret0 := rand();" "3424#randENTRY")
		("3436#L13" "call #t~ret0 := rand();" "3424#randENTRY")
		("3437#L13" "call #t~ret0 := rand();" "3424#randENTRY")
		("3438#L13" "call #t~ret0 := rand();" "3424#randENTRY")
		("3439#L13" "call #t~ret0 := rand();" "3424#randENTRY")
		("3440#L13" "call #t~ret0 := rand();" "3424#randENTRY")
	},
	internalTransitions = {
		("3456#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3455#L13''''")
		("3456#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3455#L13''''")
		("3457#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3458#L13''''")
		("3457#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3455#L13''''")
		("3458#L13''''" "~i~2 := ~i~2 + 1;" "3478#L12''")
		("3459#L12" "assume !!(~i~2 < ~n~2);" "3438#L13")
		("3460#L12''" "assume true;" "3459#L12")
		("3461#L13''''" "~i~2 := ~i~2 + 1;" "3460#L12''")
		("3462#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3461#L13''''")
		("3462#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3458#L13''''")
		("3463#L12" "assume !!(~i~2 < ~n~2);" "3439#L13")
		("3464#L12''" "assume true;" "3463#L12")
		("3465#L13''''" "~i~2 := ~i~2 + 1;" "3464#L12''")
		("3466#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3465#L13''''")
		("3466#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3467#L13''''")
		("3467#L13''''" "~i~2 := ~i~2 + 1;" "3481#L12''")
		("3468#L12" "assume !!(~i~2 < ~n~2);" "3434#L13")
		("3469#L12''" "assume true;" "3468#L12")
		("3470#L13''''" "~i~2 := ~i~2 + 1;" "3469#L12''")
		("3471#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3421#L13''''")
		("3471#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3470#L13''''")
		("3472#L12" "assume !!(~i~2 < ~n~2);" "3435#L13")
		("3473#L12''" "assume true;" "3472#L12")
		("3474#L13''''" "~i~2 := ~i~2 + 1;" "3473#L12''")
		("3475#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3474#L13''''")
		("3475#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3421#L13''''")
		("3476#L12" "assume !!(~i~2 < ~n~2);" "3437#L13")
		("3477#L12" "assume !!(~i~2 < ~n~2);" "3436#L13")
		("3478#L12''" "assume true;" "3477#L12")
		("3479#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3458#L13''''")
		("3479#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3458#L13''''")
		("3480#L12" "assume !!(~i~2 < ~n~2);" "3440#L13")
		("3481#L12''" "assume true;" "3480#L12")
		("3482#L12" "assume !!(~i~2 < ~n~2);" "3423#L13")
		("3483#L12''" "assume true;" "3482#L12")
		("3418#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3420#L13''")
		("3420#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3467#L13''''")
		("3420#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3467#L13''''")
		("3421#L13''''" "~i~2 := ~i~2 + 1;" "3422#L12''")
		("3422#L12''" "assume true;" "3425#L12")
		("3424#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "3449#randFINAL")
		("3425#L12" "assume !!(~i~2 < ~n~2);" "3426#L13")
		("3427#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "3428#mainErr0AssertViolation")
		("3429#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "3432#L12''")
		("3432#L12''" "assume true;" "3476#L12")
		("3441#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3466#L13''")
		("3442#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3471#L13''")
		("3443#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3456#L13''")
		("3444#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3450#L13''")
		("3445#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3475#L13''")
		("3446#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3457#L13''")
		("3447#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3462#L13''")
		("3448#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "3479#L13''")
		("3449#randFINAL" "assume true;" "3433#randEXIT")
		("3450#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "3451#L13''''")
		("3450#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "3451#L13''''")
		("3451#L13''''" "~i~2 := ~i~2 + 1;" "3483#L12''")
		("3452#ULTIMATE.initFINAL" "assume true;" "3430#ULTIMATE.initEXIT")
		("3453#L12" "assume !!(~i~2 < ~n~2);" "3436#L13")
		("3453#L12" "assume !(~i~2 < ~n~2);" "3427#L12'''")
		("3454#L12''" "assume true;" "3453#L12")
		("3455#L13''''" "~i~2 := ~i~2 + 1;" "3454#L12''")
	},
	returnTransitions = {
		("3430#ULTIMATE.initEXIT" "3431#ULTIMATE.startENTRY" "return;" "3419#L1")
		("3433#randEXIT" "3440#L13" "return;" "3448#L13'")
		("3433#randEXIT" "3426#L13" "return;" "3444#L13'")
		("3433#randEXIT" "3434#L13" "return;" "3441#L13'")
		("3433#randEXIT" "3435#L13" "return;" "3442#L13'")
		("3433#randEXIT" "3436#L13" "return;" "3443#L13'")
		("3433#randEXIT" "3437#L13" "return;" "3445#L13'")
		("3433#randEXIT" "3438#L13" "return;" "3446#L13'")
		("3433#randEXIT" "3423#L13" "return;" "3418#L13'")
		("3433#randEXIT" "3439#L13" "return;" "3447#L13'")
	}
);
