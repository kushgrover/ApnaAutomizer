// Testfile dumped by Ultimate at 2018/11/19 14:19:22
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret1 := main();" "call #t~ret0 := rand();" },
	internalAlphabet = {"havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "assume true;" "assume true;" "assume true;" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "assume true;" "assume !(~i~2 < ~n~2);" "assume !!(~i~2 < ~n~2);" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "~i~2 := ~i~2 + 1;" "assume !true;" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "assume ~a~2 + ~b~2 == 3 * ~n~2;#res := 0;" "assume true;" },
	returnAlphabet = {"return;" "return;" "return;" },
	states = {"7680#L13" "7681#L12'''" "7682#mainErr0AssertViolation" "7683#mainENTRY" "7684#ULTIMATE.initEXIT" "7685#ULTIMATE.startENTRY" "7686#L12''" "7687#randEXIT" "7688#L13" "7689#L13" "7690#L13" "7691#L13" "7692#L13" "7693#L13" "7694#L13" "7695#L13" "7696#L13'" "7697#L13'" "7698#L13'" "7699#L13'" "7700#L13'" "7701#L13'" "7702#L13'" "7703#L13'" "7704#L13'" "7705#randFINAL" "7706#L13''" "7707#L13''''" "7708#ULTIMATE.initFINAL" "7709#L12" "7710#L12''" "7711#L13''''" "7712#L13''" "7713#L13''" "7714#L13''''" "7715#L12" "7716#L12''" "7717#L13''''" "7718#L13''" "7719#L13''''" "7720#L12" "7721#L12''" "7722#L13''''" "7723#L13''" "7724#L13''''" "7725#L12" "7726#L12''" "7727#L13''''" "7728#L13''" "7729#L12" "7730#L12''" "7731#L13''''" "7732#L13''" "7733#L12" "7734#L12" "7735#L12''" "7736#L13''" "7737#L12" "7738#L12''" "7739#L13''" "7740#L12" "7741#L12''" "7742#L12" "7743#L12''" "7672#L13'" "7673#L1" "7674#L13''" "7675#L13''''" "7676#L12''" "7677#L13" "7678#randENTRY" "7679#L12" },
	initialStates = {"7685#ULTIMATE.startENTRY" },
	finalStates = {"7682#mainErr0AssertViolation" },
	callTransitions = {
		("7680#L13" "call #t~ret0 := rand();" "7678#randENTRY")
		("7685#ULTIMATE.startENTRY" "call ULTIMATE.init();" "7708#ULTIMATE.initFINAL")
		("7688#L13" "call #t~ret0 := rand();" "7678#randENTRY")
		("7689#L13" "call #t~ret0 := rand();" "7678#randENTRY")
		("7690#L13" "call #t~ret0 := rand();" "7678#randENTRY")
		("7691#L13" "call #t~ret0 := rand();" "7678#randENTRY")
		("7692#L13" "call #t~ret0 := rand();" "7678#randENTRY")
		("7693#L13" "call #t~ret0 := rand();" "7678#randENTRY")
		("7694#L13" "call #t~ret0 := rand();" "7678#randENTRY")
		("7695#L13" "call #t~ret0 := rand();" "7678#randENTRY")
		("7673#L1" "call #t~ret1 := main();" "7683#mainENTRY")
		("7677#L13" "call #t~ret0 := rand();" "7678#randENTRY")
	},
	internalTransitions = {
		("7681#L12'''" "assume !(~a~2 + ~b~2 == 3 * ~n~2);" "7682#mainErr0AssertViolation")
		("7683#mainENTRY" "havoc ~i~2;havoc ~n~2;havoc ~a~2;havoc ~b~2;~i~2 := 0;~a~2 := 0;~b~2 := 0;~n~2 := 5;" "7686#L12''")
		("7686#L12''" "assume true;" "7733#L12")
		("7696#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7732#L13''")
		("7697#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7712#L13''")
		("7698#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7713#L13''")
		("7699#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7718#L13''")
		("7700#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7736#L13''")
		("7701#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7706#L13''")
		("7702#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7723#L13''")
		("7703#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7728#L13''")
		("7704#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7739#L13''")
		("7705#randFINAL" "assume true;" "7687#randEXIT")
		("7706#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7707#L13''''")
		("7706#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7707#L13''''")
		("7707#L13''''" "~i~2 := ~i~2 + 1;" "7743#L12''")
		("7708#ULTIMATE.initFINAL" "assume true;" "7684#ULTIMATE.initEXIT")
		("7709#L12" "assume !!(~i~2 < ~n~2);" "7689#L13")
		("7709#L12" "assume !(~i~2 < ~n~2);" "7681#L12'''")
		("7710#L12''" "assume true;" "7709#L12")
		("7711#L13''''" "~i~2 := ~i~2 + 1;" "7710#L12''")
		("7712#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7711#L13''''")
		("7712#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7711#L13''''")
		("7713#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7714#L13''''")
		("7713#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7711#L13''''")
		("7714#L13''''" "~i~2 := ~i~2 + 1;" "7735#L12''")
		("7715#L12" "assume !!(~i~2 < ~n~2);" "7690#L13")
		("7716#L12''" "assume true;" "7715#L12")
		("7717#L13''''" "~i~2 := ~i~2 + 1;" "7716#L12''")
		("7718#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7719#L13''''")
		("7718#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7717#L13''''")
		("7719#L13''''" "~i~2 := ~i~2 + 1;" "7738#L12''")
		("7720#L12" "assume !!(~i~2 < ~n~2);" "7691#L13")
		("7721#L12''" "assume true;" "7720#L12")
		("7722#L13''''" "~i~2 := ~i~2 + 1;" "7721#L12''")
		("7723#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7724#L13''''")
		("7723#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7722#L13''''")
		("7724#L13''''" "~i~2 := ~i~2 + 1;" "7741#L12''")
		("7725#L12" "assume !!(~i~2 < ~n~2);" "7693#L13")
		("7726#L12''" "assume true;" "7725#L12")
		("7727#L13''''" "~i~2 := ~i~2 + 1;" "7726#L12''")
		("7728#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7727#L13''''")
		("7728#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7724#L13''''")
		("7729#L12" "assume !!(~i~2 < ~n~2);" "7694#L13")
		("7730#L12''" "assume true;" "7729#L12")
		("7731#L13''''" "~i~2 := ~i~2 + 1;" "7730#L12''")
		("7732#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7675#L13''''")
		("7732#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7731#L13''''")
		("7733#L12" "assume !!(~i~2 < ~n~2);" "7688#L13")
		("7734#L12" "assume !!(~i~2 < ~n~2);" "7689#L13")
		("7735#L12''" "assume true;" "7734#L12")
		("7736#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7714#L13''''")
		("7736#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7714#L13''''")
		("7737#L12" "assume !!(~i~2 < ~n~2);" "7692#L13")
		("7738#L12''" "assume true;" "7737#L12")
		("7739#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7719#L13''''")
		("7739#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7719#L13''''")
		("7740#L12" "assume !!(~i~2 < ~n~2);" "7695#L13")
		("7741#L12''" "assume true;" "7740#L12")
		("7742#L12" "assume !!(~i~2 < ~n~2);" "7677#L13")
		("7743#L12''" "assume true;" "7742#L12")
		("7672#L13'" "assume -2147483648 <= #t~ret0 && #t~ret0 <= 2147483647;" "7674#L13''")
		("7674#L13''" "assume #t~ret0 != 0;havoc #t~ret0;~a~2 := ~a~2 + 1;~b~2 := ~b~2 + 2;" "7724#L13''''")
		("7674#L13''" "assume !(#t~ret0 != 0);havoc #t~ret0;~a~2 := ~a~2 + 2;~b~2 := ~b~2 + 1;" "7724#L13''''")
		("7675#L13''''" "~i~2 := ~i~2 + 1;" "7676#L12''")
		("7676#L12''" "assume true;" "7679#L12")
		("7678#randENTRY" "havoc ~x~1;#res := (if ~x~1 < 0 && ~x~1 % 2 != 0 then ~x~1 % 2 - 2 else ~x~1 % 2);" "7705#randFINAL")
		("7679#L12" "assume !!(~i~2 < ~n~2);" "7680#L13")
	},
	returnTransitions = {
		("7684#ULTIMATE.initEXIT" "7685#ULTIMATE.startENTRY" "return;" "7673#L1")
		("7687#randEXIT" "7680#L13" "return;" "7701#L13'")
		("7687#randEXIT" "7688#L13" "return;" "7696#L13'")
		("7687#randEXIT" "7689#L13" "return;" "7697#L13'")
		("7687#randEXIT" "7690#L13" "return;" "7698#L13'")
		("7687#randEXIT" "7691#L13" "return;" "7699#L13'")
		("7687#randEXIT" "7692#L13" "return;" "7700#L13'")
		("7687#randEXIT" "7677#L13" "return;" "7672#L13'")
		("7687#randEXIT" "7693#L13" "return;" "7702#L13'")
		("7687#randEXIT" "7694#L13" "return;" "7703#L13'")
		("7687#randEXIT" "7695#L13" "return;" "7704#L13'")
	}
);
