// Testfile dumped by Ultimate at 2018/11/19 14:41:54
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret0 := main();" },
	internalAlphabet = {"assume ~k~1 % 4294967296 == 3 * ~i~1 % 4294967296 && ~j~1 % 4294967296 == 2 * ~i~1 % 4294967296;" "assume true;" "assume !true;" "assume true;" "assume true;" "~i~1 := 0;~j~1 := 0;~k~1 := 0;" "assume true;" "assume !(~k~1 % 4294967296 < 60);" "assume !!(~k~1 % 4294967296 < 60);~i~1 := ~i~1 + 1;~j~1 := ~j~1 + 2;~k~1 := ~k~1 + 3;" "assume !(~k~1 % 4294967296 == 3 * ~i~1 % 4294967296 && ~j~1 % 4294967296 == 2 * ~i~1 % 4294967296);" },
	returnAlphabet = {"return;" "return;" },
	states = {"71#true" "72#false" "88#(and (= main_~j~1 0) (= main_~k~1 0) (= main_~i~1 0))" "105#(and (= main_~i~1 2) (= main_~k~1 6) (= main_~j~1 4))" "95#(and (= main_~i~1 1) (= main_~k~1 3) (= main_~j~1 2))" },
	initialStates = {"71#true" },
	finalStates = {"72#false" },
	callTransitions = {
		("71#true" "call ULTIMATE.init();" "71#true")
		("71#true" "call #t~ret0 := main();" "71#true")
		("72#false" "call ULTIMATE.init();" "72#false")
		("72#false" "call #t~ret0 := main();" "72#false")
	},
	internalTransitions = {
		("71#true" "assume true;" "71#true")
		("71#true" "~i~1 := 0;~j~1 := 0;~k~1 := 0;" "88#(and (= main_~j~1 0) (= main_~k~1 0) (= main_~i~1 0))")
		("72#false" "assume ~k~1 % 4294967296 == 3 * ~i~1 % 4294967296 && ~j~1 % 4294967296 == 2 * ~i~1 % 4294967296;" "72#false")
		("72#false" "assume true;" "72#false")
		("72#false" "assume !true;" "72#false")
		("72#false" "assume true;" "72#false")
		("72#false" "assume true;" "72#false")
		("72#false" "~i~1 := 0;~j~1 := 0;~k~1 := 0;" "72#false")
		("72#false" "assume true;" "72#false")
		("72#false" "assume !(~k~1 % 4294967296 < 60);" "72#false")
		("72#false" "assume !!(~k~1 % 4294967296 < 60);~i~1 := ~i~1 + 1;~j~1 := ~j~1 + 2;~k~1 := ~k~1 + 3;" "72#false")
		("72#false" "assume !(~k~1 % 4294967296 == 3 * ~i~1 % 4294967296 && ~j~1 % 4294967296 == 2 * ~i~1 % 4294967296);" "72#false")
		("88#(and (= main_~j~1 0) (= main_~k~1 0) (= main_~i~1 0))" "assume true;" "88#(and (= main_~j~1 0) (= main_~k~1 0) (= main_~i~1 0))")
		("88#(and (= main_~j~1 0) (= main_~k~1 0) (= main_~i~1 0))" "assume !!(~k~1 % 4294967296 < 60);~i~1 := ~i~1 + 1;~j~1 := ~j~1 + 2;~k~1 := ~k~1 + 3;" "95#(and (= main_~i~1 1) (= main_~k~1 3) (= main_~j~1 2))")
		("105#(and (= main_~i~1 2) (= main_~k~1 6) (= main_~j~1 4))" "assume !(~k~1 % 4294967296 == 3 * ~i~1 % 4294967296 && ~j~1 % 4294967296 == 2 * ~i~1 % 4294967296);" "72#false")
		("95#(and (= main_~i~1 1) (= main_~k~1 3) (= main_~j~1 2))" "assume ~k~1 % 4294967296 == 3 * ~i~1 % 4294967296 && ~j~1 % 4294967296 == 2 * ~i~1 % 4294967296;" "95#(and (= main_~i~1 1) (= main_~k~1 3) (= main_~j~1 2))")
		("95#(and (= main_~i~1 1) (= main_~k~1 3) (= main_~j~1 2))" "assume true;" "95#(and (= main_~i~1 1) (= main_~k~1 3) (= main_~j~1 2))")
		("95#(and (= main_~i~1 1) (= main_~k~1 3) (= main_~j~1 2))" "assume !!(~k~1 % 4294967296 < 60);~i~1 := ~i~1 + 1;~j~1 := ~j~1 + 2;~k~1 := ~k~1 + 3;" "105#(and (= main_~i~1 2) (= main_~k~1 6) (= main_~j~1 4))")
	},
	returnTransitions = {
		("71#true" "71#true" "return;" "71#true")
		("72#false" "72#false" "return;" "72#false")
		("72#false" "72#false" "return;" "72#false")
	}
);
