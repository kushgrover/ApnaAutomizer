(set-option :timeout |900000|)
(set-option :produce-els true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-e true)
(set-option :proof-transformation LU)
(set-logic QF_AUFLIRA)
(set-info :source |
    SMT script generated on 2018/11/19 by Ultimate. http://ultimate.informatik.uni-freiburg.de/
|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(assert true)
(echo "starting trace check")
(push 1)
(declare-fun ~j~1_4 () Int)
(declare-fun ~k~1_4 () Int)
(declare-fun ~i~1_4 () Int)
(declare-fun ~j~1_6 () Int)
(declare-fun ~k~1_6 () Int)
(declare-fun ~i~1_6 () Int)
(declare-fun ~j~1_9 () Int)
(declare-fun ~k~1_9 () Int)
(declare-fun ~i~1_9 () Int)
(assert (! true :named ssa_precond_conjunct0))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall_conjunct0))
(assert (! true :named ssa_0_LocVarAssigCall_conjunct0))
(assert (! true :named ssa_0_OldVarAssigCall_conjunct0))
(assert (! true :named ssa_1_conjunct0))
(assert (! true :named ssa_2_return_conjunct0))
(assert (! true :named ssa_3_GlobVarAssigCall_conjunct0))
(assert (! true :named ssa_3_LocVarAssigCall_conjunct0))
(assert (! true :named ssa_3_OldVarAssigCall_conjunct0))
(assert (! (<= ~i~1_4 0) :named ssa_4_conjunct0))
(assert (! (>= ~i~1_4 0) :named ssa_4_conjunct1))
(assert (! (<= ~k~1_4 0) :named ssa_4_conjunct2))
(assert (! (>= ~k~1_4 0) :named ssa_4_conjunct3))
(assert (! (<= ~j~1_4 0) :named ssa_4_conjunct4))
(assert (! (>= ~j~1_4 0) :named ssa_4_conjunct5))
(assert (! true :named ssa_5_conjunct0))
(assert (! (< ( ~k~1_4 ) 60) :named ssa_6_conjunct0))
(assert (! (<= ~k~1_6 (+ ~k~1_4 3)) :named ssa_6_conjunct1))
(assert (! (>= ~k~1_6 (+ ~k~1_4 3)) :named ssa_6_conjunct2))
(assert (! (<= ~j~1_6 (+ ~j~1_4 2)) :named ssa_6_conjunct3))
(assert (! (>= ~j~1_6 (+ ~j~1_4 2)) :named ssa_6_conjunct4))
(assert (! (<= ~i~1_6 (+ ~i~1_4 1)) :named ssa_6_conjunct5))
(assert (! (>= ~i~1_6 (+ ~i~1_4 1)) :named ssa_6_conjunct6))
(assert (! (<= ( ~k~1_6 ) ( (* 3 ~i~1_6) )) :named ssa_7_conjunct0))
(assert (! (>= ( ~k~1_6 ) ( (* 3 ~i~1_6) )) :named ssa_7_conjunct1))
(assert (! (<= ( (* 2 ~i~1_6) ) ( ~j~1_6 )) :named ssa_7_conjunct2))
(assert (! (>= ( (* 2 ~i~1_6) ) ( ~j~1_6 )) :named ssa_7_conjunct3))
(assert (! true :named ssa_8_conjunct0))
(assert (! (< ( ~k~1_6 ) 60) :named ssa_9_conjunct0))
(assert (! (<= ~k~1_9 (+ ~k~1_6 3)) :named ssa_9_conjunct1))
(assert (! (>= ~k~1_9 (+ ~k~1_6 3)) :named ssa_9_conjunct2))
(assert (! (<= ~j~1_9 (+ ~j~1_6 2)) :named ssa_9_conjunct3))
(assert (! (>= ~j~1_9 (+ ~j~1_6 2)) :named ssa_9_conjunct4))
(assert (! (<= ~i~1_9 (+ ~i~1_6 1)) :named ssa_9_conjunct5))
(assert (! (>= ~i~1_9 (+ ~i~1_6 1)) :named ssa_9_conjunct6))
(assert (! (or (not (= ( (* 3 ~i~1_9) ) ( ~k~1_9 ))) (not (= ( (* 2 ~i~1_9) ) ( ~j~1_9 )))) :named ssa_10_conjunct0))
(check-sat)
(get-unsat-core)
(echo "finished trace check")
(pop 1)
(exit)
