// Testfile dumped by Ultimate at 2018/11/19 14:33:57
//
// 

NestedWordAutomaton nwa = (
	callAlphabet = {"call ULTIMATE.init();" "call #t~ret2 := main();" },
	internalAlphabet = {"assume !(~k~1 % 4294967296 == 36);" "assume true;" "assume ~k~1 % 4294967296 == 36;" "assume true;" "assume true;" "~i~1 := 0;~j~1 := 0;~k~1 := 0;~i~1 := 1;" "assume true;" "assume !(~i~1 % 4294967296 <= 3);" "assume !!(~i~1 % 4294967296 <= 3);~j~1 := 1;" "assume true;" "assume !(~j~1 % 4294967296 <= 3);" "assume !!(~j~1 % 4294967296 <= 3);~k~1 := ~i~1 + ~j~1 + ~k~1;" "#t~post1 := ~j~1;~j~1 := #t~post1 + 1;havoc #t~post1;" "assume !true;" "#t~post0 := ~i~1;~i~1 := #t~post0 + 1;havoc #t~post0;" "assume !true;" },
	returnAlphabet = {"return;" "return;" },
	states = {"576#L10'''" "577#L10'''" "578#L10" "579#L10'''" "580#L10''" "581#L10" "582#L10'''" "583#L10''" "584#L10" "585#L9" "586#L10" "587#L10'''" "588#L10" "552#L1" "553#mainENTRY" "554#L9''" "555#L9'''" "556#L10''" "557#L10'''" "558#L9'''" "559#L9" "560#mainErr0AssertViolation" "561#ULTIMATE.initEXIT" "562#ULTIMATE.startENTRY" "563#L9''''" "564#ULTIMATE.initFINAL" "565#L10'''" "566#L10" "567#L10''" "568#L9" "569#L10'''" "570#L9'''" "571#L9''" "572#L10" "573#L10''" "574#L10" "575#L10''" },
	initialStates = {"562#ULTIMATE.startENTRY" },
	finalStates = {"560#mainErr0AssertViolation" },
	callTransitions = {
		("552#L1" "call #t~ret2 := main();" "553#mainENTRY")
		("562#ULTIMATE.startENTRY" "call ULTIMATE.init();" "564#ULTIMATE.initFINAL")
	},
	internalTransitions = {
		("576#L10'''" "assume true;" "572#L10")
		("577#L10'''" "assume true;" "574#L10")
		("578#L10" "assume !!(~j~1 % 4294967296 <= 3);~k~1 := ~i~1 + ~j~1 + ~k~1;" "575#L10''")
		("579#L10'''" "assume true;" "578#L10")
		("580#L10''" "#t~post1 := ~j~1;~j~1 := #t~post1 + 1;havoc #t~post1;" "579#L10'''")
		("581#L10" "assume !!(~j~1 % 4294967296 <= 3);~k~1 := ~i~1 + ~j~1 + ~k~1;" "580#L10''")
		("582#L10'''" "assume true;" "581#L10")
		("583#L10''" "#t~post1 := ~j~1;~j~1 := #t~post1 + 1;havoc #t~post1;" "582#L10'''")
		("584#L10" "assume !!(~j~1 % 4294967296 <= 3);~k~1 := ~i~1 + ~j~1 + ~k~1;" "583#L10''")
		("585#L9" "assume !!(~i~1 % 4294967296 <= 3);~j~1 := 1;" "569#L10'''")
		("586#L10" "assume !!(~j~1 % 4294967296 <= 3);~k~1 := ~i~1 + ~j~1 + ~k~1;" "573#L10''")
		("587#L10'''" "assume true;" "586#L10")
		("588#L10" "assume !!(~j~1 % 4294967296 <= 3);~k~1 := ~i~1 + ~j~1 + ~k~1;" "556#L10''")
		("553#mainENTRY" "~i~1 := 0;~j~1 := 0;~k~1 := 0;~i~1 := 1;" "558#L9'''")
		("554#L9''" "#t~post0 := ~i~1;~i~1 := #t~post0 + 1;havoc #t~post0;" "555#L9'''")
		("555#L9'''" "assume true;" "585#L9")
		("556#L10''" "#t~post1 := ~j~1;~j~1 := #t~post1 + 1;havoc #t~post1;" "557#L10'''")
		("557#L10'''" "assume true;" "566#L10")
		("558#L9'''" "assume true;" "559#L9")
		("559#L9" "assume !!(~i~1 % 4294967296 <= 3);~j~1 := 1;" "565#L10'''")
		("563#L9''''" "assume !(~k~1 % 4294967296 == 36);" "560#mainErr0AssertViolation")
		("564#ULTIMATE.initFINAL" "assume true;" "561#ULTIMATE.initEXIT")
		("565#L10'''" "assume true;" "588#L10")
		("566#L10" "assume !!(~j~1 % 4294967296 <= 3);~k~1 := ~i~1 + ~j~1 + ~k~1;" "567#L10''")
		("567#L10''" "#t~post1 := ~j~1;~j~1 := #t~post1 + 1;havoc #t~post1;" "587#L10'''")
		("568#L9" "assume !(~i~1 % 4294967296 <= 3);" "563#L9''''")
		("568#L9" "assume !!(~i~1 % 4294967296 <= 3);~j~1 := 1;" "569#L10'''")
		("569#L10'''" "assume true;" "584#L10")
		("570#L9'''" "assume true;" "568#L9")
		("571#L9''" "#t~post0 := ~i~1;~i~1 := #t~post0 + 1;havoc #t~post0;" "570#L9'''")
		("572#L10" "assume !(~j~1 % 4294967296 <= 3);" "554#L9''")
		("572#L10" "assume !!(~j~1 % 4294967296 <= 3);~k~1 := ~i~1 + ~j~1 + ~k~1;" "573#L10''")
		("573#L10''" "#t~post1 := ~j~1;~j~1 := #t~post1 + 1;havoc #t~post1;" "576#L10'''")
		("574#L10" "assume !(~j~1 % 4294967296 <= 3);" "571#L9''")
		("574#L10" "assume !!(~j~1 % 4294967296 <= 3);~k~1 := ~i~1 + ~j~1 + ~k~1;" "575#L10''")
		("575#L10''" "#t~post1 := ~j~1;~j~1 := #t~post1 + 1;havoc #t~post1;" "577#L10'''")
	},
	returnTransitions = {
		("561#ULTIMATE.initEXIT" "562#ULTIMATE.startENTRY" "return;" "552#L1")
	}
);
